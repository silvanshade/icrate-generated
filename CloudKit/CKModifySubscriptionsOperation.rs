//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CKDatabaseOperation,
    unsafe inherits = [
        CKOperation,
        NSOperation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKModifySubscriptionsOperation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKModifySubscriptionsOperation;
}

#[cfg(feature = "CloudKit_CKModifySubscriptionsOperation")]
unsafe impl NSObjectProtocol for CKModifySubscriptionsOperation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKModifySubscriptionsOperation")]
    pub type CKModifySubscriptionsOperation;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSArray"))]
    #[objc2::method(
        sel = "initWithSubscriptionsToSave:subscriptionIDsToDelete:",
        managed = "Init"
    )]
    pub unsafe fn initWithSubscriptionsToSave_subscriptionIDsToDelete(
        this: Option<Allocated<Self>>,
        subscriptions_to_save: Option<&NSArray<CKSubscription>>,
        subscription_i_ds_to_delete: Option<&NSArray<CKSubscriptionID>>,
    ) -> Id<Self>;

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "subscriptionsToSave", managed = "Other")]
    pub unsafe fn subscriptionsToSave(&self) -> Option<Id<NSArray<CKSubscription>>>;

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "setSubscriptionsToSave:")]
    pub unsafe fn setSubscriptionsToSave(
        &self,
        subscriptions_to_save: Option<&NSArray<CKSubscription>>,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "subscriptionIDsToDelete", managed = "Other")]
    pub unsafe fn subscriptionIDsToDelete(&self) -> Option<Id<NSArray<CKSubscriptionID>>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setSubscriptionIDsToDelete:")]
    pub unsafe fn setSubscriptionIDsToDelete(
        &self,
        subscription_i_ds_to_delete: Option<&NSArray<CKSubscriptionID>>,
    );

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "perSubscriptionSaveBlock")]
    pub unsafe fn perSubscriptionSaveBlock(
        &self,
    ) -> *mut Block<(NonNull<CKSubscriptionID>, *mut CKSubscription, *mut NSError), ()>;

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "setPerSubscriptionSaveBlock:")]
    pub unsafe fn setPerSubscriptionSaveBlock(
        &self,
        per_subscription_save_block: Option<
            &Block<(NonNull<CKSubscriptionID>, *mut CKSubscription, *mut NSError), ()>,
        >,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "perSubscriptionDeleteBlock")]
    pub unsafe fn perSubscriptionDeleteBlock(
        &self,
    ) -> *mut Block<(NonNull<CKSubscriptionID>, *mut NSError), ()>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "setPerSubscriptionDeleteBlock:")]
    pub unsafe fn setPerSubscriptionDeleteBlock(
        &self,
        per_subscription_delete_block: Option<
            &Block<(NonNull<CKSubscriptionID>, *mut NSError), ()>,
        >,
    );

    #[cfg(all(
        feature = "CloudKit_CKSubscription",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "modifySubscriptionsCompletionBlock")]
    pub unsafe fn modifySubscriptionsCompletionBlock(
        &self,
    ) -> *mut Block<
        (
            *mut NSArray<CKSubscription>,
            *mut NSArray<CKSubscriptionID>,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "CloudKit_CKSubscription",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "setModifySubscriptionsCompletionBlock:")]
    pub unsafe fn setModifySubscriptionsCompletionBlock(
        &self,
        modify_subscriptions_completion_block: Option<
            &Block<
                (
                    *mut NSArray<CKSubscription>,
                    *mut NSArray<CKSubscriptionID>,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );
}
