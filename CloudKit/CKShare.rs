//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

extern_static!(CKRecordTypeShare: &'static CKRecordType);

extern_static!(CKRecordNameZoneWideShare: &'static NSString);

extern_static!(CKShareTitleKey: &'static CKRecordFieldKey);

extern_static!(CKShareThumbnailImageDataKey: &'static CKRecordFieldKey);

extern_static!(CKShareTypeKey: &'static CKRecordFieldKey);

#[objc2::interface(
    unsafe super = CKRecord,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKShare")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKShare;
}

#[cfg(feature = "CloudKit_CKShare")]
unsafe impl NSCoding for CKShare {}

#[cfg(feature = "CloudKit_CKShare")]
unsafe impl NSObjectProtocol for CKShare {}

#[cfg(feature = "CloudKit_CKShare")]
unsafe impl NSSecureCoding for CKShare {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKShare")]
    pub type CKShare;

    #[objc2::method(sel = "initWithRootRecord:", managed = "Init")]
    pub unsafe fn initWithRootRecord(
        this: Option<Allocated<Self>>,
        root_record: &CKRecord,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordID")]
    #[objc2::method(sel = "initWithRootRecord:shareID:", managed = "Init")]
    pub unsafe fn initWithRootRecord_shareID(
        this: Option<Allocated<Self>>,
        root_record: &CKRecord,
        share_id: &CKRecordID,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordZoneID")]
    #[objc2::method(sel = "initWithRecordZoneID:", managed = "Init")]
    pub unsafe fn initWithRecordZoneID(
        this: Option<Allocated<Self>>,
        record_zone_id: &CKRecordZoneID,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, a_decoder: &NSCoder) -> Id<Self>;

    #[objc2::method(sel = "publicPermission")]
    pub unsafe fn publicPermission(&self) -> CKShareParticipantPermission;

    #[objc2::method(sel = "setPublicPermission:")]
    pub unsafe fn setPublicPermission(&self, public_permission: CKShareParticipantPermission);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "URL", managed = "Other")]
    pub unsafe fn URL(&self) -> Option<Id<NSURL>>;

    #[cfg(all(
        feature = "CloudKit_CKShareParticipant",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "participants", managed = "Other")]
    pub unsafe fn participants(&self) -> Id<NSArray<CKShareParticipant>>;

    #[cfg(feature = "CloudKit_CKShareParticipant")]
    #[objc2::method(sel = "owner", managed = "Other")]
    pub unsafe fn owner(&self) -> Id<CKShareParticipant>;

    #[cfg(feature = "CloudKit_CKShareParticipant")]
    #[objc2::method(sel = "currentUserParticipant", managed = "Other")]
    pub unsafe fn currentUserParticipant(&self) -> Option<Id<CKShareParticipant>>;

    #[cfg(feature = "CloudKit_CKShareParticipant")]
    #[objc2::method(sel = "addParticipant:")]
    pub unsafe fn addParticipant(&self, participant: &CKShareParticipant);

    #[cfg(feature = "CloudKit_CKShareParticipant")]
    #[objc2::method(sel = "removeParticipant:")]
    pub unsafe fn removeParticipant(&self, participant: &CKShareParticipant);

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "initWithRecordType:", managed = "Init")]
    pub unsafe fn initWithRecordType(
        this: Option<Allocated<Self>>,
        record_type: &CKRecordType,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordID")]
    #[objc2::method(sel = "initWithRecordType:recordID:", managed = "Init")]
    pub unsafe fn initWithRecordType_recordID(
        this: Option<Allocated<Self>>,
        record_type: &CKRecordType,
        record_id: &CKRecordID,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordZoneID")]
    #[objc2::method(sel = "initWithRecordType:zoneID:", managed = "Init")]
    pub unsafe fn initWithRecordType_zoneID(
        this: Option<Allocated<Self>>,
        record_type: &CKRecordType,
        zone_id: &CKRecordZoneID,
    ) -> Id<Self>;
}
