//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum CKRecordZoneCapabilities {
    CKRecordZoneCapabilityFetchChanges = 1 << 0,
    CKRecordZoneCapabilityAtomic = 1 << 1,
    CKRecordZoneCapabilitySharing = 1 << 2,
    CKRecordZoneCapabilityZoneWideSharing = 1 << 3,
}

extern_static!(CKRecordZoneDefaultName: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKRecordZone")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKRecordZone;
}

#[cfg(feature = "CloudKit_CKRecordZone")]
unsafe impl NSCoding for CKRecordZone {}

#[cfg(feature = "CloudKit_CKRecordZone")]
unsafe impl NSObjectProtocol for CKRecordZone {}

#[cfg(feature = "CloudKit_CKRecordZone")]
unsafe impl NSSecureCoding for CKRecordZone {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKRecordZone")]
    pub type CKRecordZone;

    #[objc2::method(sel = "defaultRecordZone", managed = "Other")]
    pub unsafe fn defaultRecordZone() -> Id<CKRecordZone>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithZoneName:", managed = "Init")]
    pub unsafe fn initWithZoneName(this: Option<Allocated<Self>>, zone_name: &NSString)
        -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordZoneID")]
    #[objc2::method(sel = "initWithZoneID:", managed = "Init")]
    pub unsafe fn initWithZoneID(
        this: Option<Allocated<Self>>,
        zone_id: &CKRecordZoneID,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordZoneID")]
    #[objc2::method(sel = "zoneID", managed = "Other")]
    pub unsafe fn zoneID(&self) -> Id<CKRecordZoneID>;

    #[objc2::method(sel = "capabilities")]
    pub unsafe fn capabilities(&self) -> CKRecordZoneCapabilities;

    #[cfg(feature = "CloudKit_CKReference")]
    #[objc2::method(sel = "share", managed = "Other")]
    pub unsafe fn share(&self) -> Option<Id<CKReference>>;
}
