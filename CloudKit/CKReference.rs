//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum CKReferenceAction {
    CKReferenceActionNone = 0,
    CKReferenceActionDeleteSelf = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKReference")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKReference;
}

#[cfg(feature = "CloudKit_CKReference")]
unsafe impl NSCoding for CKReference {}

#[cfg(feature = "CloudKit_CKReference")]
unsafe impl NSObjectProtocol for CKReference {}

#[cfg(feature = "CloudKit_CKReference")]
unsafe impl NSSecureCoding for CKReference {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKReference")]
    pub type CKReference;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecordID")]
    #[objc2::method(sel = "initWithRecordID:action:", managed = "Init")]
    pub unsafe fn initWithRecordID_action(
        this: Option<Allocated<Self>>,
        record_id: &CKRecordID,
        action: CKReferenceAction,
    ) -> Id<Self>;

    #[cfg(feature = "CloudKit_CKRecord")]
    #[objc2::method(sel = "initWithRecord:action:", managed = "Init")]
    pub unsafe fn initWithRecord_action(
        this: Option<Allocated<Self>>,
        record: &CKRecord,
        action: CKReferenceAction,
    ) -> Id<Self>;

    #[objc2::method(sel = "referenceAction")]
    pub unsafe fn referenceAction(&self) -> CKReferenceAction;

    #[cfg(feature = "CloudKit_CKRecordID")]
    #[objc2::method(sel = "recordID", managed = "Other")]
    pub unsafe fn recordID(&self) -> Id<CKRecordID>;
}
