//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CKOperation,
    unsafe inherits = [
        NSOperation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKFetchShareMetadataOperation;
}

#[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
unsafe impl NSObjectProtocol for CKFetchShareMetadataOperation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    pub type CKFetchShareMetadataOperation;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
    #[objc2::method(sel = "initWithShareURLs:", managed = "Init")]
    pub unsafe fn initWithShareURLs(
        this: Option<Allocated<Self>>,
        share_ur_ls: &NSArray<NSURL>,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
    #[objc2::method(sel = "shareURLs", managed = "Other")]
    pub unsafe fn shareURLs(&self) -> Option<Id<NSArray<NSURL>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
    #[objc2::method(sel = "setShareURLs:")]
    pub unsafe fn setShareURLs(&self, share_ur_ls: Option<&NSArray<NSURL>>);

    #[objc2::method(sel = "shouldFetchRootRecord")]
    pub unsafe fn shouldFetchRootRecord(&self) -> bool;

    #[objc2::method(sel = "setShouldFetchRootRecord:")]
    pub unsafe fn setShouldFetchRootRecord(&self, should_fetch_root_record: bool);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "rootRecordDesiredKeys", managed = "Other")]
    pub unsafe fn rootRecordDesiredKeys(&self) -> Option<Id<NSArray<CKRecordFieldKey>>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setRootRecordDesiredKeys:")]
    pub unsafe fn setRootRecordDesiredKeys(
        &self,
        root_record_desired_keys: Option<&NSArray<CKRecordFieldKey>>,
    );

    #[cfg(all(
        feature = "CloudKit_CKShareMetadata",
        feature = "Foundation_NSError",
        feature = "Foundation_NSURL"
    ))]
    #[objc2::method(sel = "perShareMetadataBlock")]
    pub unsafe fn perShareMetadataBlock(
        &self,
    ) -> *mut Block<(NonNull<NSURL>, *mut CKShareMetadata, *mut NSError), ()>;

    #[cfg(all(
        feature = "CloudKit_CKShareMetadata",
        feature = "Foundation_NSError",
        feature = "Foundation_NSURL"
    ))]
    #[objc2::method(sel = "setPerShareMetadataBlock:")]
    pub unsafe fn setPerShareMetadataBlock(
        &self,
        per_share_metadata_block: Option<
            &Block<(NonNull<NSURL>, *mut CKShareMetadata, *mut NSError), ()>,
        >,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "fetchShareMetadataCompletionBlock")]
    pub unsafe fn fetchShareMetadataCompletionBlock(&self) -> *mut Block<(*mut NSError,), ()>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "setFetchShareMetadataCompletionBlock:")]
    pub unsafe fn setFetchShareMetadataCompletionBlock(
        &self,
        fetch_share_metadata_completion_block: Option<&Block<(*mut NSError,), ()>>,
    );
}
