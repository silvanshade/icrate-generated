//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CKDatabaseOperation,
    unsafe inherits = [
        CKOperation,
        NSOperation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKModifyRecordZonesOperation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKModifyRecordZonesOperation;
}

#[cfg(feature = "CloudKit_CKModifyRecordZonesOperation")]
unsafe impl NSObjectProtocol for CKModifyRecordZonesOperation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKModifyRecordZonesOperation")]
    pub type CKModifyRecordZonesOperation;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(
        sel = "initWithRecordZonesToSave:recordZoneIDsToDelete:",
        managed = "Init"
    )]
    pub unsafe fn initWithRecordZonesToSave_recordZoneIDsToDelete(
        this: Option<Allocated<Self>>,
        record_zones_to_save: Option<&NSArray<CKRecordZone>>,
        record_zone_i_ds_to_delete: Option<&NSArray<CKRecordZoneID>>,
    ) -> Id<Self>;

    #[cfg(all(feature = "CloudKit_CKRecordZone", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "recordZonesToSave", managed = "Other")]
    pub unsafe fn recordZonesToSave(&self) -> Option<Id<NSArray<CKRecordZone>>>;

    #[cfg(all(feature = "CloudKit_CKRecordZone", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "setRecordZonesToSave:")]
    pub unsafe fn setRecordZonesToSave(&self, record_zones_to_save: Option<&NSArray<CKRecordZone>>);

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "recordZoneIDsToDelete", managed = "Other")]
    pub unsafe fn recordZoneIDsToDelete(&self) -> Option<Id<NSArray<CKRecordZoneID>>>;

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "setRecordZoneIDsToDelete:")]
    pub unsafe fn setRecordZoneIDsToDelete(
        &self,
        record_zone_i_ds_to_delete: Option<&NSArray<CKRecordZoneID>>,
    );

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "perRecordZoneSaveBlock")]
    pub unsafe fn perRecordZoneSaveBlock(
        &self,
    ) -> *mut Block<(NonNull<CKRecordZoneID>, *mut CKRecordZone, *mut NSError), ()>;

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "setPerRecordZoneSaveBlock:")]
    pub unsafe fn setPerRecordZoneSaveBlock(
        &self,
        per_record_zone_save_block: Option<
            &Block<(NonNull<CKRecordZoneID>, *mut CKRecordZone, *mut NSError), ()>,
        >,
    );

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "perRecordZoneDeleteBlock")]
    pub unsafe fn perRecordZoneDeleteBlock(
        &self,
    ) -> *mut Block<(NonNull<CKRecordZoneID>, *mut NSError), ()>;

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "setPerRecordZoneDeleteBlock:")]
    pub unsafe fn setPerRecordZoneDeleteBlock(
        &self,
        per_record_zone_delete_block: Option<&Block<(NonNull<CKRecordZoneID>, *mut NSError), ()>>,
    );

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "modifyRecordZonesCompletionBlock")]
    pub unsafe fn modifyRecordZonesCompletionBlock(
        &self,
    ) -> *mut Block<
        (
            *mut NSArray<CKRecordZone>,
            *mut NSArray<CKRecordZoneID>,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "setModifyRecordZonesCompletionBlock:")]
    pub unsafe fn setModifyRecordZonesCompletionBlock(
        &self,
        modify_record_zones_completion_block: Option<
            &Block<
                (
                    *mut NSArray<CKRecordZone>,
                    *mut NSArray<CKRecordZoneID>,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );
}
