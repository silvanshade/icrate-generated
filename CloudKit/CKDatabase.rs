//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum CKDatabaseScope {
    CKDatabaseScopePublic = 1,
    CKDatabaseScopePrivate = 2,
    CKDatabaseScopeShared = 3,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKDatabase")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKDatabase;
}

#[cfg(feature = "CloudKit_CKDatabase")]
unsafe impl NSObjectProtocol for CKDatabase {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKDatabase")]
    pub type CKDatabase;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "CloudKit_CKDatabaseOperation")]
    #[objc2::method(sel = "addOperation:")]
    pub unsafe fn addOperation(&self, operation: &CKDatabaseOperation);

    #[objc2::method(sel = "databaseScope")]
    pub unsafe fn databaseScope(&self) -> CKDatabaseScope;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKDatabase")]
    pub type CKDatabase;

    #[cfg(all(
        feature = "CloudKit_CKRecord",
        feature = "CloudKit_CKRecordID",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "fetchRecordWithID:completionHandler:")]
    pub unsafe fn fetchRecordWithID_completionHandler(
        &self,
        record_id: &CKRecordID,
        completion_handler: &Block<(*mut CKRecord, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKRecord", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "saveRecord:completionHandler:")]
    pub unsafe fn saveRecord_completionHandler(
        &self,
        record: &CKRecord,
        completion_handler: &Block<(*mut CKRecord, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKRecordID", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "deleteRecordWithID:completionHandler:")]
    pub unsafe fn deleteRecordWithID_completionHandler(
        &self,
        record_id: &CKRecordID,
        completion_handler: &Block<(*mut CKRecordID, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "CloudKit_CKQuery",
        feature = "CloudKit_CKRecord",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "performQuery:inZoneWithID:completionHandler:")]
    pub unsafe fn performQuery_inZoneWithID_completionHandler(
        &self,
        query: &CKQuery,
        zone_id: Option<&CKRecordZoneID>,
        completion_handler: &Block<(*mut NSArray<CKRecord>, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "fetchAllRecordZonesWithCompletionHandler:")]
    pub unsafe fn fetchAllRecordZonesWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSArray<CKRecordZone>, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "CloudKit_CKRecordZone",
        feature = "CloudKit_CKRecordZoneID",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "fetchRecordZoneWithID:completionHandler:")]
    pub unsafe fn fetchRecordZoneWithID_completionHandler(
        &self,
        zone_id: &CKRecordZoneID,
        completion_handler: &Block<(*mut CKRecordZone, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKRecordZone", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "saveRecordZone:completionHandler:")]
    pub unsafe fn saveRecordZone_completionHandler(
        &self,
        zone: &CKRecordZone,
        completion_handler: &Block<(*mut CKRecordZone, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "deleteRecordZoneWithID:completionHandler:")]
    pub unsafe fn deleteRecordZoneWithID_completionHandler(
        &self,
        zone_id: &CKRecordZoneID,
        completion_handler: &Block<(*mut CKRecordZoneID, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "fetchSubscriptionWithID:completionHandler:")]
    pub unsafe fn fetchSubscriptionWithID_completionHandler(
        &self,
        subscription_id: &CKSubscriptionID,
        completion_handler: &Block<(*mut CKSubscription, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "CloudKit_CKSubscription",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "fetchAllSubscriptionsWithCompletionHandler:")]
    pub unsafe fn fetchAllSubscriptionsWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSArray<CKSubscription>, *mut NSError), ()>,
    );

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "saveSubscription:completionHandler:")]
    pub unsafe fn saveSubscription_completionHandler(
        &self,
        subscription: &CKSubscription,
        completion_handler: &Block<(*mut CKSubscription, *mut NSError), ()>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "deleteSubscriptionWithID:completionHandler:")]
    pub unsafe fn deleteSubscriptionWithID_completionHandler(
        &self,
        subscription_id: &CKSubscriptionID,
        completion_handler: &Block<(*mut CKSubscriptionID, *mut NSError), ()>,
    );
}
