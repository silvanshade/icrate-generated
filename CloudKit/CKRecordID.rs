//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKRecordID")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKRecordID;
}

#[cfg(feature = "CloudKit_CKRecordID")]
unsafe impl NSCoding for CKRecordID {}

#[cfg(feature = "CloudKit_CKRecordID")]
unsafe impl NSObjectProtocol for CKRecordID {}

#[cfg(feature = "CloudKit_CKRecordID")]
unsafe impl NSSecureCoding for CKRecordID {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKRecordID")]
    pub type CKRecordID;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithRecordName:", managed = "Init")]
    pub unsafe fn initWithRecordName(
        this: Option<Allocated<Self>>,
        record_name: &NSString,
    ) -> Id<Self>;

    #[cfg(all(feature = "CloudKit_CKRecordZoneID", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithRecordName:zoneID:", managed = "Init")]
    pub unsafe fn initWithRecordName_zoneID(
        this: Option<Allocated<Self>>,
        record_name: &NSString,
        zone_id: &CKRecordZoneID,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "recordName", managed = "Other")]
    pub unsafe fn recordName(&self) -> Id<NSString>;

    #[cfg(feature = "CloudKit_CKRecordZoneID")]
    #[objc2::method(sel = "zoneID", managed = "Other")]
    pub unsafe fn zoneID(&self) -> Id<CKRecordZoneID>;
}
