//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CKDatabaseOperation,
    unsafe inherits = [
        CKOperation,
        NSOperation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKFetchSubscriptionsOperation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CKFetchSubscriptionsOperation;
}

#[cfg(feature = "CloudKit_CKFetchSubscriptionsOperation")]
unsafe impl NSObjectProtocol for CKFetchSubscriptionsOperation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CloudKit_CKFetchSubscriptionsOperation")]
    pub type CKFetchSubscriptionsOperation;

    #[objc2::method(sel = "fetchAllSubscriptionsOperation", managed = "Other")]
    pub unsafe fn fetchAllSubscriptionsOperation() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "initWithSubscriptionIDs:", managed = "Init")]
    pub unsafe fn initWithSubscriptionIDs(
        this: Option<Allocated<Self>>,
        subscription_i_ds: &NSArray<CKSubscriptionID>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "subscriptionIDs", managed = "Other")]
    pub unsafe fn subscriptionIDs(&self) -> Option<Id<NSArray<CKSubscriptionID>>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setSubscriptionIDs:")]
    pub unsafe fn setSubscriptionIDs(&self, subscription_i_ds: Option<&NSArray<CKSubscriptionID>>);

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "perSubscriptionCompletionBlock")]
    pub unsafe fn perSubscriptionCompletionBlock(
        &self,
    ) -> *mut Block<(NonNull<CKSubscriptionID>, *mut CKSubscription, *mut NSError), ()>;

    #[cfg(all(feature = "CloudKit_CKSubscription", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "setPerSubscriptionCompletionBlock:")]
    pub unsafe fn setPerSubscriptionCompletionBlock(
        &self,
        per_subscription_completion_block: Option<
            &Block<(NonNull<CKSubscriptionID>, *mut CKSubscription, *mut NSError), ()>,
        >,
    );

    #[cfg(all(
        feature = "CloudKit_CKSubscription",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "fetchSubscriptionCompletionBlock")]
    pub unsafe fn fetchSubscriptionCompletionBlock(
        &self,
    ) -> *mut Block<
        (
            *mut NSDictionary<CKSubscriptionID, CKSubscription>,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "CloudKit_CKSubscription",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "setFetchSubscriptionCompletionBlock:")]
    pub unsafe fn setFetchSubscriptionCompletionBlock(
        &self,
        fetch_subscription_completion_block: Option<
            &Block<
                (
                    *mut NSDictionary<CKSubscriptionID, CKSubscription>,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );
}
