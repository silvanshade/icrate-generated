//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::BackgroundAssets::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = BADownload,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "BackgroundAssets_BAURLDownload")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type BAURLDownload;
}

#[cfg(feature = "BackgroundAssets_BAURLDownload")]
unsafe impl NSCoding for BAURLDownload {}

#[cfg(feature = "BackgroundAssets_BAURLDownload")]
unsafe impl NSObjectProtocol for BAURLDownload {}

#[cfg(feature = "BackgroundAssets_BAURLDownload")]
unsafe impl NSSecureCoding for BAURLDownload {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "BackgroundAssets_BAURLDownload")]
    pub type BAURLDownload;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSString", feature = "Foundation_NSURLRequest"))]
    #[objc2::method(
        sel = "initWithIdentifier:request:applicationGroupIdentifier:",
        managed = "Init"
    )]
    pub unsafe fn initWithIdentifier_request_applicationGroupIdentifier(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
        request: &NSURLRequest,
        application_group_identifier: &NSString,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSString", feature = "Foundation_NSURLRequest"))]
    #[objc2::method(
        sel = "initWithIdentifier:request:applicationGroupIdentifier:priority:",
        managed = "Init"
    )]
    pub unsafe fn initWithIdentifier_request_applicationGroupIdentifier_priority(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
        request: &NSURLRequest,
        application_group_identifier: &NSString,
        priority: BADownloaderPriority,
    ) -> Id<Self>;
}
