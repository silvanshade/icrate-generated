//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Automator::*;
use crate::Foundation::*;
use crate::OSAKit::*;

#[objc2::interface(
    unsafe super = NSView,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Automator_AMWorkflowView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type AMWorkflowView;
}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSAccessibility for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSAccessibilityElementProtocol for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSAnimatablePropertyContainer for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSAppearanceCustomization for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSCoding for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSDraggingDestination for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSObjectProtocol for AMWorkflowView {}

#[cfg(feature = "Automator_AMWorkflowView")]
unsafe impl NSUserInterfaceItemIdentification for AMWorkflowView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Automator_AMWorkflowView")]
    pub type AMWorkflowView;

    #[objc2::method(sel = "isEditable")]
    pub unsafe fn isEditable(&self) -> bool;

    #[objc2::method(sel = "setEditable:")]
    pub unsafe fn setEditable(&self, editable: bool);

    #[cfg(feature = "Automator_AMWorkflowController")]
    #[objc2::method(sel = "workflowController", managed = "Other")]
    pub unsafe fn workflowController(&self) -> Option<Id<AMWorkflowController>>;

    #[cfg(feature = "Automator_AMWorkflowController")]
    #[objc2::method(sel = "setWorkflowController:")]
    pub unsafe fn setWorkflowController(&self, workflow_controller: Option<&AMWorkflowController>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSView`
    #[cfg(feature = "Automator_AMWorkflowView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Automator_AMWorkflowView")]
    pub type AMWorkflowView;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
