//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::LocalAuthentication::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LAAuthenticationRequirement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type LAAuthenticationRequirement;
}

#[cfg(feature = "LocalAuthentication_LAAuthenticationRequirement")]
unsafe impl NSObjectProtocol for LAAuthenticationRequirement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LAAuthenticationRequirement")]
    pub type LAAuthenticationRequirement;

    #[objc2::method(sel = "defaultRequirement", managed = "Other")]
    pub unsafe fn defaultRequirement() -> Id<LAAuthenticationRequirement>;

    #[objc2::method(sel = "biometryRequirement", managed = "Other")]
    pub unsafe fn biometryRequirement() -> Id<LAAuthenticationRequirement>;

    #[objc2::method(sel = "biometryCurrentSetRequirement", managed = "Other")]
    pub unsafe fn biometryCurrentSetRequirement() -> Id<LAAuthenticationRequirement>;

    #[cfg(feature = "LocalAuthentication_LABiometryFallbackRequirement")]
    #[objc2::method(sel = "biometryRequirementWithFallback:", managed = "Other")]
    pub unsafe fn biometryRequirementWithFallback(
        fallback: &LABiometryFallbackRequirement,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LABiometryFallbackRequirement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type LABiometryFallbackRequirement;
}

#[cfg(feature = "LocalAuthentication_LABiometryFallbackRequirement")]
unsafe impl NSObjectProtocol for LABiometryFallbackRequirement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LABiometryFallbackRequirement")]
    pub type LABiometryFallbackRequirement;

    #[objc2::method(sel = "defaultRequirement", managed = "Other")]
    pub unsafe fn defaultRequirement() -> Id<LABiometryFallbackRequirement>;

    #[objc2::method(sel = "devicePasscodeRequirement", managed = "Other")]
    pub unsafe fn devicePasscodeRequirement() -> Id<LABiometryFallbackRequirement>;
}
