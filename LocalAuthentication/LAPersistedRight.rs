//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::LocalAuthentication::*;

#[objc2::interface(
    unsafe super = LARight,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LAPersistedRight")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type LAPersistedRight;
}

#[cfg(feature = "LocalAuthentication_LAPersistedRight")]
unsafe impl NSObjectProtocol for LAPersistedRight {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LAPersistedRight")]
    pub type LAPersistedRight;

    #[cfg(feature = "LocalAuthentication_LAPrivateKey")]
    #[objc2::method(sel = "key", managed = "Other")]
    pub unsafe fn key(&self) -> Id<LAPrivateKey>;

    #[cfg(feature = "LocalAuthentication_LASecret")]
    #[objc2::method(sel = "secret", managed = "Other")]
    pub unsafe fn secret(&self) -> Id<LASecret>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `LARight`
    #[cfg(feature = "LocalAuthentication_LAPersistedRight")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "LocalAuthentication_LAPersistedRight")]
    pub type LAPersistedRight;

    #[cfg(feature = "LocalAuthentication_LAAuthenticationRequirement")]
    #[objc2::method(sel = "initWithRequirement:", managed = "Init")]
    pub unsafe fn initWithRequirement(
        this: Option<Allocated<Self>>,
        requirement: &LAAuthenticationRequirement,
    ) -> Id<Self>;
}
