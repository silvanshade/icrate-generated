//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_struct!(
    #[encoding_name("?")]
    pub struct NSAffineTransformStruct {
        pub m11: CGFloat,
        pub m12: CGFloat,
        pub m21: CGFloat,
        pub m22: CGFloat,
        pub tX: CGFloat,
        pub tY: CGFloat,
    }
);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSAffineTransform")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAffineTransform;
}

#[cfg(feature = "Foundation_NSAffineTransform")]
unsafe impl NSCoding for NSAffineTransform {}

#[cfg(feature = "Foundation_NSAffineTransform")]
unsafe impl NSObjectProtocol for NSAffineTransform {}

#[cfg(feature = "Foundation_NSAffineTransform")]
unsafe impl NSSecureCoding for NSAffineTransform {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSAffineTransform")]
    pub type NSAffineTransform;

    #[objc2::method(sel = "transform", managed = "Other")]
    pub unsafe fn transform() -> Id<NSAffineTransform>;

    #[objc2::method(sel = "initWithTransform:", managed = "Init")]
    pub unsafe fn initWithTransform(
        this: Option<Allocated<Self>>,
        transform: &NSAffineTransform,
    ) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "translateXBy:yBy:")]
    pub unsafe fn translateXBy_yBy(&self, delta_x: CGFloat, delta_y: CGFloat);

    #[objc2::method(sel = "rotateByDegrees:")]
    pub unsafe fn rotateByDegrees(&self, angle: CGFloat);

    #[objc2::method(sel = "rotateByRadians:")]
    pub unsafe fn rotateByRadians(&self, angle: CGFloat);

    #[objc2::method(sel = "scaleBy:")]
    pub unsafe fn scaleBy(&self, scale: CGFloat);

    #[objc2::method(sel = "scaleXBy:yBy:")]
    pub unsafe fn scaleXBy_yBy(&self, scale_x: CGFloat, scale_y: CGFloat);

    #[objc2::method(sel = "invert")]
    pub unsafe fn invert(&self);

    #[objc2::method(sel = "appendTransform:")]
    pub unsafe fn appendTransform(&self, transform: &NSAffineTransform);

    #[objc2::method(sel = "prependTransform:")]
    pub unsafe fn prependTransform(&self, transform: &NSAffineTransform);

    #[objc2::method(sel = "transformPoint:")]
    pub unsafe fn transformPoint(&self, a_point: NSPoint) -> NSPoint;

    #[objc2::method(sel = "transformSize:")]
    pub unsafe fn transformSize(&self, a_size: NSSize) -> NSSize;

    #[objc2::method(sel = "transformStruct")]
    pub unsafe fn transformStruct(&self) -> NSAffineTransformStruct;

    #[objc2::method(sel = "setTransformStruct:")]
    pub unsafe fn setTransformStruct(&self, transform_struct: NSAffineTransformStruct);
}
