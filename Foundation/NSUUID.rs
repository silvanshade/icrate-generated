//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSUUID")]
    #[derive(PartialEq, Eq, Hash)]
    pub type NSUUID;
}

#[cfg(feature = "Foundation_NSUUID")]
unsafe impl NSCoding for NSUUID {}

#[cfg(feature = "Foundation_NSUUID")]
unsafe impl NSObjectProtocol for NSUUID {}

#[cfg(feature = "Foundation_NSUUID")]
unsafe impl NSSecureCoding for NSUUID {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSUUID")]
    pub type NSUUID;

    #[objc2::method(sel = "UUID", managed = "Other")]
    pub fn UUID() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithUUIDString:", managed = "Init")]
    pub fn initWithUUIDString(this: Option<Allocated<Self>>, string: &NSString)
        -> Option<Id<Self>>;

    #[objc2::method(sel = "compare:")]
    pub unsafe fn compare(&self, other_uuid: &NSUUID) -> NSComparisonResult;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "UUIDString", managed = "Other")]
    pub fn UUIDString(&self) -> Id<NSString>;
}
