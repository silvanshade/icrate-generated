//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_struct!(
    #[encoding_name("?")]
    pub struct NSFastEnumerationState {
        pub state: c_ulong,
        pub itemsPtr: *mut *mut Object,
        pub mutationsPtr: *mut c_ulong,
        pub extra: [c_ulong; 5],
    }
);

#[objc2::protocol]
pub unsafe trait NSFastEnumeration {
    #[objc2::method(sel = "countByEnumeratingWithState:objects:count:")]
    unsafe fn countByEnumeratingWithState_objects_count(
        &self,
        state: NonNull<NSFastEnumerationState>,
        buffer: NonNull<*mut Object>,
        len: NSUInteger,
    ) -> NSUInteger;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSEnumerator")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSEnumerator<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;
}

#[cfg(feature = "Foundation_NSEnumerator")]
unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership> NSFastEnumeration
    for NSEnumerator<ObjectType, ObjectTypeOwnership>
{
}

#[cfg(feature = "Foundation_NSEnumerator")]
unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership> NSObjectProtocol
    for NSEnumerator<ObjectType, ObjectTypeOwnership>
{
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSEnumerator")]
    pub type NSEnumerator<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;

    #[objc2::method(sel = "nextObject", managed = "Other")]
    pub unsafe fn nextObject(&self) -> Option<Id<ObjectType, ObjectTypeOwnership>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSEnumerator")]
    pub type NSEnumerator<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "allObjects", managed = "Other")]
    pub unsafe fn allObjects(&self) -> Id<NSArray<ObjectType>>;
}
