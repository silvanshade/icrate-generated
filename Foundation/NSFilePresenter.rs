//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::protocol]
pub unsafe trait NSFilePresenter: NSObjectProtocol {
    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "presentedItemURL", managed = "Other")]
    unsafe fn presentedItemURL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSOperationQueue")]
    #[objc2::method(sel = "presentedItemOperationQueue", managed = "Other")]
    unsafe fn presentedItemOperationQueue(&self) -> Id<NSOperationQueue>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(optional, sel = "primaryPresentedItemURL", managed = "Other")]
    unsafe fn primaryPresentedItemURL(&self) -> Option<Id<NSURL>>;

    #[objc2::method(optional, sel = "relinquishPresentedItemToReader:")]
    unsafe fn relinquishPresentedItemToReader(&self, reader: &Block<(*mut Block<(), ()>,), ()>);

    #[objc2::method(optional, sel = "relinquishPresentedItemToWriter:")]
    unsafe fn relinquishPresentedItemToWriter(&self, writer: &Block<(*mut Block<(), ()>,), ()>);

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(optional, sel = "savePresentedItemChangesWithCompletionHandler:")]
    unsafe fn savePresentedItemChangesWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(
        optional,
        sel = "accommodatePresentedItemDeletionWithCompletionHandler:"
    )]
    unsafe fn accommodatePresentedItemDeletionWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(optional, sel = "presentedItemDidMoveToURL:")]
    unsafe fn presentedItemDidMoveToURL(&self, new_url: &NSURL);

    #[objc2::method(optional, sel = "presentedItemDidChange")]
    unsafe fn presentedItemDidChange(&self);

    #[cfg(feature = "Foundation_NSSet")]
    #[objc2::method(optional, sel = "presentedItemDidChangeUbiquityAttributes:")]
    unsafe fn presentedItemDidChangeUbiquityAttributes(&self, attributes: &NSSet<NSURLResourceKey>);

    #[cfg(feature = "Foundation_NSSet")]
    #[objc2::method(
        optional,
        sel = "observedPresentedItemUbiquityAttributes",
        managed = "Other"
    )]
    unsafe fn observedPresentedItemUbiquityAttributes(&self) -> Id<NSSet<NSURLResourceKey>>;

    #[cfg(feature = "Foundation_NSFileVersion")]
    #[objc2::method(optional, sel = "presentedItemDidGainVersion:")]
    unsafe fn presentedItemDidGainVersion(&self, version: &NSFileVersion);

    #[cfg(feature = "Foundation_NSFileVersion")]
    #[objc2::method(optional, sel = "presentedItemDidLoseVersion:")]
    unsafe fn presentedItemDidLoseVersion(&self, version: &NSFileVersion);

    #[cfg(feature = "Foundation_NSFileVersion")]
    #[objc2::method(optional, sel = "presentedItemDidResolveConflictVersion:")]
    unsafe fn presentedItemDidResolveConflictVersion(&self, version: &NSFileVersion);

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSURL"))]
    #[objc2::method(
        optional,
        sel = "accommodatePresentedSubitemDeletionAtURL:completionHandler:"
    )]
    unsafe fn accommodatePresentedSubitemDeletionAtURL_completionHandler(
        &self,
        url: &NSURL,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(optional, sel = "presentedSubitemDidAppearAtURL:")]
    unsafe fn presentedSubitemDidAppearAtURL(&self, url: &NSURL);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(optional, sel = "presentedSubitemAtURL:didMoveToURL:")]
    unsafe fn presentedSubitemAtURL_didMoveToURL(&self, old_url: &NSURL, new_url: &NSURL);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(optional, sel = "presentedSubitemDidChangeAtURL:")]
    unsafe fn presentedSubitemDidChangeAtURL(&self, url: &NSURL);

    #[cfg(all(feature = "Foundation_NSFileVersion", feature = "Foundation_NSURL"))]
    #[objc2::method(optional, sel = "presentedSubitemAtURL:didGainVersion:")]
    unsafe fn presentedSubitemAtURL_didGainVersion(&self, url: &NSURL, version: &NSFileVersion);

    #[cfg(all(feature = "Foundation_NSFileVersion", feature = "Foundation_NSURL"))]
    #[objc2::method(optional, sel = "presentedSubitemAtURL:didLoseVersion:")]
    unsafe fn presentedSubitemAtURL_didLoseVersion(&self, url: &NSURL, version: &NSFileVersion);

    #[cfg(all(feature = "Foundation_NSFileVersion", feature = "Foundation_NSURL"))]
    #[objc2::method(optional, sel = "presentedSubitemAtURL:didResolveConflictVersion:")]
    unsafe fn presentedSubitemAtURL_didResolveConflictVersion(
        &self,
        url: &NSURL,
        version: &NSFileVersion,
    );
}
