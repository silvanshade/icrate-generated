//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_static!(NSUndefinedKeyException: &'static NSExceptionName);

typed_enum!(
    pub type NSKeyValueOperator = NSString;
);

extern_static!(NSAverageKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSCountKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSDistinctUnionOfArraysKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSDistinctUnionOfObjectsKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSDistinctUnionOfSetsKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSMaximumKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSMinimumKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSSumKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSUnionOfArraysKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSUnionOfObjectsKeyValueOperator: &'static NSKeyValueOperator);

extern_static!(NSUnionOfSetsKeyValueOperator: &'static NSKeyValueOperator);

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSArray")]
    pub type NSArray<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(&self, key: &NSString) -> Id<Object>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(&self, value: Option<&Object>, key: &NSString);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSDictionary")]
    pub type NSDictionary<
        KeyType: Message = Object,
        ObjectType: Message = Object,
        KeyTypeOwnership: Ownership = Shared,
        ObjectTypeOwnership: Ownership = Shared,
    >;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(&self, key: &NSString)
        -> Option<Id<ObjectType, ObjectTypeOwnership>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSMutableDictionary")]
    pub type NSMutableDictionary<
        KeyType: Message = Object,
        ObjectType: Message = Object,
        KeyTypeOwnership: Ownership = Shared,
        ObjectTypeOwnership: Ownership = Shared,
    >;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(&self, value: Option<&ObjectType>, key: &NSString);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSOrderedSet")]
    pub type NSOrderedSet<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(&self, key: &NSString) -> Id<Object>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(&self, value: Option<&Object>, key: &NSString);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSSet")]
    pub type NSSet<ObjectType: Message = Object, ObjectTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(&self, key: &NSString) -> Id<Object>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(&self, value: Option<&Object>, key: &NSString);
}
