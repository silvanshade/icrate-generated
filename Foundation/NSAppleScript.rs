//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

extern_static!(NSAppleScriptErrorMessage: &'static NSString);

extern_static!(NSAppleScriptErrorNumber: &'static NSString);

extern_static!(NSAppleScriptErrorAppName: &'static NSString);

extern_static!(NSAppleScriptErrorBriefMessage: &'static NSString);

extern_static!(NSAppleScriptErrorRange: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSAppleScript")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAppleScript;
}

#[cfg(feature = "Foundation_NSAppleScript")]
unsafe impl NSObjectProtocol for NSAppleScript {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSAppleScript")]
    pub type NSAppleScript;

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString",
        feature = "Foundation_NSURL"
    ))]
    #[objc2::method(sel = "initWithContentsOfURL:error:", managed = "Init")]
    pub unsafe fn initWithContentsOfURL_error(
        this: Option<Allocated<Self>>,
        url: &NSURL,
        error_info: Option<&mut Option<Id<NSDictionary<NSString, Object>>>>,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithSource:", managed = "Init")]
    pub unsafe fn initWithSource(
        this: Option<Allocated<Self>>,
        source: &NSString,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "source", managed = "Other")]
    pub unsafe fn source(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "isCompiled")]
    pub unsafe fn isCompiled(&self) -> bool;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "compileAndReturnError:")]
    pub unsafe fn compileAndReturnError(
        &self,
        error_info: Option<&mut Option<Id<NSDictionary<NSString, Object>>>>,
    ) -> bool;

    #[cfg(all(
        feature = "Foundation_NSAppleEventDescriptor",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "executeAndReturnError:", managed = "Other")]
    pub unsafe fn executeAndReturnError(
        &self,
        error_info: Option<&mut Option<Id<NSDictionary<NSString, Object>>>>,
    ) -> Id<NSAppleEventDescriptor>;

    #[cfg(all(
        feature = "Foundation_NSAppleEventDescriptor",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "executeAppleEvent:error:", managed = "Other")]
    pub unsafe fn executeAppleEvent_error(
        &self,
        event: &NSAppleEventDescriptor,
        error_info: Option<&mut Option<Id<NSDictionary<NSString, Object>>>>,
    ) -> Id<NSAppleEventDescriptor>;
}
