//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSProxy,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSProtocolChecker")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSProtocolChecker;
}

#[cfg(feature = "Foundation_NSProtocolChecker")]
unsafe impl NSObjectProtocol for NSProtocolChecker {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSProtocolChecker")]
    pub type NSProtocolChecker;

    #[objc2::method(sel = "protocol", managed = "Other")]
    pub unsafe fn protocol(&self) -> Id<Protocol>;

    #[objc2::method(sel = "target", managed = "Other")]
    pub unsafe fn target(&self) -> Option<Id<NSObject>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSProtocolChecker")]
    pub type NSProtocolChecker;

    #[objc2::method(sel = "protocolCheckerWithTarget:protocol:", managed = "Other")]
    pub unsafe fn protocolCheckerWithTarget_protocol(
        an_object: &NSObject,
        a_protocol: &Protocol,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithTarget:protocol:", managed = "Init")]
    pub unsafe fn initWithTarget_protocol(
        this: Option<Allocated<Self>>,
        an_object: &NSObject,
        a_protocol: &Protocol,
    ) -> Id<Self>;
}
