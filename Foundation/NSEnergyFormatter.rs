//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSEnergyFormatterUnit {
    NSEnergyFormatterUnitJoule = 11,
    NSEnergyFormatterUnitKilojoule = 14,
    NSEnergyFormatterUnitCalorie = (7 << 8) + 1,
    NSEnergyFormatterUnitKilocalorie = (7 << 8) + 2,
}

#[objc2::interface(
    unsafe super = NSFormatter,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSEnergyFormatter")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSEnergyFormatter;
}

#[cfg(feature = "Foundation_NSEnergyFormatter")]
unsafe impl NSCoding for NSEnergyFormatter {}

#[cfg(feature = "Foundation_NSEnergyFormatter")]
unsafe impl NSObjectProtocol for NSEnergyFormatter {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSEnergyFormatter")]
    pub type NSEnergyFormatter;

    #[cfg(feature = "Foundation_NSNumberFormatter")]
    #[objc2::method(sel = "numberFormatter", managed = "Other")]
    pub unsafe fn numberFormatter(&self) -> Id<NSNumberFormatter>;

    #[cfg(feature = "Foundation_NSNumberFormatter")]
    #[objc2::method(sel = "setNumberFormatter:")]
    pub unsafe fn setNumberFormatter(&self, number_formatter: Option<&NSNumberFormatter>);

    #[objc2::method(sel = "unitStyle")]
    pub unsafe fn unitStyle(&self) -> NSFormattingUnitStyle;

    #[objc2::method(sel = "setUnitStyle:")]
    pub unsafe fn setUnitStyle(&self, unit_style: NSFormattingUnitStyle);

    #[objc2::method(sel = "isForFoodEnergyUse")]
    pub unsafe fn isForFoodEnergyUse(&self) -> bool;

    #[objc2::method(sel = "setForFoodEnergyUse:")]
    pub unsafe fn setForFoodEnergyUse(&self, for_food_energy_use: bool);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "stringFromValue:unit:", managed = "Other")]
    pub unsafe fn stringFromValue_unit(
        &self,
        value: c_double,
        unit: NSEnergyFormatterUnit,
    ) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "stringFromJoules:", managed = "Other")]
    pub unsafe fn stringFromJoules(&self, number_in_joules: c_double) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "unitStringFromValue:unit:", managed = "Other")]
    pub unsafe fn unitStringFromValue_unit(
        &self,
        value: c_double,
        unit: NSEnergyFormatterUnit,
    ) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "unitStringFromJoules:usedUnit:", managed = "Other")]
    pub unsafe fn unitStringFromJoules_usedUnit(
        &self,
        number_in_joules: c_double,
        unitp: *mut NSEnergyFormatterUnit,
    ) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "getObjectValue:forString:errorDescription:")]
    pub unsafe fn getObjectValue_forString_errorDescription(
        &self,
        obj: Option<&mut Option<Id<Object>>>,
        string: &NSString,
        error: Option<&mut Option<Id<NSString>>>,
    ) -> bool;
}
