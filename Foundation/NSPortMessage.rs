//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSPortMessage")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPortMessage;
}

#[cfg(feature = "Foundation_NSPortMessage")]
unsafe impl NSObjectProtocol for NSPortMessage {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSPortMessage")]
    pub type NSPortMessage;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSPort"))]
    #[objc2::method(sel = "initWithSendPort:receivePort:components:", managed = "Init")]
    pub unsafe fn initWithSendPort_receivePort_components(
        this: Option<Allocated<Self>>,
        send_port: Option<&NSPort>,
        reply_port: Option<&NSPort>,
        components: Option<&NSArray>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "components", managed = "Other")]
    pub unsafe fn components(&self) -> Option<Id<NSArray>>;

    #[cfg(feature = "Foundation_NSPort")]
    #[objc2::method(sel = "receivePort", managed = "Other")]
    pub unsafe fn receivePort(&self) -> Option<Id<NSPort>>;

    #[cfg(feature = "Foundation_NSPort")]
    #[objc2::method(sel = "sendPort", managed = "Other")]
    pub unsafe fn sendPort(&self) -> Option<Id<NSPort>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "sendBeforeDate:")]
    pub unsafe fn sendBeforeDate(&self, date: &NSDate) -> bool;

    #[objc2::method(sel = "msgid")]
    pub unsafe fn msgid(&self) -> u32;

    #[objc2::method(sel = "setMsgid:")]
    pub unsafe fn setMsgid(&self, msgid: u32);
}
