//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSPointerArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPointerArray;
}

#[cfg(feature = "Foundation_NSPointerArray")]
unsafe impl NSCoding for NSPointerArray {}

#[cfg(feature = "Foundation_NSPointerArray")]
unsafe impl NSFastEnumeration for NSPointerArray {}

#[cfg(feature = "Foundation_NSPointerArray")]
unsafe impl NSObjectProtocol for NSPointerArray {}

#[cfg(feature = "Foundation_NSPointerArray")]
unsafe impl NSSecureCoding for NSPointerArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSPointerArray")]
    pub type NSPointerArray;

    #[objc2::method(sel = "initWithOptions:", managed = "Init")]
    pub unsafe fn initWithOptions(
        this: Option<Allocated<Self>>,
        options: NSPointerFunctionsOptions,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSPointerFunctions")]
    #[objc2::method(sel = "initWithPointerFunctions:", managed = "Init")]
    pub unsafe fn initWithPointerFunctions(
        this: Option<Allocated<Self>>,
        functions: &NSPointerFunctions,
    ) -> Id<Self>;

    #[objc2::method(sel = "pointerArrayWithOptions:", managed = "Other")]
    pub unsafe fn pointerArrayWithOptions(options: NSPointerFunctionsOptions)
        -> Id<NSPointerArray>;

    #[cfg(feature = "Foundation_NSPointerFunctions")]
    #[objc2::method(sel = "pointerArrayWithPointerFunctions:", managed = "Other")]
    pub unsafe fn pointerArrayWithPointerFunctions(
        functions: &NSPointerFunctions,
    ) -> Id<NSPointerArray>;

    #[cfg(feature = "Foundation_NSPointerFunctions")]
    #[objc2::method(sel = "pointerFunctions", managed = "Other")]
    pub unsafe fn pointerFunctions(&self) -> Id<NSPointerFunctions>;

    #[objc2::method(sel = "pointerAtIndex:")]
    pub unsafe fn pointerAtIndex(&self, index: NSUInteger) -> *mut c_void;

    #[objc2::method(sel = "addPointer:")]
    pub unsafe fn addPointer(&self, pointer: *mut c_void);

    #[objc2::method(sel = "removePointerAtIndex:")]
    pub unsafe fn removePointerAtIndex(&self, index: NSUInteger);

    #[objc2::method(sel = "insertPointer:atIndex:")]
    pub unsafe fn insertPointer_atIndex(&self, item: *mut c_void, index: NSUInteger);

    #[objc2::method(sel = "replacePointerAtIndex:withPointer:")]
    pub unsafe fn replacePointerAtIndex_withPointer(&self, index: NSUInteger, item: *mut c_void);

    #[objc2::method(sel = "compact")]
    pub unsafe fn compact(&self);

    #[objc2::method(sel = "count")]
    pub unsafe fn count(&self) -> NSUInteger;

    #[objc2::method(sel = "setCount:")]
    pub unsafe fn setCount(&self, count: NSUInteger);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSPointerArray")]
    pub type NSPointerArray;

    #[deprecated = "GC no longer supported"]
    #[objc2::method(sel = "pointerArrayWithStrongObjects", managed = "Other")]
    pub unsafe fn pointerArrayWithStrongObjects() -> Id<Object>;

    #[deprecated = "GC no longer supported"]
    #[objc2::method(sel = "pointerArrayWithWeakObjects", managed = "Other")]
    pub unsafe fn pointerArrayWithWeakObjects() -> Id<Object>;

    #[objc2::method(sel = "strongObjectsPointerArray", managed = "Other")]
    pub unsafe fn strongObjectsPointerArray() -> Id<NSPointerArray>;

    #[objc2::method(sel = "weakObjectsPointerArray", managed = "Other")]
    pub unsafe fn weakObjectsPointerArray() -> Id<NSPointerArray>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "allObjects", managed = "Other")]
    pub unsafe fn allObjects(&self) -> Id<NSArray>;
}
