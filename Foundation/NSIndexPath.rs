//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSIndexPath")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSIndexPath;
}

#[cfg(feature = "Foundation_NSIndexPath")]
unsafe impl NSCoding for NSIndexPath {}

#[cfg(feature = "Foundation_NSIndexPath")]
unsafe impl NSObjectProtocol for NSIndexPath {}

#[cfg(feature = "Foundation_NSIndexPath")]
unsafe impl NSSecureCoding for NSIndexPath {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSIndexPath")]
    pub type NSIndexPath;

    #[objc2::method(sel = "indexPathWithIndex:", managed = "Other")]
    pub unsafe fn indexPathWithIndex(index: NSUInteger) -> Id<Self>;

    #[objc2::method(sel = "indexPathWithIndexes:length:", managed = "Other")]
    pub unsafe fn indexPathWithIndexes_length(
        indexes: *mut NSUInteger,
        length: NSUInteger,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithIndexes:length:", managed = "Init")]
    pub unsafe fn initWithIndexes_length(
        this: Option<Allocated<Self>>,
        indexes: *mut NSUInteger,
        length: NSUInteger,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithIndex:", managed = "Init")]
    pub unsafe fn initWithIndex(this: Option<Allocated<Self>>, index: NSUInteger) -> Id<Self>;

    #[objc2::method(sel = "indexPathByAddingIndex:", managed = "Other")]
    pub unsafe fn indexPathByAddingIndex(&self, index: NSUInteger) -> Id<NSIndexPath>;

    #[objc2::method(sel = "indexPathByRemovingLastIndex", managed = "Other")]
    pub unsafe fn indexPathByRemovingLastIndex(&self) -> Id<NSIndexPath>;

    #[objc2::method(sel = "indexAtPosition:")]
    pub unsafe fn indexAtPosition(&self, position: NSUInteger) -> NSUInteger;

    #[objc2::method(sel = "length")]
    pub unsafe fn length(&self) -> NSUInteger;

    #[objc2::method(sel = "getIndexes:range:")]
    pub unsafe fn getIndexes_range(&self, indexes: NonNull<NSUInteger>, position_range: NSRange);

    #[objc2::method(sel = "compare:")]
    pub unsafe fn compare(&self, other_object: &NSIndexPath) -> NSComparisonResult;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSIndexPath")]
    pub type NSIndexPath;

    #[deprecated]
    #[objc2::method(sel = "getIndexes:")]
    pub unsafe fn getIndexes(&self, indexes: NonNull<NSUInteger>);
}
