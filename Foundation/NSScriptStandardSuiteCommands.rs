//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSSaveOptions {
    NSSaveOptionsYes = 0,
    NSSaveOptionsNo = 1,
    NSSaveOptionsAsk = 2,
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloneCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCloneCommand;
}

#[cfg(feature = "Foundation_NSCloneCommand")]
unsafe impl NSCoding for NSCloneCommand {}

#[cfg(feature = "Foundation_NSCloneCommand")]
unsafe impl NSObjectProtocol for NSCloneCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloneCommand")]
    pub type NSCloneCommand;

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "setReceiversSpecifier:")]
    pub unsafe fn setReceiversSpecifier(&self, receivers_ref: Option<&NSScriptObjectSpecifier>);

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "keySpecifier", managed = "Other")]
    pub unsafe fn keySpecifier(&self) -> Id<NSScriptObjectSpecifier>;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloseCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCloseCommand;
}

#[cfg(feature = "Foundation_NSCloseCommand")]
unsafe impl NSCoding for NSCloseCommand {}

#[cfg(feature = "Foundation_NSCloseCommand")]
unsafe impl NSObjectProtocol for NSCloseCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloseCommand")]
    pub type NSCloseCommand;

    #[objc2::method(sel = "saveOptions")]
    pub unsafe fn saveOptions(&self) -> NSSaveOptions;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCountCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCountCommand;
}

#[cfg(feature = "Foundation_NSCountCommand")]
unsafe impl NSCoding for NSCountCommand {}

#[cfg(feature = "Foundation_NSCountCommand")]
unsafe impl NSObjectProtocol for NSCountCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCountCommand")]
    pub type NSCountCommand;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCreateCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCreateCommand;
}

#[cfg(feature = "Foundation_NSCreateCommand")]
unsafe impl NSCoding for NSCreateCommand {}

#[cfg(feature = "Foundation_NSCreateCommand")]
unsafe impl NSObjectProtocol for NSCreateCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCreateCommand")]
    pub type NSCreateCommand;

    #[cfg(feature = "Foundation_NSScriptClassDescription")]
    #[objc2::method(sel = "createClassDescription", managed = "Other")]
    pub unsafe fn createClassDescription(&self) -> Id<NSScriptClassDescription>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "resolvedKeyDictionary", managed = "Other")]
    pub unsafe fn resolvedKeyDictionary(&self) -> Id<NSDictionary<NSString, Object>>;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSDeleteCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSDeleteCommand;
}

#[cfg(feature = "Foundation_NSDeleteCommand")]
unsafe impl NSCoding for NSDeleteCommand {}

#[cfg(feature = "Foundation_NSDeleteCommand")]
unsafe impl NSObjectProtocol for NSDeleteCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSDeleteCommand")]
    pub type NSDeleteCommand;

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "setReceiversSpecifier:")]
    pub unsafe fn setReceiversSpecifier(&self, receivers_ref: Option<&NSScriptObjectSpecifier>);

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "keySpecifier", managed = "Other")]
    pub unsafe fn keySpecifier(&self) -> Id<NSScriptObjectSpecifier>;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSExistsCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSExistsCommand;
}

#[cfg(feature = "Foundation_NSExistsCommand")]
unsafe impl NSCoding for NSExistsCommand {}

#[cfg(feature = "Foundation_NSExistsCommand")]
unsafe impl NSObjectProtocol for NSExistsCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSExistsCommand")]
    pub type NSExistsCommand;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSGetCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSGetCommand;
}

#[cfg(feature = "Foundation_NSGetCommand")]
unsafe impl NSCoding for NSGetCommand {}

#[cfg(feature = "Foundation_NSGetCommand")]
unsafe impl NSObjectProtocol for NSGetCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSGetCommand")]
    pub type NSGetCommand;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSMoveCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSMoveCommand;
}

#[cfg(feature = "Foundation_NSMoveCommand")]
unsafe impl NSCoding for NSMoveCommand {}

#[cfg(feature = "Foundation_NSMoveCommand")]
unsafe impl NSObjectProtocol for NSMoveCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSMoveCommand")]
    pub type NSMoveCommand;

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "setReceiversSpecifier:")]
    pub unsafe fn setReceiversSpecifier(&self, receivers_ref: Option<&NSScriptObjectSpecifier>);

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "keySpecifier", managed = "Other")]
    pub unsafe fn keySpecifier(&self) -> Id<NSScriptObjectSpecifier>;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSQuitCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSQuitCommand;
}

#[cfg(feature = "Foundation_NSQuitCommand")]
unsafe impl NSCoding for NSQuitCommand {}

#[cfg(feature = "Foundation_NSQuitCommand")]
unsafe impl NSObjectProtocol for NSQuitCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSQuitCommand")]
    pub type NSQuitCommand;

    #[objc2::method(sel = "saveOptions")]
    pub unsafe fn saveOptions(&self) -> NSSaveOptions;
}

#[objc2::interface(
    unsafe super = NSScriptCommand,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSSetCommand")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSetCommand;
}

#[cfg(feature = "Foundation_NSSetCommand")]
unsafe impl NSCoding for NSSetCommand {}

#[cfg(feature = "Foundation_NSSetCommand")]
unsafe impl NSObjectProtocol for NSSetCommand {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSSetCommand")]
    pub type NSSetCommand;

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "setReceiversSpecifier:")]
    pub unsafe fn setReceiversSpecifier(&self, receivers_ref: Option<&NSScriptObjectSpecifier>);

    #[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
    #[objc2::method(sel = "keySpecifier", managed = "Other")]
    pub unsafe fn keySpecifier(&self) -> Id<NSScriptObjectSpecifier>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSCloneCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloneCommand")]
    pub type NSCloneCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSCloseCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCloseCommand")]
    pub type NSCloseCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSCountCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCountCommand")]
    pub type NSCountCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSCreateCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSCreateCommand")]
    pub type NSCreateCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSDeleteCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSDeleteCommand")]
    pub type NSDeleteCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSExistsCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSExistsCommand")]
    pub type NSExistsCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSGetCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSGetCommand")]
    pub type NSGetCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSMoveCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSMoveCommand")]
    pub type NSMoveCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSQuitCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSQuitCommand")]
    pub type NSQuitCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSScriptCommand`
    #[cfg(feature = "Foundation_NSSetCommand")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSSetCommand")]
    pub type NSSetCommand;

    #[cfg(feature = "Foundation_NSScriptCommandDescription")]
    #[objc2::method(sel = "initWithCommandDescription:", managed = "Init")]
    pub unsafe fn initWithCommandDescription(
        this: Option<Allocated<Self>>,
        command_def: &NSScriptCommandDescription,
    ) -> Id<Self>;
}
