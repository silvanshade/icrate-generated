//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSFormatter,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSListFormatter")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSListFormatter;
}

#[cfg(feature = "Foundation_NSListFormatter")]
unsafe impl NSCoding for NSListFormatter {}

#[cfg(feature = "Foundation_NSListFormatter")]
unsafe impl NSObjectProtocol for NSListFormatter {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSListFormatter")]
    pub type NSListFormatter;

    #[cfg(feature = "Foundation_NSLocale")]
    #[objc2::method(sel = "locale", managed = "Other")]
    pub unsafe fn locale(&self) -> Id<NSLocale>;

    #[cfg(feature = "Foundation_NSLocale")]
    #[objc2::method(sel = "setLocale:")]
    pub unsafe fn setLocale(&self, locale: Option<&NSLocale>);

    #[objc2::method(sel = "itemFormatter", managed = "Other")]
    pub unsafe fn itemFormatter(&self) -> Option<Id<NSFormatter>>;

    #[objc2::method(sel = "setItemFormatter:")]
    pub unsafe fn setItemFormatter(&self, item_formatter: Option<&NSFormatter>);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "localizedStringByJoiningStrings:", managed = "Other")]
    pub unsafe fn localizedStringByJoiningStrings(strings: &NSArray<NSString>) -> Id<NSString>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "stringFromItems:", managed = "Other")]
    pub unsafe fn stringFromItems(&self, items: &NSArray) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "stringForObjectValue:", managed = "Other")]
    pub unsafe fn stringForObjectValue(&self, obj: Option<&Object>) -> Option<Id<NSString>>;
}
