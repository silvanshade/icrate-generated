//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated = "Building Garbage Collected apps is no longer supported."]
    #[cfg(feature = "Foundation_NSGarbageCollector")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSGarbageCollector;
}

#[cfg(feature = "Foundation_NSGarbageCollector")]
unsafe impl NSObjectProtocol for NSGarbageCollector {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSGarbageCollector")]
    #[deprecated = "Building Garbage Collected apps is no longer supported."]
    pub type NSGarbageCollector;

    #[objc2::method(sel = "defaultCollector", managed = "Other")]
    pub unsafe fn defaultCollector() -> Id<Object>;

    #[deprecated]
    #[objc2::method(sel = "isCollecting")]
    pub unsafe fn isCollecting(&self) -> bool;

    #[objc2::method(sel = "disable")]
    pub unsafe fn disable(&self);

    #[objc2::method(sel = "enable")]
    pub unsafe fn enable(&self);

    #[objc2::method(sel = "isEnabled")]
    pub unsafe fn isEnabled(&self) -> bool;

    #[objc2::method(sel = "collectIfNeeded")]
    pub unsafe fn collectIfNeeded(&self);

    #[objc2::method(sel = "collectExhaustively")]
    pub unsafe fn collectExhaustively(&self);

    #[objc2::method(sel = "disableCollectorForPointer:")]
    pub unsafe fn disableCollectorForPointer(&self, ptr: NonNull<c_void>);

    #[objc2::method(sel = "enableCollectorForPointer:")]
    pub unsafe fn enableCollectorForPointer(&self, ptr: NonNull<c_void>);

    #[objc2::method(sel = "zone")]
    pub unsafe fn zone(&self) -> NonNull<NSZone>;
}
