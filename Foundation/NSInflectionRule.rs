//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSInflectionRule")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSInflectionRule;
}

#[cfg(feature = "Foundation_NSInflectionRule")]
unsafe impl NSCoding for NSInflectionRule {}

#[cfg(feature = "Foundation_NSInflectionRule")]
unsafe impl NSObjectProtocol for NSInflectionRule {}

#[cfg(feature = "Foundation_NSInflectionRule")]
unsafe impl NSSecureCoding for NSInflectionRule {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSInflectionRule")]
    pub type NSInflectionRule;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "automaticRule", managed = "Other")]
    pub unsafe fn automaticRule() -> Id<NSInflectionRule>;
}

#[objc2::interface(
    unsafe super = NSInflectionRule,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSInflectionRuleExplicit;
}

#[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
unsafe impl NSCoding for NSInflectionRuleExplicit {}

#[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
unsafe impl NSObjectProtocol for NSInflectionRuleExplicit {}

#[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
unsafe impl NSSecureCoding for NSInflectionRuleExplicit {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
    pub type NSInflectionRuleExplicit;

    #[cfg(feature = "Foundation_NSMorphology")]
    #[objc2::method(sel = "initWithMorphology:", managed = "Init")]
    pub unsafe fn initWithMorphology(
        this: Option<Allocated<Self>>,
        morphology: &NSMorphology,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSMorphology")]
    #[objc2::method(sel = "morphology", managed = "Other")]
    pub unsafe fn morphology(&self) -> Id<NSMorphology>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSInflectionRule")]
    pub type NSInflectionRule;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "canInflectLanguage:")]
    pub unsafe fn canInflectLanguage(language: &NSString) -> bool;

    #[objc2::method(sel = "canInflectPreferredLocalization")]
    pub unsafe fn canInflectPreferredLocalization() -> bool;
}
