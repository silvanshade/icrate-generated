//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Metal::*;
use crate::MetalKit::*;

typed_enum!(
    pub type MTKModelError = NSString;
);

extern_static!(MTKModelErrorDomain: &'static MTKModelError);

extern_static!(MTKModelErrorKey: &'static MTKModelError);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMeshBufferAllocator")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTKMeshBufferAllocator;
}

#[cfg(feature = "MetalKit_MTKMeshBufferAllocator")]
unsafe impl NSObjectProtocol for MTKMeshBufferAllocator {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMeshBufferAllocator")]
    pub type MTKMeshBufferAllocator;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "initWithDevice:", managed = "Init")]
    pub unsafe fn initWithDevice(
        this: Option<Allocated<Self>>,
        device: &ProtocolObject<dyn MTLDevice>,
    ) -> Id<Self>;

    #[objc2::method(sel = "device", managed = "Other")]
    pub unsafe fn device(&self) -> Id<ProtocolObject<dyn MTLDevice>>;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMeshBuffer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTKMeshBuffer;
}

#[cfg(feature = "MetalKit_MTKMeshBuffer")]
unsafe impl NSObjectProtocol for MTKMeshBuffer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMeshBuffer")]
    pub type MTKMeshBuffer;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "length")]
    pub unsafe fn length(&self) -> NSUInteger;

    #[cfg(feature = "MetalKit_MTKMeshBufferAllocator")]
    #[objc2::method(sel = "allocator", managed = "Other")]
    pub unsafe fn allocator(&self) -> Id<MTKMeshBufferAllocator>;

    #[objc2::method(sel = "buffer", managed = "Other")]
    pub unsafe fn buffer(&self) -> Id<ProtocolObject<dyn MTLBuffer>>;

    #[objc2::method(sel = "offset")]
    pub unsafe fn offset(&self) -> NSUInteger;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKSubmesh")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTKSubmesh;
}

#[cfg(feature = "MetalKit_MTKSubmesh")]
unsafe impl NSObjectProtocol for MTKSubmesh {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKSubmesh")]
    pub type MTKSubmesh;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "primitiveType")]
    pub unsafe fn primitiveType(&self) -> MTLPrimitiveType;

    #[objc2::method(sel = "indexType")]
    pub unsafe fn indexType(&self) -> MTLIndexType;

    #[cfg(feature = "MetalKit_MTKMeshBuffer")]
    #[objc2::method(sel = "indexBuffer", managed = "Other")]
    pub unsafe fn indexBuffer(&self) -> Id<MTKMeshBuffer>;

    #[objc2::method(sel = "indexCount")]
    pub unsafe fn indexCount(&self) -> NSUInteger;

    #[cfg(feature = "MetalKit_MTKMesh")]
    #[objc2::method(sel = "mesh", managed = "Other")]
    pub unsafe fn mesh(&self) -> Option<Id<MTKMesh>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: &NSString);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMesh")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTKMesh;
}

#[cfg(feature = "MetalKit_MTKMesh")]
unsafe impl NSObjectProtocol for MTKMesh {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MetalKit_MTKMesh")]
    pub type MTKMesh;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSError", feature = "ModelIO_MDLMesh"))]
    #[objc2::method(sel = "initWithMesh:device:error:", managed = "Init", throws)]
    pub unsafe fn initWithMesh_device_error(
        this: Option<Allocated<Self>>,
        mesh: &MDLMesh,
        device: &ProtocolObject<dyn MTLDevice>,
    ) -> Result<Id<Self>, Id<NSError>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "ModelIO_MDLAsset",
        feature = "ModelIO_MDLMesh"
    ))]
    #[objc2::method(
        sel = "newMeshesFromAsset:device:sourceMeshes:error:",
        managed = "New",
        throws
    )]
    pub unsafe fn newMeshesFromAsset_device_sourceMeshes_error(
        asset: &MDLAsset,
        device: &ProtocolObject<dyn MTLDevice>,
        source_meshes: Option<&mut Option<Id<NSArray<MDLMesh>>>>,
    ) -> Result<Id<NSArray<MTKMesh>>, Id<NSError>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MetalKit_MTKMeshBuffer"))]
    #[objc2::method(sel = "vertexBuffers", managed = "Other")]
    pub unsafe fn vertexBuffers(&self) -> Id<NSArray<MTKMeshBuffer>>;

    #[cfg(feature = "ModelIO_MDLVertexDescriptor")]
    #[objc2::method(sel = "vertexDescriptor", managed = "Other")]
    pub unsafe fn vertexDescriptor(&self) -> Id<MDLVertexDescriptor>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MetalKit_MTKSubmesh"))]
    #[objc2::method(sel = "submeshes", managed = "Other")]
    pub unsafe fn submeshes(&self) -> Id<NSArray<MTKSubmesh>>;

    #[objc2::method(sel = "vertexCount")]
    pub unsafe fn vertexCount(&self) -> NSUInteger;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: &NSString);
}

extern_fn!(
    #[cfg(all(
        feature = "Metal_MTLVertexDescriptor",
        feature = "ModelIO_MDLVertexDescriptor"
    ))]
    pub unsafe fn MTKModelIOVertexDescriptorFromMetal(
        metal_descriptor: &MTLVertexDescriptor,
    ) -> NonNull<MDLVertexDescriptor>;
);

extern_fn!(
    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "Metal_MTLVertexDescriptor",
        feature = "ModelIO_MDLVertexDescriptor"
    ))]
    pub unsafe fn MTKModelIOVertexDescriptorFromMetalWithError(
        metal_descriptor: &MTLVertexDescriptor,
        error: *mut *mut NSError,
    ) -> NonNull<MDLVertexDescriptor>;
);

extern_fn!(
    #[cfg(all(
        feature = "Metal_MTLVertexDescriptor",
        feature = "ModelIO_MDLVertexDescriptor"
    ))]
    pub unsafe fn MTKMetalVertexDescriptorFromModelIO(
        model_io_descriptor: &MDLVertexDescriptor,
    ) -> *mut MTLVertexDescriptor;
);

extern_fn!(
    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "Metal_MTLVertexDescriptor",
        feature = "ModelIO_MDLVertexDescriptor"
    ))]
    pub unsafe fn MTKMetalVertexDescriptorFromModelIOWithError(
        model_io_descriptor: &MDLVertexDescriptor,
        error: *mut *mut NSError,
    ) -> *mut MTLVertexDescriptor;
);
