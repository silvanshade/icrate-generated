//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::OSAKit::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum OSALanguageFeatures {
    OSASupportsCompiling = 0x0002,
    OSASupportsGetSource = 0x0004,
    OSASupportsAECoercion = 0x0008,
    OSASupportsAESending = 0x0010,
    OSASupportsRecording = 0x0020,
    OSASupportsConvenience = 0x0040,
    OSASupportsDialects = 0x0080,
    OSASupportsEventHandling = 0x0100,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSALanguage")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type OSALanguage;
}

#[cfg(feature = "OSAKit_OSALanguage")]
unsafe impl NSObjectProtocol for OSALanguage {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSALanguage")]
    pub type OSALanguage;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "availableLanguages", managed = "Other")]
    pub unsafe fn availableLanguages() -> Id<NSArray<OSALanguage>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "languageForName:", managed = "Other")]
    pub unsafe fn languageForName(name: &NSString) -> Option<Id<OSALanguage>>;

    #[cfg(feature = "Foundation_NSAppleEventDescriptor")]
    #[objc2::method(sel = "languageForScriptDataDescriptor:", managed = "Other")]
    pub unsafe fn languageForScriptDataDescriptor(
        descriptor: &NSAppleEventDescriptor,
    ) -> Option<Id<OSALanguage>>;

    #[objc2::method(sel = "defaultLanguage", managed = "Other")]
    pub unsafe fn defaultLanguage() -> Option<Id<OSALanguage>>;

    #[objc2::method(sel = "setDefaultLanguage:")]
    pub unsafe fn setDefaultLanguage(default_language: &OSALanguage);

    #[cfg(feature = "OSAKit_OSALanguageInstance")]
    #[objc2::method(sel = "sharedLanguageInstance", managed = "Other")]
    pub unsafe fn sharedLanguageInstance(&self) -> Id<OSALanguageInstance>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "info", managed = "Other")]
    pub unsafe fn info(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "version", managed = "Other")]
    pub unsafe fn version(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "type")]
    pub unsafe fn r#type(&self) -> OSType;

    #[objc2::method(sel = "subType")]
    pub unsafe fn subType(&self) -> OSType;

    #[objc2::method(sel = "manufacturer")]
    pub unsafe fn manufacturer(&self) -> OSType;

    #[objc2::method(sel = "features")]
    pub unsafe fn features(&self) -> OSALanguageFeatures;

    #[objc2::method(sel = "isThreadSafe")]
    pub unsafe fn isThreadSafe(&self) -> bool;
}
