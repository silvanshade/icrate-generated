//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::OSAKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum OSAScriptState {
    OSAScriptStopped = 0,
    OSAScriptRunning = 1,
    OSAScriptRecording = 2,
}

#[objc2::interface(
    unsafe super = NSController,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type OSAScriptController;
}

#[cfg(feature = "OSAKit_OSAScriptController")]
unsafe impl NSCoding for OSAScriptController {}

#[cfg(feature = "OSAKit_OSAScriptController")]
unsafe impl NSEditor for OSAScriptController {}

#[cfg(feature = "OSAKit_OSAScriptController")]
unsafe impl NSEditorRegistration for OSAScriptController {}

#[cfg(feature = "OSAKit_OSAScriptController")]
unsafe impl NSObjectProtocol for OSAScriptController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptController")]
    pub type OSAScriptController;

    #[cfg(feature = "OSAKit_OSAScriptView")]
    #[objc2::method(sel = "scriptView", managed = "Other")]
    pub unsafe fn scriptView(&self) -> Option<Id<OSAScriptView>>;

    #[cfg(feature = "OSAKit_OSAScriptView")]
    #[objc2::method(sel = "setScriptView:")]
    pub unsafe fn setScriptView(&self, script_view: Option<&OSAScriptView>);

    #[cfg(feature = "AppKit_NSTextView")]
    #[objc2::method(sel = "resultView", managed = "Other")]
    pub unsafe fn resultView(&self) -> Option<Id<NSTextView>>;

    #[cfg(feature = "AppKit_NSTextView")]
    #[objc2::method(sel = "setResultView:")]
    pub unsafe fn setResultView(&self, result_view: Option<&NSTextView>);

    #[cfg(feature = "OSAKit_OSAScript")]
    #[objc2::method(sel = "script", managed = "Other")]
    pub unsafe fn script(&self) -> Option<Id<OSAScript>>;

    #[cfg(feature = "OSAKit_OSAScript")]
    #[objc2::method(sel = "setScript:")]
    pub unsafe fn setScript(&self, script: Option<&OSAScript>);

    #[cfg(feature = "OSAKit_OSALanguage")]
    #[objc2::method(sel = "language", managed = "Other")]
    pub unsafe fn language(&self) -> Option<Id<OSALanguage>>;

    #[cfg(feature = "OSAKit_OSALanguage")]
    #[objc2::method(sel = "setLanguage:")]
    pub unsafe fn setLanguage(&self, language: Option<&OSALanguage>);

    #[objc2::method(sel = "scriptState")]
    pub unsafe fn scriptState(&self) -> OSAScriptState;

    #[objc2::method(sel = "isCompiling")]
    pub unsafe fn isCompiling(&self) -> bool;

    #[objc2::method(sel = "compileScript:")]
    pub unsafe fn compileScript(&self, sender: Option<&Object>);

    #[objc2::method(sel = "recordScript:")]
    pub unsafe fn recordScript(&self, sender: Option<&Object>);

    #[objc2::method(sel = "runScript:")]
    pub unsafe fn runScript(&self, sender: Option<&Object>);

    #[objc2::method(sel = "stopScript:")]
    pub unsafe fn stopScript(&self, sender: Option<&Object>);
}
