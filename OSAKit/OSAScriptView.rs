//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::OSAKit::*;

#[objc2::interface(
    unsafe super = NSTextView,
    unsafe inherits = [
        NSText,
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type OSAScriptView;
}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAccessibility for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAccessibilityElementProtocol for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAccessibilityNavigableStaticText for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAccessibilityStaticText for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAnimatablePropertyContainer for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSAppearanceCustomization for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSChangeSpelling for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSCoding for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSColorChanging for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSDraggingDestination for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSDraggingSource for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSIgnoreMisspelledWords for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSMenuItemValidation for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSObjectProtocol for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSStandardKeyBindingResponding for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSTextContent for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSTextInput for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSTextInputClient for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSTextLayoutOrientationProvider for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSUserInterfaceItemIdentification for OSAScriptView {}

#[cfg(feature = "OSAKit_OSAScriptView")]
unsafe impl NSUserInterfaceValidations for OSAScriptView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptView")]
    pub type OSAScriptView;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "source", managed = "Other")]
    pub unsafe fn source(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSource:")]
    pub unsafe fn setSource(&self, source: Option<&NSString>);

    #[objc2::method(sel = "usesScriptAssistant")]
    pub unsafe fn usesScriptAssistant(&self) -> bool;

    #[objc2::method(sel = "setUsesScriptAssistant:")]
    pub unsafe fn setUsesScriptAssistant(&self, uses_script_assistant: bool);

    #[objc2::method(sel = "usesTabs")]
    pub unsafe fn usesTabs(&self) -> bool;

    #[objc2::method(sel = "setUsesTabs:")]
    pub unsafe fn setUsesTabs(&self, uses_tabs: bool);

    #[objc2::method(sel = "tabWidth")]
    pub unsafe fn tabWidth(&self) -> NSUInteger;

    #[objc2::method(sel = "setTabWidth:")]
    pub unsafe fn setTabWidth(&self, tab_width: NSUInteger);

    #[objc2::method(sel = "wrapsLines")]
    pub unsafe fn wrapsLines(&self) -> bool;

    #[objc2::method(sel = "setWrapsLines:")]
    pub unsafe fn setWrapsLines(&self, wraps_lines: bool);

    #[objc2::method(sel = "indentsWrappedLines")]
    pub unsafe fn indentsWrappedLines(&self) -> bool;

    #[objc2::method(sel = "setIndentsWrappedLines:")]
    pub unsafe fn setIndentsWrappedLines(&self, indents_wrapped_lines: bool);

    #[objc2::method(sel = "indentWidth")]
    pub unsafe fn indentWidth(&self) -> NSUInteger;

    #[objc2::method(sel = "setIndentWidth:")]
    pub unsafe fn setIndentWidth(&self, indent_width: NSUInteger);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTextView`
    #[cfg(feature = "OSAKit_OSAScriptView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptView")]
    pub type OSAScriptView;

    #[cfg(feature = "AppKit_NSTextContainer")]
    #[objc2::method(sel = "initWithFrame:textContainer:", managed = "Init")]
    pub unsafe fn initWithFrame_textContainer(
        this: Option<Allocated<Self>>,
        frame_rect: NSRect,
        container: Option<&NSTextContainer>,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;

    #[objc2::method(sel = "initUsingTextLayoutManager:", managed = "Init")]
    pub unsafe fn initUsingTextLayoutManager(
        this: Option<Allocated<Self>>,
        using_text_layout_manager: bool,
    ) -> Id<Self>;

    #[objc2::method(sel = "textViewUsingTextLayoutManager:", managed = "Other")]
    pub unsafe fn textViewUsingTextLayoutManager(using_text_layout_manager: bool) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTextView`
        ///
        /// NSTextView_Factory
    #[cfg(feature = "OSAKit_OSAScriptView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "OSAKit_OSAScriptView")]
    pub type OSAScriptView;

    #[objc2::method(sel = "fieldEditor", managed = "Other")]
    pub unsafe fn fieldEditor() -> Id<Self>;
}
