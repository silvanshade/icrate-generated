//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

pub type GCControllerButtonValueChangedHandler =
    *mut Block<(NonNull<GCControllerButtonInput>, c_float, Bool), ()>;

pub type GCControllerButtonTouchedChangedHandler =
    *mut Block<(NonNull<GCControllerButtonInput>, c_float, Bool, Bool), ()>;

#[objc2::interface(
    unsafe super = GCControllerElement,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCControllerButtonInput")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCControllerButtonInput;
}

#[cfg(feature = "GameController_GCControllerButtonInput")]
unsafe impl NSObjectProtocol for GCControllerButtonInput {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCControllerButtonInput")]
    pub type GCControllerButtonInput;

    #[objc2::method(sel = "valueChangedHandler")]
    pub unsafe fn valueChangedHandler(&self) -> GCControllerButtonValueChangedHandler;

    #[objc2::method(sel = "setValueChangedHandler:")]
    pub unsafe fn setValueChangedHandler(
        &self,
        value_changed_handler: GCControllerButtonValueChangedHandler,
    );

    #[objc2::method(sel = "pressedChangedHandler")]
    pub unsafe fn pressedChangedHandler(&self) -> GCControllerButtonValueChangedHandler;

    #[objc2::method(sel = "setPressedChangedHandler:")]
    pub unsafe fn setPressedChangedHandler(
        &self,
        pressed_changed_handler: GCControllerButtonValueChangedHandler,
    );

    #[objc2::method(sel = "touchedChangedHandler")]
    pub unsafe fn touchedChangedHandler(&self) -> GCControllerButtonTouchedChangedHandler;

    #[objc2::method(sel = "setTouchedChangedHandler:")]
    pub unsafe fn setTouchedChangedHandler(
        &self,
        touched_changed_handler: GCControllerButtonTouchedChangedHandler,
    );

    #[objc2::method(sel = "value")]
    pub unsafe fn value(&self) -> c_float;

    #[objc2::method(sel = "isPressed")]
    pub unsafe fn isPressed(&self) -> bool;

    #[objc2::method(sel = "isTouched")]
    pub unsafe fn isTouched(&self) -> bool;

    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: c_float);
}
