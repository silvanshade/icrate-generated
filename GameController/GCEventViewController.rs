//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

#[objc2::interface(
    unsafe super = NSViewController,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCEventViewController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCEventViewController;
}

#[cfg(feature = "GameController_GCEventViewController")]
unsafe impl NSCoding for GCEventViewController {}

#[cfg(feature = "GameController_GCEventViewController")]
unsafe impl NSEditor for GCEventViewController {}

#[cfg(feature = "GameController_GCEventViewController")]
unsafe impl NSObjectProtocol for GCEventViewController {}

#[cfg(feature = "GameController_GCEventViewController")]
unsafe impl NSSeguePerforming for GCEventViewController {}

#[cfg(feature = "GameController_GCEventViewController")]
unsafe impl NSUserInterfaceItemIdentification for GCEventViewController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCEventViewController")]
    pub type GCEventViewController;

    #[objc2::method(sel = "controllerUserInteractionEnabled")]
    pub unsafe fn controllerUserInteractionEnabled(&self) -> bool;

    #[objc2::method(sel = "setControllerUserInteractionEnabled:")]
    pub unsafe fn setControllerUserInteractionEnabled(
        &self,
        controller_user_interaction_enabled: bool,
    );
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSViewController`
    #[cfg(feature = "GameController_GCEventViewController")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCEventViewController")]
    pub type GCEventViewController;

    #[cfg(feature = "Foundation_NSBundle")]
    #[objc2::method(sel = "initWithNibName:bundle:", managed = "Init")]
    pub unsafe fn initWithNibName_bundle(
        this: Option<Allocated<Self>>,
        nib_name_or_nil: Option<&NSNibName>,
        nib_bundle_or_nil: Option<&NSBundle>,
    ) -> Id<Self>;
}
