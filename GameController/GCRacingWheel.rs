//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

extern_static!(GCRacingWheelDidConnectNotification: &'static NSString);

extern_static!(GCRacingWheelDidDisconnectNotification: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheel")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCRacingWheel;
}

#[cfg(feature = "GameController_GCRacingWheel")]
unsafe impl GCDevice for GCRacingWheel {}

#[cfg(feature = "GameController_GCRacingWheel")]
unsafe impl NSObjectProtocol for GCRacingWheel {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheel")]
    pub type GCRacingWheel;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSSet")]
    #[objc2::method(sel = "connectedRacingWheels", managed = "Other")]
    pub unsafe fn connectedRacingWheels() -> Id<NSSet<GCRacingWheel>>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "acquireDeviceWithError:", throws)]
    pub unsafe fn acquireDeviceWithError(&self) -> Result<(), Id<NSError>>;

    #[objc2::method(sel = "relinquishDevice")]
    pub unsafe fn relinquishDevice(&self);

    #[objc2::method(sel = "isAcquired")]
    pub unsafe fn isAcquired(&self) -> bool;

    #[cfg(feature = "GameController_GCRacingWheelInput")]
    #[objc2::method(sel = "wheelInput", managed = "Other")]
    pub unsafe fn wheelInput(&self) -> Id<GCRacingWheelInput>;

    #[objc2::method(sel = "isSnapshot")]
    pub unsafe fn isSnapshot(&self) -> bool;

    #[objc2::method(sel = "capture", managed = "Other")]
    pub unsafe fn capture(&self) -> Id<GCRacingWheel>;
}
