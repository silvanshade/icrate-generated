//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

extern_static!(GCMouseDidConnectNotification: &'static NSString);

extern_static!(GCMouseDidDisconnectNotification: &'static NSString);

extern_static!(GCMouseDidBecomeCurrentNotification: &'static NSString);

extern_static!(GCMouseDidStopBeingCurrentNotification: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCMouse")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCMouse;
}

#[cfg(feature = "GameController_GCMouse")]
unsafe impl GCDevice for GCMouse {}

#[cfg(feature = "GameController_GCMouse")]
unsafe impl NSObjectProtocol for GCMouse {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCMouse")]
    pub type GCMouse;

    #[cfg(feature = "GameController_GCMouseInput")]
    #[objc2::method(sel = "mouseInput", managed = "Other")]
    pub unsafe fn mouseInput(&self) -> Option<Id<GCMouseInput>>;

    #[objc2::method(sel = "current", managed = "Other")]
    pub unsafe fn current() -> Option<Id<GCMouse>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "mice", managed = "Other")]
    pub unsafe fn mice() -> Id<NSArray<GCMouse>>;
}
