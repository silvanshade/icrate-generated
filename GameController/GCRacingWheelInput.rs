//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheelInputState")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCRacingWheelInputState;
}

#[cfg(feature = "GameController_GCRacingWheelInputState")]
unsafe impl GCDevicePhysicalInputState for GCRacingWheelInputState {}

#[cfg(feature = "GameController_GCRacingWheelInputState")]
unsafe impl NSObjectProtocol for GCRacingWheelInputState {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheelInputState")]
    pub type GCRacingWheelInputState;

    #[cfg(feature = "GameController_GCSteeringWheelElement")]
    #[objc2::method(sel = "wheel", managed = "Other")]
    pub unsafe fn wheel(&self) -> Id<GCSteeringWheelElement>;

    #[objc2::method(sel = "acceleratorPedal", managed = "Other")]
    pub unsafe fn acceleratorPedal(&self) -> Option<Id<ProtocolObject<dyn GCButtonElement>>>;

    #[objc2::method(sel = "brakePedal", managed = "Other")]
    pub unsafe fn brakePedal(&self) -> Option<Id<ProtocolObject<dyn GCButtonElement>>>;

    #[objc2::method(sel = "clutchPedal", managed = "Other")]
    pub unsafe fn clutchPedal(&self) -> Option<Id<ProtocolObject<dyn GCButtonElement>>>;

    #[cfg(feature = "GameController_GCGearShifterElement")]
    #[objc2::method(sel = "shifter", managed = "Other")]
    pub unsafe fn shifter(&self) -> Option<Id<GCGearShifterElement>>;
}

#[objc2::interface(
    unsafe super = GCRacingWheelInputState,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheelInput")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCRacingWheelInput;
}

#[cfg(feature = "GameController_GCRacingWheelInput")]
unsafe impl GCDevicePhysicalInput for GCRacingWheelInput {}

#[cfg(feature = "GameController_GCRacingWheelInput")]
unsafe impl GCDevicePhysicalInputState for GCRacingWheelInput {}

#[cfg(feature = "GameController_GCRacingWheelInput")]
unsafe impl NSObjectProtocol for GCRacingWheelInput {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCRacingWheelInput")]
    pub type GCRacingWheelInput;

    #[objc2::method(sel = "capture", managed = "Other")]
    pub unsafe fn capture(&self) -> Id<GCRacingWheelInputState>;

    #[objc2::method(sel = "nextInputState", managed = "Other")]
    pub unsafe fn nextInputState(&self) -> Option<Id<GCRacingWheelInputState>>;
}
