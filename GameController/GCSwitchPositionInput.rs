//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

#[objc2::protocol]
pub unsafe trait GCSwitchPositionInput: NSObjectProtocol {
    #[objc2::method(sel = "positionDidChangeHandler")]
    unsafe fn positionDidChangeHandler(
        &self,
    ) -> *mut Block<
        (
            NonNull<ProtocolObject<dyn GCPhysicalInputElement>>,
            NonNull<ProtocolObject<dyn GCSwitchPositionInput>>,
            NSInteger,
        ),
        (),
    >;

    #[objc2::method(sel = "setPositionDidChangeHandler:")]
    unsafe fn setPositionDidChangeHandler(
        &self,
        position_did_change_handler: Option<
            &Block<
                (
                    NonNull<ProtocolObject<dyn GCPhysicalInputElement>>,
                    NonNull<ProtocolObject<dyn GCSwitchPositionInput>>,
                    NSInteger,
                ),
                (),
            >,
        >,
    );

    #[objc2::method(sel = "position")]
    unsafe fn position(&self) -> NSInteger;

    #[objc2::method(sel = "positionRange")]
    unsafe fn positionRange(&self) -> NSRange;

    #[objc2::method(sel = "isSequential")]
    unsafe fn isSequential(&self) -> bool;

    #[objc2::method(sel = "canWrap")]
    unsafe fn canWrap(&self) -> bool;

    #[objc2::method(sel = "lastPositionTimestamp")]
    unsafe fn lastPositionTimestamp(&self) -> NSTimeInterval;

    #[objc2::method(sel = "lastPositionLatency")]
    unsafe fn lastPositionLatency(&self) -> NSTimeInterval;
}
