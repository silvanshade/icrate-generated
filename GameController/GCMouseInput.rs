//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameController::*;

pub type GCMouseMoved = *mut Block<(NonNull<GCMouseInput>, c_float, c_float), ()>;

#[objc2::interface(
    unsafe super = GCPhysicalInputProfile,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCMouseInput")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GCMouseInput;
}

#[cfg(feature = "GameController_GCMouseInput")]
unsafe impl NSObjectProtocol for GCMouseInput {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameController_GCMouseInput")]
    pub type GCMouseInput;

    #[objc2::method(sel = "mouseMovedHandler")]
    pub unsafe fn mouseMovedHandler(&self) -> GCMouseMoved;

    #[objc2::method(sel = "setMouseMovedHandler:")]
    pub unsafe fn setMouseMovedHandler(&self, mouse_moved_handler: GCMouseMoved);

    #[cfg(feature = "GameController_GCDeviceCursor")]
    #[objc2::method(sel = "scroll", managed = "Other")]
    pub unsafe fn scroll(&self) -> Id<GCDeviceCursor>;

    #[cfg(feature = "GameController_GCControllerButtonInput")]
    #[objc2::method(sel = "leftButton", managed = "Other")]
    pub unsafe fn leftButton(&self) -> Id<GCControllerButtonInput>;

    #[cfg(feature = "GameController_GCControllerButtonInput")]
    #[objc2::method(sel = "rightButton", managed = "Other")]
    pub unsafe fn rightButton(&self) -> Option<Id<GCControllerButtonInput>>;

    #[cfg(feature = "GameController_GCControllerButtonInput")]
    #[objc2::method(sel = "middleButton", managed = "Other")]
    pub unsafe fn middleButton(&self) -> Option<Id<GCControllerButtonInput>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "GameController_GCControllerButtonInput"
    ))]
    #[objc2::method(sel = "auxiliaryButtons", managed = "Other")]
    pub unsafe fn auxiliaryButtons(&self) -> Option<Id<NSArray<GCControllerButtonInput>>>;
}
