//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::FileProvider::*;
use crate::FileProviderUI::*;
use crate::Foundation::*;

extern_static!(FPUIErrorDomain: &'static NSString);

typed_extensible_enum!(
    pub type FPUIActionIdentifier = NSString;
);

#[ns_enum]
#[underlying(NSUInteger)]
pub enum FPUIExtensionErrorCode {
    FPUIExtensionErrorCodeUserCancelled = 0,
    FPUIExtensionErrorCodeFailed = 1,
}

#[objc2::interface(
    unsafe super = NSExtensionContext,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "FileProviderUI_FPUIActionExtensionContext")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type FPUIActionExtensionContext;
}

#[cfg(feature = "FileProviderUI_FPUIActionExtensionContext")]
unsafe impl NSObjectProtocol for FPUIActionExtensionContext {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "FileProviderUI_FPUIActionExtensionContext")]
    pub type FPUIActionExtensionContext;

    #[objc2::method(sel = "domainIdentifier", managed = "Other")]
    pub unsafe fn domainIdentifier(&self) -> Option<Id<NSFileProviderDomainIdentifier>>;

    #[objc2::method(sel = "completeRequest")]
    pub unsafe fn completeRequest(&self);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "completeRequestReturningItems:completionHandler:")]
    pub unsafe fn completeRequestReturningItems_completionHandler(
        &self,
        items: Option<&NSArray>,
        completion_handler: Option<&Block<(Bool,), ()>>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "cancelRequestWithError:")]
    pub unsafe fn cancelRequestWithError(&self, error: &NSError);
}
