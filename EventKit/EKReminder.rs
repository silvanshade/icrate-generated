//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = EKCalendarItem,
    unsafe inherits = [
        EKObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKReminder")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EKReminder;
}

#[cfg(feature = "EventKit_EKReminder")]
unsafe impl NSObjectProtocol for EKReminder {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKReminder")]
    pub type EKReminder;

    #[cfg(feature = "EventKit_EKEventStore")]
    #[objc2::method(sel = "reminderWithEventStore:", managed = "Other")]
    pub unsafe fn reminderWithEventStore(event_store: &EKEventStore) -> Id<EKReminder>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "startDateComponents", managed = "Other")]
    pub unsafe fn startDateComponents(&self) -> Option<Id<NSDateComponents>>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "setStartDateComponents:")]
    pub unsafe fn setStartDateComponents(&self, start_date_components: Option<&NSDateComponents>);

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "dueDateComponents", managed = "Other")]
    pub unsafe fn dueDateComponents(&self) -> Option<Id<NSDateComponents>>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "setDueDateComponents:")]
    pub unsafe fn setDueDateComponents(&self, due_date_components: Option<&NSDateComponents>);

    #[objc2::method(sel = "isCompleted")]
    pub unsafe fn isCompleted(&self) -> bool;

    #[objc2::method(sel = "setCompleted:")]
    pub unsafe fn setCompleted(&self, completed: bool);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "completionDate", managed = "Other")]
    pub unsafe fn completionDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "setCompletionDate:")]
    pub unsafe fn setCompletionDate(&self, completion_date: Option<&NSDate>);

    #[objc2::method(sel = "priority")]
    pub unsafe fn priority(&self) -> NSUInteger;

    #[objc2::method(sel = "setPriority:")]
    pub unsafe fn setPriority(&self, priority: NSUInteger);
}
