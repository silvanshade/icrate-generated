//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKRecurrenceEnd")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EKRecurrenceEnd;
}

#[cfg(feature = "EventKit_EKRecurrenceEnd")]
unsafe impl NSCoding for EKRecurrenceEnd {}

#[cfg(feature = "EventKit_EKRecurrenceEnd")]
unsafe impl NSObjectProtocol for EKRecurrenceEnd {}

#[cfg(feature = "EventKit_EKRecurrenceEnd")]
unsafe impl NSSecureCoding for EKRecurrenceEnd {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKRecurrenceEnd")]
    pub type EKRecurrenceEnd;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "recurrenceEndWithEndDate:", managed = "Other")]
    pub unsafe fn recurrenceEndWithEndDate(end_date: &NSDate) -> Id<Self>;

    #[objc2::method(sel = "recurrenceEndWithOccurrenceCount:", managed = "Other")]
    pub unsafe fn recurrenceEndWithOccurrenceCount(occurrence_count: NSUInteger) -> Id<Self>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endDate", managed = "Other")]
    pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

    #[objc2::method(sel = "occurrenceCount")]
    pub unsafe fn occurrenceCount(&self) -> NSUInteger;
}
