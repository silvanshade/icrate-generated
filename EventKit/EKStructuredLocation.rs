//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = EKObject,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKStructuredLocation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EKStructuredLocation;
}

#[cfg(feature = "EventKit_EKStructuredLocation")]
unsafe impl NSObjectProtocol for EKStructuredLocation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKStructuredLocation")]
    pub type EKStructuredLocation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "locationWithTitle:", managed = "Other")]
    pub unsafe fn locationWithTitle(title: &NSString) -> Id<Self>;

    #[cfg(feature = "MapKit_MKMapItem")]
    #[objc2::method(sel = "locationWithMapItem:", managed = "Other")]
    pub unsafe fn locationWithMapItem(map_item: &MKMapItem) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: Option<&NSString>);

    #[cfg(feature = "CoreLocation_CLLocation")]
    #[objc2::method(sel = "geoLocation", managed = "Other")]
    pub unsafe fn geoLocation(&self) -> Option<Id<CLLocation>>;

    #[cfg(feature = "CoreLocation_CLLocation")]
    #[objc2::method(sel = "setGeoLocation:")]
    pub unsafe fn setGeoLocation(&self, geo_location: Option<&CLLocation>);

    #[objc2::method(sel = "radius")]
    pub unsafe fn radius(&self) -> c_double;

    #[objc2::method(sel = "setRadius:")]
    pub unsafe fn setRadius(&self, radius: c_double);
}
