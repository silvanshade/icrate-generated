//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = EKObject,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKSource")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EKSource;
}

#[cfg(feature = "EventKit_EKSource")]
unsafe impl NSObjectProtocol for EKSource {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKSource")]
    pub type EKSource;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "sourceIdentifier", managed = "Other")]
    pub unsafe fn sourceIdentifier(&self) -> Id<NSString>;

    #[objc2::method(sel = "sourceType")]
    pub unsafe fn sourceType(&self) -> EKSourceType;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[cfg(all(feature = "EventKit_EKCalendar", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "calendars", managed = "Other")]
    pub unsafe fn calendars(&self) -> Id<NSSet<EKCalendar>>;

    #[cfg(all(feature = "EventKit_EKCalendar", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "calendarsForEntityType:", managed = "Other")]
    pub unsafe fn calendarsForEntityType(&self, entity_type: EKEntityType)
        -> Id<NSSet<EKCalendar>>;

    #[objc2::method(sel = "isDelegate")]
    pub unsafe fn isDelegate(&self) -> bool;
}
