//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = EKObject,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKAlarm")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EKAlarm;
}

#[cfg(feature = "EventKit_EKAlarm")]
unsafe impl NSObjectProtocol for EKAlarm {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "EventKit_EKAlarm")]
    pub type EKAlarm;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "alarmWithAbsoluteDate:", managed = "Other")]
    pub unsafe fn alarmWithAbsoluteDate(date: &NSDate) -> Id<EKAlarm>;

    #[objc2::method(sel = "alarmWithRelativeOffset:", managed = "Other")]
    pub unsafe fn alarmWithRelativeOffset(offset: NSTimeInterval) -> Id<EKAlarm>;

    #[objc2::method(sel = "relativeOffset")]
    pub unsafe fn relativeOffset(&self) -> NSTimeInterval;

    #[objc2::method(sel = "setRelativeOffset:")]
    pub unsafe fn setRelativeOffset(&self, relative_offset: NSTimeInterval);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "absoluteDate", managed = "Other")]
    pub unsafe fn absoluteDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "setAbsoluteDate:")]
    pub unsafe fn setAbsoluteDate(&self, absolute_date: Option<&NSDate>);

    #[cfg(feature = "EventKit_EKStructuredLocation")]
    #[objc2::method(sel = "structuredLocation", managed = "Other")]
    pub unsafe fn structuredLocation(&self) -> Option<Id<EKStructuredLocation>>;

    #[cfg(feature = "EventKit_EKStructuredLocation")]
    #[objc2::method(sel = "setStructuredLocation:")]
    pub unsafe fn setStructuredLocation(&self, structured_location: Option<&EKStructuredLocation>);

    #[objc2::method(sel = "proximity")]
    pub unsafe fn proximity(&self) -> EKAlarmProximity;

    #[objc2::method(sel = "setProximity:")]
    pub unsafe fn setProximity(&self, proximity: EKAlarmProximity);

    #[objc2::method(sel = "type")]
    pub unsafe fn r#type(&self) -> EKAlarmType;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "emailAddress", managed = "Other")]
    pub unsafe fn emailAddress(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setEmailAddress:")]
    pub unsafe fn setEmailAddress(&self, email_address: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "soundName", managed = "Other")]
    pub unsafe fn soundName(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSoundName:")]
    pub unsafe fn setSoundName(&self, sound_name: Option<&NSString>);

    #[cfg(feature = "Foundation_NSURL")]
    #[deprecated]
    #[objc2::method(sel = "url", managed = "Other")]
    pub unsafe fn url(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSURL")]
    #[deprecated]
    #[objc2::method(sel = "setUrl:")]
    pub unsafe fn setUrl(&self, url: Option<&NSURL>);
}
