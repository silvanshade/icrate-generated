//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Speech::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum SFSpeechRecognitionTaskState {
    SFSpeechRecognitionTaskStateStarting = 0,
    SFSpeechRecognitionTaskStateRunning = 1,
    SFSpeechRecognitionTaskStateFinishing = 2,
    SFSpeechRecognitionTaskStateCanceling = 3,
    SFSpeechRecognitionTaskStateCompleted = 4,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type SFSpeechRecognitionTask;
}

#[cfg(feature = "Speech_SFSpeechRecognitionTask")]
unsafe impl NSObjectProtocol for SFSpeechRecognitionTask {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    pub type SFSpeechRecognitionTask;

    #[objc2::method(sel = "state")]
    pub unsafe fn state(&self) -> SFSpeechRecognitionTaskState;

    #[objc2::method(sel = "isFinishing")]
    pub unsafe fn isFinishing(&self) -> bool;

    #[objc2::method(sel = "finish")]
    pub unsafe fn finish(&self);

    #[objc2::method(sel = "isCancelled")]
    pub unsafe fn isCancelled(&self) -> bool;

    #[objc2::method(sel = "cancel")]
    pub unsafe fn cancel(&self);

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "error", managed = "Other")]
    pub unsafe fn error(&self) -> Option<Id<NSError>>;
}

#[objc2::protocol]
pub unsafe trait SFSpeechRecognitionTaskDelegate: NSObjectProtocol {
    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    #[objc2::method(optional, sel = "speechRecognitionDidDetectSpeech:")]
    unsafe fn speechRecognitionDidDetectSpeech(&self, task: &SFSpeechRecognitionTask);

    #[cfg(all(
        feature = "Speech_SFSpeechRecognitionTask",
        feature = "Speech_SFTranscription"
    ))]
    #[objc2::method(optional, sel = "speechRecognitionTask:didHypothesizeTranscription:")]
    unsafe fn speechRecognitionTask_didHypothesizeTranscription(
        &self,
        task: &SFSpeechRecognitionTask,
        transcription: &SFTranscription,
    );

    #[cfg(all(
        feature = "Speech_SFSpeechRecognitionResult",
        feature = "Speech_SFSpeechRecognitionTask"
    ))]
    #[objc2::method(optional, sel = "speechRecognitionTask:didFinishRecognition:")]
    unsafe fn speechRecognitionTask_didFinishRecognition(
        &self,
        task: &SFSpeechRecognitionTask,
        recognition_result: &SFSpeechRecognitionResult,
    );

    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    #[objc2::method(optional, sel = "speechRecognitionTaskFinishedReadingAudio:")]
    unsafe fn speechRecognitionTaskFinishedReadingAudio(&self, task: &SFSpeechRecognitionTask);

    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    #[objc2::method(optional, sel = "speechRecognitionTaskWasCancelled:")]
    unsafe fn speechRecognitionTaskWasCancelled(&self, task: &SFSpeechRecognitionTask);

    #[cfg(feature = "Speech_SFSpeechRecognitionTask")]
    #[objc2::method(optional, sel = "speechRecognitionTask:didFinishSuccessfully:")]
    unsafe fn speechRecognitionTask_didFinishSuccessfully(
        &self,
        task: &SFSpeechRecognitionTask,
        successfully: bool,
    );
}
