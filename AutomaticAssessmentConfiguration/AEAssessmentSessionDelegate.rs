//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AutomaticAssessmentConfiguration::*;
use crate::Foundation::*;

#[objc2::protocol]
pub unsafe trait AEAssessmentSessionDelegate: NSObjectProtocol {
    #[cfg(feature = "AutomaticAssessmentConfiguration_AEAssessmentSession")]
    #[objc2::method(optional, sel = "assessmentSessionDidBegin:")]
    unsafe fn assessmentSessionDidBegin(&self, session: &AEAssessmentSession);

    #[cfg(all(
        feature = "AutomaticAssessmentConfiguration_AEAssessmentSession",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(optional, sel = "assessmentSession:failedToBeginWithError:")]
    unsafe fn assessmentSession_failedToBeginWithError(
        &self,
        session: &AEAssessmentSession,
        error: &NSError,
    );

    #[cfg(all(
        feature = "AutomaticAssessmentConfiguration_AEAssessmentSession",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(optional, sel = "assessmentSession:wasInterruptedWithError:")]
    unsafe fn assessmentSession_wasInterruptedWithError(
        &self,
        session: &AEAssessmentSession,
        error: &NSError,
    );

    #[cfg(feature = "AutomaticAssessmentConfiguration_AEAssessmentSession")]
    #[objc2::method(optional, sel = "assessmentSessionDidEnd:")]
    unsafe fn assessmentSessionDidEnd(&self, session: &AEAssessmentSession);

    #[cfg(feature = "AutomaticAssessmentConfiguration_AEAssessmentSession")]
    #[objc2::method(optional, sel = "assessmentSessionDidUpdate:")]
    unsafe fn assessmentSessionDidUpdate(&self, session: &AEAssessmentSession);

    #[cfg(all(
        feature = "AutomaticAssessmentConfiguration_AEAssessmentConfiguration",
        feature = "AutomaticAssessmentConfiguration_AEAssessmentSession",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(
        optional,
        sel = "assessmentSession:failedToUpdateToConfiguration:error:"
    )]
    unsafe fn assessmentSession_failedToUpdateToConfiguration_error(
        &self,
        session: &AEAssessmentSession,
        configuration: &AEAssessmentConfiguration,
        error: &NSError,
    );
}
