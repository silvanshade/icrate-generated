//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

typed_enum!(
    pub type NSGraphicsContextAttributeKey = NSString;
);

extern_static!(NSGraphicsContextDestinationAttributeName: &'static NSGraphicsContextAttributeKey);

extern_static!(
    NSGraphicsContextRepresentationFormatAttributeName: &'static NSGraphicsContextAttributeKey
);

typed_enum!(
    pub type NSGraphicsContextRepresentationFormatName = NSString;
);

extern_static!(NSGraphicsContextPSFormat: &'static NSGraphicsContextRepresentationFormatName);

extern_static!(NSGraphicsContextPDFFormat: &'static NSGraphicsContextRepresentationFormatName);

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSImageInterpolation {
    NSImageInterpolationDefault = 0,
    NSImageInterpolationNone = 1,
    NSImageInterpolationLow = 2,
    NSImageInterpolationMedium = 4,
    NSImageInterpolationHigh = 3,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGraphicsContext")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSGraphicsContext;
}

#[cfg(feature = "AppKit_NSGraphicsContext")]
unsafe impl NSObjectProtocol for NSGraphicsContext {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGraphicsContext")]
    pub type NSGraphicsContext;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "graphicsContextWithAttributes:", managed = "Other")]
    pub unsafe fn graphicsContextWithAttributes(
        attributes: &NSDictionary<NSGraphicsContextAttributeKey, Object>,
    ) -> Option<Id<NSGraphicsContext>>;

    #[cfg(feature = "AppKit_NSWindow")]
    #[objc2::method(sel = "graphicsContextWithWindow:", managed = "Other")]
    pub unsafe fn graphicsContextWithWindow(window: &NSWindow) -> Id<NSGraphicsContext>;

    #[cfg(feature = "AppKit_NSBitmapImageRep")]
    #[objc2::method(sel = "graphicsContextWithBitmapImageRep:", managed = "Other")]
    pub unsafe fn graphicsContextWithBitmapImageRep(
        bitmap_rep: &NSBitmapImageRep,
    ) -> Option<Id<NSGraphicsContext>>;

    #[objc2::method(sel = "currentContext", managed = "Other")]
    pub unsafe fn currentContext() -> Option<Id<NSGraphicsContext>>;

    #[objc2::method(sel = "setCurrentContext:")]
    pub unsafe fn setCurrentContext(current_context: Option<&NSGraphicsContext>);

    #[objc2::method(sel = "currentContextDrawingToScreen")]
    pub unsafe fn currentContextDrawingToScreen() -> bool;

    #[objc2::method(sel = "saveGraphicsState")]
    pub unsafe fn saveGraphicsState_class();

    #[objc2::method(sel = "restoreGraphicsState")]
    pub unsafe fn restoreGraphicsState_class();

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "attributes", managed = "Other")]
    pub unsafe fn attributes(
        &self,
    ) -> Option<Id<NSDictionary<NSGraphicsContextAttributeKey, Object>>>;

    #[objc2::method(sel = "isDrawingToScreen")]
    pub unsafe fn isDrawingToScreen(&self) -> bool;

    #[objc2::method(sel = "saveGraphicsState")]
    pub unsafe fn saveGraphicsState(&self);

    #[objc2::method(sel = "restoreGraphicsState")]
    pub unsafe fn restoreGraphicsState(&self);

    #[objc2::method(sel = "flushGraphics")]
    pub unsafe fn flushGraphics(&self);

    #[objc2::method(sel = "isFlipped")]
    pub unsafe fn isFlipped(&self) -> bool;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGraphicsContext")]
    pub type NSGraphicsContext;

    #[objc2::method(sel = "shouldAntialias")]
    pub unsafe fn shouldAntialias(&self) -> bool;

    #[objc2::method(sel = "setShouldAntialias:")]
    pub unsafe fn setShouldAntialias(&self, should_antialias: bool);

    #[objc2::method(sel = "imageInterpolation")]
    pub unsafe fn imageInterpolation(&self) -> NSImageInterpolation;

    #[objc2::method(sel = "setImageInterpolation:")]
    pub unsafe fn setImageInterpolation(&self, image_interpolation: NSImageInterpolation);

    #[objc2::method(sel = "patternPhase")]
    pub unsafe fn patternPhase(&self) -> NSPoint;

    #[objc2::method(sel = "setPatternPhase:")]
    pub unsafe fn setPatternPhase(&self, pattern_phase: NSPoint);

    #[objc2::method(sel = "compositingOperation")]
    pub unsafe fn compositingOperation(&self) -> NSCompositingOperation;

    #[objc2::method(sel = "setCompositingOperation:")]
    pub unsafe fn setCompositingOperation(&self, compositing_operation: NSCompositingOperation);

    #[objc2::method(sel = "colorRenderingIntent")]
    pub unsafe fn colorRenderingIntent(&self) -> NSColorRenderingIntent;

    #[objc2::method(sel = "setColorRenderingIntent:")]
    pub unsafe fn setColorRenderingIntent(&self, color_rendering_intent: NSColorRenderingIntent);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGraphicsContext")]
    pub type NSGraphicsContext;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGraphicsContext")]
    pub type NSGraphicsContext;

    #[deprecated = "This method has no effect"]
    #[objc2::method(sel = "setGraphicsState:")]
    pub unsafe fn setGraphicsState(g_state: NSInteger);

    #[deprecated]
    #[objc2::method(sel = "focusStack", managed = "Other")]
    pub unsafe fn focusStack(&self) -> Option<Id<Object>>;

    #[deprecated]
    #[objc2::method(sel = "setFocusStack:")]
    pub unsafe fn setFocusStack(&self, stack: Option<&Object>);

    #[deprecated]
    #[objc2::method(sel = "graphicsContextWithGraphicsPort:flipped:", managed = "Other")]
    pub unsafe fn graphicsContextWithGraphicsPort_flipped(
        graphics_port: NonNull<c_void>,
        initial_flipped_state: bool,
    ) -> Id<NSGraphicsContext>;

    #[deprecated]
    #[objc2::method(sel = "graphicsPort")]
    pub unsafe fn graphicsPort(&self) -> NonNull<c_void>;
}
