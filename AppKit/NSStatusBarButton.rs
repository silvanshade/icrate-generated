//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSButton,
    unsafe inherits = [
        NSControl,
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSStatusBarButton;
}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSAccessibility for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSAccessibilityButton for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSAccessibilityElementProtocol for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSAnimatablePropertyContainer for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSAppearanceCustomization for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSCoding for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSDraggingDestination for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSObjectProtocol for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSUserInterfaceCompression for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSUserInterfaceItemIdentification for NSStatusBarButton {}

#[cfg(feature = "AppKit_NSStatusBarButton")]
unsafe impl NSUserInterfaceValidations for NSStatusBarButton {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    pub type NSStatusBarButton;

    #[objc2::method(sel = "appearsDisabled")]
    pub unsafe fn appearsDisabled(&self) -> bool;

    #[objc2::method(sel = "setAppearsDisabled:")]
    pub unsafe fn setAppearsDisabled(&self, appears_disabled: bool);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSButton`
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    pub type NSStatusBarButton;

    #[cfg(all(feature = "AppKit_NSImage", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "buttonWithTitle:image:target:action:", managed = "Other")]
    pub unsafe fn buttonWithTitle_image_target_action(
        title: &NSString,
        image: &NSImage,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "buttonWithTitle:target:action:", managed = "Other")]
    pub unsafe fn buttonWithTitle_target_action(
        title: &NSString,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "buttonWithImage:target:action:", managed = "Other")]
    pub unsafe fn buttonWithImage_target_action(
        image: &NSImage,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "checkboxWithTitle:target:action:", managed = "Other")]
    pub unsafe fn checkboxWithTitle_target_action(
        title: &NSString,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "radioButtonWithTitle:target:action:", managed = "Other")]
    pub unsafe fn radioButtonWithTitle_target_action(
        title: &NSString,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusBarButton")]
    pub type NSStatusBarButton;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
