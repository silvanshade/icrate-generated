//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGlyphInfo")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSGlyphInfo;
}

#[cfg(feature = "AppKit_NSGlyphInfo")]
unsafe impl NSCoding for NSGlyphInfo {}

#[cfg(feature = "AppKit_NSGlyphInfo")]
unsafe impl NSObjectProtocol for NSGlyphInfo {}

#[cfg(feature = "AppKit_NSGlyphInfo")]
unsafe impl NSSecureCoding for NSGlyphInfo {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGlyphInfo")]
    pub type NSGlyphInfo;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "baseString", managed = "Other")]
    pub unsafe fn baseString(&self) -> Id<NSString>;
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSCharacterCollection {
    NSIdentityMappingCharacterCollection = 0,
    NSAdobeCNS1CharacterCollection = 1,
    NSAdobeGB1CharacterCollection = 2,
    NSAdobeJapan1CharacterCollection = 3,
    NSAdobeJapan2CharacterCollection = 4,
    NSAdobeKorea1CharacterCollection = 5,
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSGlyphInfo")]
    pub type NSGlyphInfo;

    #[cfg(all(feature = "AppKit_NSFont", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "glyphInfoWithGlyphName:forFont:baseString:", managed = "Other")]
    pub unsafe fn glyphInfoWithGlyphName_forFont_baseString(
        glyph_name: &NSString,
        font: &NSFont,
        string: &NSString,
    ) -> Option<Id<NSGlyphInfo>>;

    #[cfg(all(feature = "AppKit_NSFont", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "glyphInfoWithGlyph:forFont:baseString:", managed = "Other")]
    pub unsafe fn glyphInfoWithGlyph_forFont_baseString(
        glyph: NSGlyph,
        font: &NSFont,
        string: &NSString,
    ) -> Option<Id<NSGlyphInfo>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(
        sel = "glyphInfoWithCharacterIdentifier:collection:baseString:",
        managed = "Other"
    )]
    pub unsafe fn glyphInfoWithCharacterIdentifier_collection_baseString(
        cid: NSUInteger,
        character_collection: NSCharacterCollection,
        string: &NSString,
    ) -> Option<Id<NSGlyphInfo>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "glyphName", managed = "Other")]
    pub unsafe fn glyphName(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "characterIdentifier")]
    pub unsafe fn characterIdentifier(&self) -> NSUInteger;

    #[objc2::method(sel = "characterCollection")]
    pub unsafe fn characterCollection(&self) -> NSCharacterCollection;
}
