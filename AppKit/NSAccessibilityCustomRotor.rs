//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSAccessibilityCustomRotorSearchDirection {
    NSAccessibilityCustomRotorSearchDirectionPrevious = 0,
    NSAccessibilityCustomRotorSearchDirectionNext = 1,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSAccessibilityCustomRotorType {
    NSAccessibilityCustomRotorTypeCustom = 0,
    NSAccessibilityCustomRotorTypeAny = 1,
    NSAccessibilityCustomRotorTypeAnnotation = 2,
    NSAccessibilityCustomRotorTypeBoldText = 3,
    NSAccessibilityCustomRotorTypeHeading = 4,
    NSAccessibilityCustomRotorTypeHeadingLevel1 = 5,
    NSAccessibilityCustomRotorTypeHeadingLevel2 = 6,
    NSAccessibilityCustomRotorTypeHeadingLevel3 = 7,
    NSAccessibilityCustomRotorTypeHeadingLevel4 = 8,
    NSAccessibilityCustomRotorTypeHeadingLevel5 = 9,
    NSAccessibilityCustomRotorTypeHeadingLevel6 = 10,
    NSAccessibilityCustomRotorTypeImage = 11,
    NSAccessibilityCustomRotorTypeItalicText = 12,
    NSAccessibilityCustomRotorTypeLandmark = 13,
    NSAccessibilityCustomRotorTypeLink = 14,
    NSAccessibilityCustomRotorTypeList = 15,
    NSAccessibilityCustomRotorTypeMisspelledWord = 16,
    NSAccessibilityCustomRotorTypeTable = 17,
    NSAccessibilityCustomRotorTypeTextField = 18,
    NSAccessibilityCustomRotorTypeUnderlinedText = 19,
    NSAccessibilityCustomRotorTypeVisitedLink = 20,
    NSAccessibilityCustomRotorTypeAudiograph = 21,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAccessibilityCustomRotor;
}

#[cfg(feature = "AppKit_NSAccessibilityCustomRotor")]
unsafe impl NSObjectProtocol for NSAccessibilityCustomRotor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotor")]
    pub type NSAccessibilityCustomRotor;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithLabel:itemSearchDelegate:", managed = "Init")]
    pub unsafe fn initWithLabel_itemSearchDelegate(
        this: Option<Allocated<Self>>,
        label: &NSString,
        item_search_delegate: &ProtocolObject<dyn NSAccessibilityCustomRotorItemSearchDelegate>,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithRotorType:itemSearchDelegate:", managed = "Init")]
    pub unsafe fn initWithRotorType_itemSearchDelegate(
        this: Option<Allocated<Self>>,
        rotor_type: NSAccessibilityCustomRotorType,
        item_search_delegate: &ProtocolObject<dyn NSAccessibilityCustomRotorItemSearchDelegate>,
    ) -> Id<Self>;

    #[objc2::method(sel = "type")]
    pub unsafe fn r#type(&self) -> NSAccessibilityCustomRotorType;

    #[objc2::method(sel = "setType:")]
    pub unsafe fn setType(&self, r#type: NSAccessibilityCustomRotorType);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    pub unsafe fn setLabel(&self, label: &NSString);

    #[objc2::method(sel = "itemSearchDelegate", managed = "Other")]
    pub unsafe fn itemSearchDelegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn NSAccessibilityCustomRotorItemSearchDelegate>>>;

    #[objc2::method(sel = "setItemSearchDelegate:")]
    pub unsafe fn setItemSearchDelegate(
        &self,
        item_search_delegate: Option<
            &ProtocolObject<dyn NSAccessibilityCustomRotorItemSearchDelegate>,
        >,
    );

    #[objc2::method(sel = "itemLoadingDelegate", managed = "Other")]
    pub unsafe fn itemLoadingDelegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn NSAccessibilityElementLoading>>>;

    #[objc2::method(sel = "setItemLoadingDelegate:")]
    pub unsafe fn setItemLoadingDelegate(
        &self,
        item_loading_delegate: Option<&ProtocolObject<dyn NSAccessibilityElementLoading>>,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorSearchParameters")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAccessibilityCustomRotorSearchParameters;
}

#[cfg(feature = "AppKit_NSAccessibilityCustomRotorSearchParameters")]
unsafe impl NSObjectProtocol for NSAccessibilityCustomRotorSearchParameters {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorSearchParameters")]
    pub type NSAccessibilityCustomRotorSearchParameters;

    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorItemResult")]
    #[objc2::method(sel = "currentItem", managed = "Other")]
    pub unsafe fn currentItem(&self) -> Option<Id<NSAccessibilityCustomRotorItemResult>>;

    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorItemResult")]
    #[objc2::method(sel = "setCurrentItem:")]
    pub unsafe fn setCurrentItem(
        &self,
        current_item: Option<&NSAccessibilityCustomRotorItemResult>,
    );

    #[objc2::method(sel = "searchDirection")]
    pub unsafe fn searchDirection(&self) -> NSAccessibilityCustomRotorSearchDirection;

    #[objc2::method(sel = "setSearchDirection:")]
    pub unsafe fn setSearchDirection(
        &self,
        search_direction: NSAccessibilityCustomRotorSearchDirection,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "filterString", managed = "Other")]
    pub unsafe fn filterString(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setFilterString:")]
    pub unsafe fn setFilterString(&self, filter_string: &NSString);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorItemResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAccessibilityCustomRotorItemResult;
}

#[cfg(feature = "AppKit_NSAccessibilityCustomRotorItemResult")]
unsafe impl NSObjectProtocol for NSAccessibilityCustomRotorItemResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAccessibilityCustomRotorItemResult")]
    pub type NSAccessibilityCustomRotorItemResult;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "initWithTargetElement:", managed = "Init")]
    pub unsafe fn initWithTargetElement(
        this: Option<Allocated<Self>>,
        target_element: &ProtocolObject<dyn NSAccessibilityElementProtocol>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithItemLoadingToken:customLabel:", managed = "Init")]
    pub unsafe fn initWithItemLoadingToken_customLabel(
        this: Option<Allocated<Self>>,
        item_loading_token: &NSAccessibilityLoadingToken,
        custom_label: &NSString,
    ) -> Id<Self>;

    #[objc2::method(sel = "targetElement", managed = "Other")]
    pub unsafe fn targetElement(
        &self,
    ) -> Option<Id<ProtocolObject<dyn NSAccessibilityElementProtocol>>>;

    #[objc2::method(sel = "itemLoadingToken", managed = "Other")]
    pub unsafe fn itemLoadingToken(&self) -> Option<Id<NSAccessibilityLoadingToken>>;

    #[objc2::method(sel = "targetRange")]
    pub unsafe fn targetRange(&self) -> NSRange;

    #[objc2::method(sel = "setTargetRange:")]
    pub unsafe fn setTargetRange(&self, target_range: NSRange);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "customLabel", managed = "Other")]
    pub unsafe fn customLabel(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCustomLabel:")]
    pub unsafe fn setCustomLabel(&self, custom_label: Option<&NSString>);
}

#[objc2::protocol]
pub unsafe trait NSAccessibilityCustomRotorItemSearchDelegate: NSObjectProtocol {
    #[cfg(all(
        feature = "AppKit_NSAccessibilityCustomRotor",
        feature = "AppKit_NSAccessibilityCustomRotorItemResult",
        feature = "AppKit_NSAccessibilityCustomRotorSearchParameters"
    ))]
    #[objc2::method(sel = "rotor:resultForSearchParameters:", managed = "Other")]
    unsafe fn rotor_resultForSearchParameters(
        &self,
        rotor: &NSAccessibilityCustomRotor,
        search_parameters: &NSAccessibilityCustomRotorSearchParameters,
    ) -> Option<Id<NSAccessibilityCustomRotorItemResult>>;
}
