//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::protocol]
pub unsafe trait NSTextInputClient {
    #[objc2::method(sel = "insertText:replacementRange:")]
    unsafe fn insertText_replacementRange(&self, string: &Object, replacement_range: NSRange);

    #[objc2::method(sel = "doCommandBySelector:")]
    unsafe fn doCommandBySelector(&self, selector: Sel);

    #[objc2::method(sel = "setMarkedText:selectedRange:replacementRange:")]
    unsafe fn setMarkedText_selectedRange_replacementRange(
        &self,
        string: &Object,
        selected_range: NSRange,
        replacement_range: NSRange,
    );

    #[objc2::method(sel = "unmarkText")]
    unsafe fn unmarkText(&self);

    #[objc2::method(sel = "selectedRange")]
    unsafe fn selectedRange(&self) -> NSRange;

    #[objc2::method(sel = "markedRange")]
    unsafe fn markedRange(&self) -> NSRange;

    #[objc2::method(sel = "hasMarkedText")]
    unsafe fn hasMarkedText(&self) -> bool;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(
        sel = "attributedSubstringForProposedRange:actualRange:",
        managed = "Other"
    )]
    unsafe fn attributedSubstringForProposedRange_actualRange(
        &self,
        range: NSRange,
        actual_range: NSRangePointer,
    ) -> Option<Id<NSAttributedString>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "validAttributesForMarkedText", managed = "Other")]
    unsafe fn validAttributesForMarkedText(&self) -> Id<NSArray<NSAttributedStringKey>>;

    #[objc2::method(sel = "firstRectForCharacterRange:actualRange:")]
    unsafe fn firstRectForCharacterRange_actualRange(
        &self,
        range: NSRange,
        actual_range: NSRangePointer,
    ) -> NSRect;

    #[objc2::method(sel = "characterIndexForPoint:")]
    unsafe fn characterIndexForPoint(&self, point: NSPoint) -> NSUInteger;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(optional, sel = "attributedString", managed = "Other")]
    unsafe fn attributedString(&self) -> Id<NSAttributedString>;

    #[objc2::method(optional, sel = "fractionOfDistanceThroughGlyphForPoint:")]
    unsafe fn fractionOfDistanceThroughGlyphForPoint(&self, point: NSPoint) -> CGFloat;

    #[objc2::method(optional, sel = "baselineDeltaForCharacterAtIndex:")]
    unsafe fn baselineDeltaForCharacterAtIndex(&self, an_index: NSUInteger) -> CGFloat;

    #[objc2::method(optional, sel = "windowLevel")]
    unsafe fn windowLevel(&self) -> NSInteger;

    #[objc2::method(optional, sel = "drawsVerticallyForCharacterAtIndex:")]
    unsafe fn drawsVerticallyForCharacterAtIndex(&self, char_index: NSUInteger) -> bool;
}
