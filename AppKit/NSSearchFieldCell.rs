//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_static!(NSSearchFieldRecentsTitleMenuItemTag: NSInteger = 1000);

extern_static!(NSSearchFieldRecentsMenuItemTag: NSInteger = 1001);

extern_static!(NSSearchFieldClearRecentsMenuItemTag: NSInteger = 1002);

extern_static!(NSSearchFieldNoRecentsMenuItemTag: NSInteger = 1003);

#[objc2::interface(
    unsafe super = NSTextFieldCell,
    unsafe inherits = [
        NSActionCell,
        NSCell,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSearchFieldCell")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSearchFieldCell;
}

#[cfg(feature = "AppKit_NSSearchFieldCell")]
unsafe impl NSAccessibility for NSSearchFieldCell {}

#[cfg(feature = "AppKit_NSSearchFieldCell")]
unsafe impl NSAccessibilityElementProtocol for NSSearchFieldCell {}

#[cfg(feature = "AppKit_NSSearchFieldCell")]
unsafe impl NSCoding for NSSearchFieldCell {}

#[cfg(feature = "AppKit_NSSearchFieldCell")]
unsafe impl NSObjectProtocol for NSSearchFieldCell {}

#[cfg(feature = "AppKit_NSSearchFieldCell")]
unsafe impl NSUserInterfaceItemIdentification for NSSearchFieldCell {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSearchFieldCell")]
    pub type NSSearchFieldCell;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initTextCell:", managed = "Init")]
    pub unsafe fn initTextCell(this: Option<Allocated<Self>>, string: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, coder: &NSCoder) -> Id<Self>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "initImageCell:", managed = "Init")]
    pub unsafe fn initImageCell(this: Option<Allocated<Self>>, image: Option<&NSImage>)
        -> Id<Self>;

    #[cfg(feature = "AppKit_NSButtonCell")]
    #[objc2::method(sel = "searchButtonCell", managed = "Other")]
    pub unsafe fn searchButtonCell(&self) -> Option<Id<NSButtonCell>>;

    #[cfg(feature = "AppKit_NSButtonCell")]
    #[objc2::method(sel = "setSearchButtonCell:")]
    pub unsafe fn setSearchButtonCell(&self, search_button_cell: Option<&NSButtonCell>);

    #[cfg(feature = "AppKit_NSButtonCell")]
    #[objc2::method(sel = "cancelButtonCell", managed = "Other")]
    pub unsafe fn cancelButtonCell(&self) -> Option<Id<NSButtonCell>>;

    #[cfg(feature = "AppKit_NSButtonCell")]
    #[objc2::method(sel = "setCancelButtonCell:")]
    pub unsafe fn setCancelButtonCell(&self, cancel_button_cell: Option<&NSButtonCell>);

    #[objc2::method(sel = "resetSearchButtonCell")]
    pub unsafe fn resetSearchButtonCell(&self);

    #[objc2::method(sel = "resetCancelButtonCell")]
    pub unsafe fn resetCancelButtonCell(&self);

    #[objc2::method(sel = "searchTextRectForBounds:")]
    pub unsafe fn searchTextRectForBounds(&self, rect: NSRect) -> NSRect;

    #[objc2::method(sel = "searchButtonRectForBounds:")]
    pub unsafe fn searchButtonRectForBounds(&self, rect: NSRect) -> NSRect;

    #[objc2::method(sel = "cancelButtonRectForBounds:")]
    pub unsafe fn cancelButtonRectForBounds(&self, rect: NSRect) -> NSRect;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "searchMenuTemplate", managed = "Other")]
    pub unsafe fn searchMenuTemplate(&self) -> Option<Id<NSMenu>>;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "setSearchMenuTemplate:")]
    pub unsafe fn setSearchMenuTemplate(&self, search_menu_template: Option<&NSMenu>);

    #[objc2::method(sel = "sendsWholeSearchString")]
    pub unsafe fn sendsWholeSearchString(&self) -> bool;

    #[objc2::method(sel = "setSendsWholeSearchString:")]
    pub unsafe fn setSendsWholeSearchString(&self, sends_whole_search_string: bool);

    #[objc2::method(sel = "maximumRecents")]
    pub unsafe fn maximumRecents(&self) -> NSInteger;

    #[objc2::method(sel = "setMaximumRecents:")]
    pub unsafe fn setMaximumRecents(&self, maximum_recents: NSInteger);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "recentSearches", managed = "Other")]
    pub unsafe fn recentSearches(&self) -> Id<NSArray<NSString>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "setRecentSearches:")]
    pub unsafe fn setRecentSearches(&self, recent_searches: Option<&NSArray<NSString>>);

    #[objc2::method(sel = "recentsAutosaveName", managed = "Other")]
    pub unsafe fn recentsAutosaveName(&self) -> Option<Id<NSSearchFieldRecentsAutosaveName>>;

    #[objc2::method(sel = "setRecentsAutosaveName:")]
    pub unsafe fn setRecentsAutosaveName(
        &self,
        recents_autosave_name: Option<&NSSearchFieldRecentsAutosaveName>,
    );

    #[objc2::method(sel = "sendsSearchStringImmediately")]
    pub unsafe fn sendsSearchStringImmediately(&self) -> bool;

    #[objc2::method(sel = "setSendsSearchStringImmediately:")]
    pub unsafe fn setSendsSearchStringImmediately(&self, sends_search_string_immediately: bool);
}
