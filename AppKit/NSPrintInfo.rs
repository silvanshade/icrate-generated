//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSPaperOrientation {
    NSPaperOrientationPortrait = 0,
    NSPaperOrientationLandscape = 1,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSPrintingPaginationMode {
    NSPrintingPaginationModeAutomatic = 0,
    NSPrintingPaginationModeFit = 1,
    NSPrintingPaginationModeClip = 2,
}

typed_extensible_enum!(
    pub type NSPrintInfoAttributeKey = NSString;
);

extern_static!(NSPrintPaperName: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintPaperSize: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintOrientation: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintScalingFactor: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintLeftMargin: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintRightMargin: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintTopMargin: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintBottomMargin: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintHorizontallyCentered: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintVerticallyCentered: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintHorizontalPagination: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintVerticalPagination: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintPrinter: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintCopies: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintAllPages: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintFirstPage: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintLastPage: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintMustCollate: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintReversePageOrder: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintJobDisposition: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintPagesAcross: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintPagesDown: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintTime: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintDetailedErrorReporting: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintFaxNumber: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintPrinterName: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintSelectionOnly: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintJobSavingURL: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintJobSavingFileNameExtensionHidden: &'static NSPrintInfoAttributeKey);

extern_static!(NSPrintHeaderAndFooter: &'static NSPrintInfoAttributeKey);

typed_enum!(
    pub type NSPrintJobDispositionValue = NSString;
);

extern_static!(NSPrintSpoolJob: &'static NSPrintJobDispositionValue);

extern_static!(NSPrintPreviewJob: &'static NSPrintJobDispositionValue);

extern_static!(NSPrintSaveJob: &'static NSPrintJobDispositionValue);

extern_static!(NSPrintCancelJob: &'static NSPrintJobDispositionValue);

pub type NSPrintInfoSettingKey = NSString;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPrintInfo")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPrintInfo;
}

#[cfg(feature = "AppKit_NSPrintInfo")]
unsafe impl NSCoding for NSPrintInfo {}

#[cfg(feature = "AppKit_NSPrintInfo")]
unsafe impl NSObjectProtocol for NSPrintInfo {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPrintInfo")]
    pub type NSPrintInfo;

    #[objc2::method(sel = "sharedPrintInfo", managed = "Other")]
    pub unsafe fn sharedPrintInfo() -> Id<NSPrintInfo>;

    #[objc2::method(sel = "setSharedPrintInfo:")]
    pub unsafe fn setSharedPrintInfo(shared_print_info: &NSPrintInfo);

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "initWithDictionary:", managed = "Init")]
    pub unsafe fn initWithDictionary(
        this: Option<Allocated<Self>>,
        attributes: &NSDictionary<NSPrintInfoAttributeKey, Object>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, coder: &NSCoder) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSMutableDictionary")]
    #[objc2::method(sel = "dictionary", managed = "Other")]
    pub unsafe fn dictionary(
        &self,
    ) -> Id<NSMutableDictionary<NSPrintInfoAttributeKey, Object>, Owned>;

    #[objc2::method(sel = "paperName", managed = "Other")]
    pub unsafe fn paperName(&self) -> Option<Id<NSPrinterPaperName>>;

    #[objc2::method(sel = "setPaperName:")]
    pub unsafe fn setPaperName(&self, paper_name: Option<&NSPrinterPaperName>);

    #[objc2::method(sel = "paperSize")]
    pub unsafe fn paperSize(&self) -> NSSize;

    #[objc2::method(sel = "setPaperSize:")]
    pub unsafe fn setPaperSize(&self, paper_size: NSSize);

    #[objc2::method(sel = "orientation")]
    pub unsafe fn orientation(&self) -> NSPaperOrientation;

    #[objc2::method(sel = "setOrientation:")]
    pub unsafe fn setOrientation(&self, orientation: NSPaperOrientation);

    #[objc2::method(sel = "scalingFactor")]
    pub unsafe fn scalingFactor(&self) -> CGFloat;

    #[objc2::method(sel = "setScalingFactor:")]
    pub unsafe fn setScalingFactor(&self, scaling_factor: CGFloat);

    #[objc2::method(sel = "leftMargin")]
    pub unsafe fn leftMargin(&self) -> CGFloat;

    #[objc2::method(sel = "setLeftMargin:")]
    pub unsafe fn setLeftMargin(&self, left_margin: CGFloat);

    #[objc2::method(sel = "rightMargin")]
    pub unsafe fn rightMargin(&self) -> CGFloat;

    #[objc2::method(sel = "setRightMargin:")]
    pub unsafe fn setRightMargin(&self, right_margin: CGFloat);

    #[objc2::method(sel = "topMargin")]
    pub unsafe fn topMargin(&self) -> CGFloat;

    #[objc2::method(sel = "setTopMargin:")]
    pub unsafe fn setTopMargin(&self, top_margin: CGFloat);

    #[objc2::method(sel = "bottomMargin")]
    pub unsafe fn bottomMargin(&self) -> CGFloat;

    #[objc2::method(sel = "setBottomMargin:")]
    pub unsafe fn setBottomMargin(&self, bottom_margin: CGFloat);

    #[objc2::method(sel = "isHorizontallyCentered")]
    pub unsafe fn isHorizontallyCentered(&self) -> bool;

    #[objc2::method(sel = "setHorizontallyCentered:")]
    pub unsafe fn setHorizontallyCentered(&self, horizontally_centered: bool);

    #[objc2::method(sel = "isVerticallyCentered")]
    pub unsafe fn isVerticallyCentered(&self) -> bool;

    #[objc2::method(sel = "setVerticallyCentered:")]
    pub unsafe fn setVerticallyCentered(&self, vertically_centered: bool);

    #[objc2::method(sel = "horizontalPagination")]
    pub unsafe fn horizontalPagination(&self) -> NSPrintingPaginationMode;

    #[objc2::method(sel = "setHorizontalPagination:")]
    pub unsafe fn setHorizontalPagination(&self, horizontal_pagination: NSPrintingPaginationMode);

    #[objc2::method(sel = "verticalPagination")]
    pub unsafe fn verticalPagination(&self) -> NSPrintingPaginationMode;

    #[objc2::method(sel = "setVerticalPagination:")]
    pub unsafe fn setVerticalPagination(&self, vertical_pagination: NSPrintingPaginationMode);

    #[objc2::method(sel = "jobDisposition", managed = "Other")]
    pub unsafe fn jobDisposition(&self) -> Id<NSPrintJobDispositionValue>;

    #[objc2::method(sel = "setJobDisposition:")]
    pub unsafe fn setJobDisposition(&self, job_disposition: &NSPrintJobDispositionValue);

    #[cfg(feature = "AppKit_NSPrinter")]
    #[objc2::method(sel = "printer", managed = "Other")]
    pub unsafe fn printer(&self) -> Id<NSPrinter>;

    #[cfg(feature = "AppKit_NSPrinter")]
    #[objc2::method(sel = "setPrinter:")]
    pub unsafe fn setPrinter(&self, printer: &NSPrinter);

    #[objc2::method(sel = "setUpPrintOperationDefaultValues")]
    pub unsafe fn setUpPrintOperationDefaultValues(&self);

    #[objc2::method(sel = "imageablePageBounds")]
    pub unsafe fn imageablePageBounds(&self) -> NSRect;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "localizedPaperName", managed = "Other")]
    pub unsafe fn localizedPaperName(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "AppKit_NSPrinter")]
    #[objc2::method(sel = "defaultPrinter", managed = "Other")]
    pub unsafe fn defaultPrinter() -> Option<Id<NSPrinter>>;

    #[cfg(feature = "Foundation_NSMutableDictionary")]
    #[objc2::method(sel = "printSettings", managed = "Other")]
    pub unsafe fn printSettings(
        &self,
    ) -> Id<NSMutableDictionary<NSPrintInfoSettingKey, Object>, Owned>;

    #[objc2::method(sel = "PMPrintSession")]
    pub unsafe fn PMPrintSession(&self) -> NonNull<c_void>;

    #[objc2::method(sel = "PMPageFormat")]
    pub unsafe fn PMPageFormat(&self) -> NonNull<c_void>;

    #[objc2::method(sel = "PMPrintSettings")]
    pub unsafe fn PMPrintSettings(&self) -> NonNull<c_void>;

    #[objc2::method(sel = "updateFromPMPageFormat")]
    pub unsafe fn updateFromPMPageFormat(&self);

    #[objc2::method(sel = "updateFromPMPrintSettings")]
    pub unsafe fn updateFromPMPrintSettings(&self);

    #[objc2::method(sel = "isSelectionOnly")]
    pub unsafe fn isSelectionOnly(&self) -> bool;

    #[objc2::method(sel = "setSelectionOnly:")]
    pub unsafe fn setSelectionOnly(&self, selection_only: bool);

    #[cfg(feature = "AppKit_NSPDFInfo")]
    #[objc2::method(sel = "takeSettingsFromPDFInfo:")]
    pub unsafe fn takeSettingsFromPDFInfo(&self, in_pdf_info: &NSPDFInfo);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPrintInfo")]
    pub type NSPrintInfo;

    #[cfg(feature = "AppKit_NSPrinter")]
    #[deprecated = "NSPrintInfo's implementation has no effect"]
    #[objc2::method(sel = "setDefaultPrinter:")]
    pub unsafe fn setDefaultPrinter(printer: Option<&NSPrinter>);

    #[deprecated = "Use -[NSPrinter pageSizeForPaper:] instead"]
    #[objc2::method(sel = "sizeForPaperName:")]
    pub unsafe fn sizeForPaperName(name: Option<&NSPrinterPaperName>) -> NSSize;
}

extern_static!(NSPrintFormName: &'static NSString);

extern_static!(NSPrintJobFeatures: &'static NSString);

extern_static!(NSPrintManualFeed: &'static NSString);

extern_static!(NSPrintPagesPerSheet: &'static NSString);

extern_static!(NSPrintPaperFeed: &'static NSString);

extern_static!(NSPrintSavePath: &'static NSString);

#[ns_enum]
#[underlying(NSUInteger)]
#[deprecated]
pub enum NSPrintingOrientation {
    #[deprecated]
    NSPortraitOrientation = 0,
    #[deprecated]
    NSLandscapeOrientation = 1,
}

extern_static!(NSAutoPagination: NSPrintingPaginationMode = NSPrintingPaginationModeAutomatic);

extern_static!(NSFitPagination: NSPrintingPaginationMode = NSPrintingPaginationModeFit);

extern_static!(NSClipPagination: NSPrintingPaginationMode = NSPrintingPaginationModeClip);
