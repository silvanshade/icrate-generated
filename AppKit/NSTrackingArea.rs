//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum NSTrackingAreaOptions {
    NSTrackingMouseEnteredAndExited = 0x01,
    NSTrackingMouseMoved = 0x02,
    NSTrackingCursorUpdate = 0x04,
    NSTrackingActiveWhenFirstResponder = 0x10,
    NSTrackingActiveInKeyWindow = 0x20,
    NSTrackingActiveInActiveApp = 0x40,
    NSTrackingActiveAlways = 0x80,
    NSTrackingAssumeInside = 0x100,
    NSTrackingInVisibleRect = 0x200,
    NSTrackingEnabledDuringMouseDrag = 0x400,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTrackingArea")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSTrackingArea;
}

#[cfg(feature = "AppKit_NSTrackingArea")]
unsafe impl NSCoding for NSTrackingArea {}

#[cfg(feature = "AppKit_NSTrackingArea")]
unsafe impl NSObjectProtocol for NSTrackingArea {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTrackingArea")]
    pub type NSTrackingArea;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "initWithRect:options:owner:userInfo:", managed = "Init")]
    pub unsafe fn initWithRect_options_owner_userInfo(
        this: Option<Allocated<Self>>,
        rect: NSRect,
        options: NSTrackingAreaOptions,
        owner: Option<&Object>,
        user_info: Option<&NSDictionary<Object, Object>>,
    ) -> Id<Self>;

    #[objc2::method(sel = "rect")]
    pub unsafe fn rect(&self) -> NSRect;

    #[objc2::method(sel = "options")]
    pub unsafe fn options(&self) -> NSTrackingAreaOptions;

    #[objc2::method(sel = "owner", managed = "Other")]
    pub unsafe fn owner(&self) -> Option<Id<Object>>;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "userInfo", managed = "Other")]
    pub unsafe fn userInfo(&self) -> Option<Id<NSDictionary<Object, Object>>>;
}
