//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

typed_extensible_enum!(
    pub type NSSliderAccessoryWidth = CGFloat;
);

extern_static!(NSSliderAccessoryWidthDefault: NSSliderAccessoryWidth);

extern_static!(NSSliderAccessoryWidthWide: NSSliderAccessoryWidth);

#[objc2::interface(
    unsafe super = NSTouchBarItem,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSliderTouchBarItem;
}

#[cfg(feature = "AppKit_NSSliderTouchBarItem")]
unsafe impl NSCoding for NSSliderTouchBarItem {}

#[cfg(feature = "AppKit_NSSliderTouchBarItem")]
unsafe impl NSObjectProtocol for NSSliderTouchBarItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    pub type NSSliderTouchBarItem;

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "view", managed = "Other")]
    pub unsafe fn view(&self) -> Id<NSView>;

    #[cfg(feature = "AppKit_NSSlider")]
    #[objc2::method(sel = "slider", managed = "Other")]
    pub unsafe fn slider(&self) -> Id<NSSlider>;

    #[cfg(feature = "AppKit_NSSlider")]
    #[objc2::method(sel = "setSlider:")]
    pub unsafe fn setSlider(&self, slider: &NSSlider);

    #[objc2::method(sel = "doubleValue")]
    pub unsafe fn doubleValue(&self) -> c_double;

    #[objc2::method(sel = "setDoubleValue:")]
    pub unsafe fn setDoubleValue(&self, double_value: c_double);

    #[objc2::method(sel = "minimumSliderWidth")]
    pub unsafe fn minimumSliderWidth(&self) -> CGFloat;

    #[objc2::method(sel = "setMinimumSliderWidth:")]
    pub unsafe fn setMinimumSliderWidth(&self, minimum_slider_width: CGFloat);

    #[objc2::method(sel = "maximumSliderWidth")]
    pub unsafe fn maximumSliderWidth(&self) -> CGFloat;

    #[objc2::method(sel = "setMaximumSliderWidth:")]
    pub unsafe fn setMaximumSliderWidth(&self, maximum_slider_width: CGFloat);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    pub unsafe fn setLabel(&self, label: Option<&NSString>);

    #[cfg(feature = "AppKit_NSSliderAccessory")]
    #[objc2::method(sel = "minimumValueAccessory", managed = "Other")]
    pub unsafe fn minimumValueAccessory(&self) -> Option<Id<NSSliderAccessory>>;

    #[cfg(feature = "AppKit_NSSliderAccessory")]
    #[objc2::method(sel = "setMinimumValueAccessory:")]
    pub unsafe fn setMinimumValueAccessory(
        &self,
        minimum_value_accessory: Option<&NSSliderAccessory>,
    );

    #[cfg(feature = "AppKit_NSSliderAccessory")]
    #[objc2::method(sel = "maximumValueAccessory", managed = "Other")]
    pub unsafe fn maximumValueAccessory(&self) -> Option<Id<NSSliderAccessory>>;

    #[cfg(feature = "AppKit_NSSliderAccessory")]
    #[objc2::method(sel = "setMaximumValueAccessory:")]
    pub unsafe fn setMaximumValueAccessory(
        &self,
        maximum_value_accessory: Option<&NSSliderAccessory>,
    );

    #[objc2::method(sel = "valueAccessoryWidth")]
    pub unsafe fn valueAccessoryWidth(&self) -> NSSliderAccessoryWidth;

    #[objc2::method(sel = "setValueAccessoryWidth:")]
    pub unsafe fn setValueAccessoryWidth(&self, value_accessory_width: NSSliderAccessoryWidth);

    #[objc2::method(sel = "target", managed = "Other")]
    pub unsafe fn target(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setTarget:")]
    pub unsafe fn setTarget(&self, target: Option<&Object>);

    #[objc2::method(sel = "action")]
    pub unsafe fn action(&self) -> Option<Sel>;

    #[objc2::method(sel = "setAction:")]
    pub unsafe fn setAction(&self, action: Option<Sel>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "customizationLabel", managed = "Other")]
    pub unsafe fn customizationLabel(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCustomizationLabel:")]
    pub unsafe fn setCustomizationLabel(&self, customization_label: Option<&NSString>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    pub type NSSliderTouchBarItem;

    #[objc2::method(sel = "initWithIdentifier:", managed = "Init")]
    pub unsafe fn initWithIdentifier(
        this: Option<Allocated<Self>>,
        identifier: &NSTouchBarItemIdentifier,
    ) -> Id<Self>;
}
