//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSTextField,
    unsafe inherits = [
        NSControl,
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextField")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSecureTextField;
}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAccessibility for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAccessibilityElementProtocol for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAccessibilityNavigableStaticText for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAccessibilityStaticText for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAnimatablePropertyContainer for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSAppearanceCustomization for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSCoding for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSDraggingDestination for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSObjectProtocol for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSTextContent for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSUserInterfaceItemIdentification for NSSecureTextField {}

#[cfg(feature = "AppKit_NSSecureTextField")]
unsafe impl NSUserInterfaceValidations for NSSecureTextField {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextField")]
    pub type NSSecureTextField;
}

#[objc2::interface(
    unsafe super = NSTextFieldCell,
    unsafe inherits = [
        NSActionCell,
        NSCell,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextFieldCell")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSecureTextFieldCell;
}

#[cfg(feature = "AppKit_NSSecureTextFieldCell")]
unsafe impl NSAccessibility for NSSecureTextFieldCell {}

#[cfg(feature = "AppKit_NSSecureTextFieldCell")]
unsafe impl NSAccessibilityElementProtocol for NSSecureTextFieldCell {}

#[cfg(feature = "AppKit_NSSecureTextFieldCell")]
unsafe impl NSCoding for NSSecureTextFieldCell {}

#[cfg(feature = "AppKit_NSSecureTextFieldCell")]
unsafe impl NSObjectProtocol for NSSecureTextFieldCell {}

#[cfg(feature = "AppKit_NSSecureTextFieldCell")]
unsafe impl NSUserInterfaceItemIdentification for NSSecureTextFieldCell {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextFieldCell")]
    pub type NSSecureTextFieldCell;

    #[objc2::method(sel = "echosBullets")]
    pub unsafe fn echosBullets(&self) -> bool;

    #[objc2::method(sel = "setEchosBullets:")]
    pub unsafe fn setEchosBullets(&self, echos_bullets: bool);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTextField`
        ///
        /// NSTextFieldConvenience
    #[cfg(feature = "AppKit_NSSecureTextField")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextField")]
    pub type NSSecureTextField;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "labelWithString:", managed = "Other")]
    pub unsafe fn labelWithString(string_value: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "wrappingLabelWithString:", managed = "Other")]
    pub unsafe fn wrappingLabelWithString(string_value: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "labelWithAttributedString:", managed = "Other")]
    pub unsafe fn labelWithAttributedString(
        attributed_string_value: &NSAttributedString,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "textFieldWithString:", managed = "Other")]
    pub unsafe fn textFieldWithString(string_value: &NSString) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSSecureTextField")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextField")]
    pub type NSSecureTextField;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTextFieldCell`
    #[cfg(feature = "AppKit_NSSecureTextFieldCell")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSSecureTextFieldCell")]
    pub type NSSecureTextFieldCell;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initTextCell:", managed = "Init")]
    pub unsafe fn initTextCell(this: Option<Allocated<Self>>, string: &NSString) -> Id<Self>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "initImageCell:", managed = "Init")]
    pub unsafe fn initImageCell(this: Option<Allocated<Self>>, image: Option<&NSImage>)
        -> Id<Self>;
}
