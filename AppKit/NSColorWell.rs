//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSColorWellStyle {
    NSColorWellStyleDefault = 0,
    NSColorWellStyleMinimal = 1,
    NSColorWellStyleExpanded = 2,
}

#[objc2::interface(
    unsafe super = NSControl,
    unsafe inherits = [
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSColorWell")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSColorWell;
}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSAccessibility for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSAccessibilityElementProtocol for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSAnimatablePropertyContainer for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSAppearanceCustomization for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSCoding for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSDraggingDestination for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSObjectProtocol for NSColorWell {}

#[cfg(feature = "AppKit_NSColorWell")]
unsafe impl NSUserInterfaceItemIdentification for NSColorWell {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSColorWell")]
    pub type NSColorWell;

    #[objc2::method(sel = "colorWellWithStyle:", managed = "Other")]
    pub unsafe fn colorWellWithStyle(style: NSColorWellStyle) -> Id<Self>;

    #[objc2::method(sel = "deactivate")]
    pub unsafe fn deactivate(&self);

    #[objc2::method(sel = "activate:")]
    pub unsafe fn activate(&self, exclusive: bool);

    #[objc2::method(sel = "isActive")]
    pub unsafe fn isActive(&self) -> bool;

    #[objc2::method(sel = "drawWellInside:")]
    pub unsafe fn drawWellInside(&self, inside_rect: NSRect);

    #[deprecated = "This property will be deprecated in a future release."]
    #[objc2::method(sel = "isBordered")]
    pub unsafe fn isBordered(&self) -> bool;

    #[deprecated = "This property will be deprecated in a future release."]
    #[objc2::method(sel = "setBordered:")]
    pub unsafe fn setBordered(&self, bordered: bool);

    #[objc2::method(sel = "takeColorFrom:")]
    pub unsafe fn takeColorFrom(&self, sender: Option<&Object>);

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "color", managed = "Other")]
    pub unsafe fn color(&self) -> Id<NSColor>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "setColor:")]
    pub unsafe fn setColor(&self, color: &NSColor);

    #[objc2::method(sel = "colorWellStyle")]
    pub unsafe fn colorWellStyle(&self) -> NSColorWellStyle;

    #[objc2::method(sel = "setColorWellStyle:")]
    pub unsafe fn setColorWellStyle(&self, color_well_style: NSColorWellStyle);

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "setImage:")]
    pub unsafe fn setImage(&self, image: Option<&NSImage>);

    #[objc2::method(sel = "pulldownTarget", managed = "Other")]
    pub unsafe fn pulldownTarget(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setPulldownTarget:")]
    pub unsafe fn setPulldownTarget(&self, pulldown_target: Option<&Object>);

    #[objc2::method(sel = "pulldownAction")]
    pub unsafe fn pulldownAction(&self) -> Option<Sel>;

    #[objc2::method(sel = "setPulldownAction:")]
    pub unsafe fn setPulldownAction(&self, pulldown_action: Option<Sel>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSColorWell")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSColorWell")]
    pub type NSColorWell;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
