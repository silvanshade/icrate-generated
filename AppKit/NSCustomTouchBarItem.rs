//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSTouchBarItem,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCustomTouchBarItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCustomTouchBarItem;
}

#[cfg(feature = "AppKit_NSCustomTouchBarItem")]
unsafe impl NSCoding for NSCustomTouchBarItem {}

#[cfg(feature = "AppKit_NSCustomTouchBarItem")]
unsafe impl NSObjectProtocol for NSCustomTouchBarItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCustomTouchBarItem")]
    pub type NSCustomTouchBarItem;

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "view", managed = "Other")]
    pub unsafe fn view(&self) -> Id<NSView>;

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "setView:")]
    pub unsafe fn setView(&self, view: &NSView);

    #[cfg(feature = "AppKit_NSViewController")]
    #[objc2::method(sel = "viewController", managed = "Other")]
    pub unsafe fn viewController(&self) -> Option<Id<NSViewController>>;

    #[cfg(feature = "AppKit_NSViewController")]
    #[objc2::method(sel = "setViewController:")]
    pub unsafe fn setViewController(&self, view_controller: Option<&NSViewController>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "customizationLabel", managed = "Other")]
    pub unsafe fn customizationLabel(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCustomizationLabel:")]
    pub unsafe fn setCustomizationLabel(&self, customization_label: Option<&NSString>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSCustomTouchBarItem")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCustomTouchBarItem")]
    pub type NSCustomTouchBarItem;

    #[objc2::method(sel = "initWithIdentifier:", managed = "Init")]
    pub unsafe fn initWithIdentifier(
        this: Option<Allocated<Self>>,
        identifier: &NSTouchBarItemIdentifier,
    ) -> Id<Self>;
}
