//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSPopUpArrowPosition {
    NSPopUpNoArrow = 0,
    NSPopUpArrowAtCenter = 1,
    NSPopUpArrowAtBottom = 2,
}

#[objc2::interface(
    unsafe super = NSMenuItemCell,
    unsafe inherits = [
        NSButtonCell,
        NSActionCell,
        NSCell,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPopUpButtonCell;
}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSAccessibility for NSPopUpButtonCell {}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSAccessibilityElementProtocol for NSPopUpButtonCell {}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSCoding for NSPopUpButtonCell {}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSMenuItemValidation for NSPopUpButtonCell {}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSObjectProtocol for NSPopUpButtonCell {}

#[cfg(feature = "AppKit_NSPopUpButtonCell")]
unsafe impl NSUserInterfaceItemIdentification for NSPopUpButtonCell {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    pub type NSPopUpButtonCell;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initTextCell:pullsDown:", managed = "Init")]
    pub unsafe fn initTextCell_pullsDown(
        this: Option<Allocated<Self>>,
        string_value: &NSString,
        pull_down: bool,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, coder: &NSCoder) -> Id<Self>;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "menu", managed = "Other")]
    pub unsafe fn menu(&self) -> Option<Id<NSMenu>>;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "setMenu:")]
    pub unsafe fn setMenu(&self, menu: Option<&NSMenu>);

    #[objc2::method(sel = "pullsDown")]
    pub unsafe fn pullsDown(&self) -> bool;

    #[objc2::method(sel = "setPullsDown:")]
    pub unsafe fn setPullsDown(&self, pulls_down: bool);

    #[objc2::method(sel = "autoenablesItems")]
    pub unsafe fn autoenablesItems(&self) -> bool;

    #[objc2::method(sel = "setAutoenablesItems:")]
    pub unsafe fn setAutoenablesItems(&self, autoenables_items: bool);

    #[objc2::method(sel = "preferredEdge")]
    pub unsafe fn preferredEdge(&self) -> NSRectEdge;

    #[objc2::method(sel = "setPreferredEdge:")]
    pub unsafe fn setPreferredEdge(&self, preferred_edge: NSRectEdge);

    #[objc2::method(sel = "usesItemFromMenu")]
    pub unsafe fn usesItemFromMenu(&self) -> bool;

    #[objc2::method(sel = "setUsesItemFromMenu:")]
    pub unsafe fn setUsesItemFromMenu(&self, uses_item_from_menu: bool);

    #[objc2::method(sel = "altersStateOfSelectedItem")]
    pub unsafe fn altersStateOfSelectedItem(&self) -> bool;

    #[objc2::method(sel = "setAltersStateOfSelectedItem:")]
    pub unsafe fn setAltersStateOfSelectedItem(&self, alters_state_of_selected_item: bool);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "addItemWithTitle:")]
    pub unsafe fn addItemWithTitle(&self, title: &NSString);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "addItemsWithTitles:")]
    pub unsafe fn addItemsWithTitles(&self, item_titles: &NSArray<NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "insertItemWithTitle:atIndex:")]
    pub unsafe fn insertItemWithTitle_atIndex(&self, title: &NSString, index: NSInteger);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "removeItemWithTitle:")]
    pub unsafe fn removeItemWithTitle(&self, title: &NSString);

    #[objc2::method(sel = "removeItemAtIndex:")]
    pub unsafe fn removeItemAtIndex(&self, index: NSInteger);

    #[objc2::method(sel = "removeAllItems")]
    pub unsafe fn removeAllItems(&self);

    #[cfg(all(feature = "AppKit_NSMenuItem", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "itemArray", managed = "Other")]
    pub unsafe fn itemArray(&self) -> Id<NSArray<NSMenuItem>>;

    #[objc2::method(sel = "numberOfItems")]
    pub unsafe fn numberOfItems(&self) -> NSInteger;

    #[cfg(feature = "AppKit_NSMenuItem")]
    #[objc2::method(sel = "indexOfItem:")]
    pub unsafe fn indexOfItem(&self, item: &NSMenuItem) -> NSInteger;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "indexOfItemWithTitle:")]
    pub unsafe fn indexOfItemWithTitle(&self, title: &NSString) -> NSInteger;

    #[objc2::method(sel = "indexOfItemWithTag:")]
    pub unsafe fn indexOfItemWithTag(&self, tag: NSInteger) -> NSInteger;

    #[objc2::method(sel = "indexOfItemWithRepresentedObject:")]
    pub unsafe fn indexOfItemWithRepresentedObject(&self, obj: Option<&Object>) -> NSInteger;

    #[objc2::method(sel = "indexOfItemWithTarget:andAction:")]
    pub unsafe fn indexOfItemWithTarget_andAction(
        &self,
        target: Option<&Object>,
        action_selector: Option<Sel>,
    ) -> NSInteger;

    #[cfg(feature = "AppKit_NSMenuItem")]
    #[objc2::method(sel = "itemAtIndex:", managed = "Other")]
    pub unsafe fn itemAtIndex(&self, index: NSInteger) -> Option<Id<NSMenuItem>>;

    #[cfg(all(feature = "AppKit_NSMenuItem", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "itemWithTitle:", managed = "Other")]
    pub unsafe fn itemWithTitle(&self, title: &NSString) -> Option<Id<NSMenuItem>>;

    #[cfg(feature = "AppKit_NSMenuItem")]
    #[objc2::method(sel = "lastItem", managed = "Other")]
    pub unsafe fn lastItem(&self) -> Option<Id<NSMenuItem>>;

    #[cfg(feature = "AppKit_NSMenuItem")]
    #[objc2::method(sel = "selectItem:")]
    pub unsafe fn selectItem(&self, item: Option<&NSMenuItem>);

    #[objc2::method(sel = "selectItemAtIndex:")]
    pub unsafe fn selectItemAtIndex(&self, index: NSInteger);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "selectItemWithTitle:")]
    pub unsafe fn selectItemWithTitle(&self, title: &NSString);

    #[objc2::method(sel = "selectItemWithTag:")]
    pub unsafe fn selectItemWithTag(&self, tag: NSInteger) -> bool;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, string: Option<&NSString>);

    #[cfg(feature = "AppKit_NSMenuItem")]
    #[objc2::method(sel = "selectedItem", managed = "Other")]
    pub unsafe fn selectedItem(&self) -> Option<Id<NSMenuItem>>;

    #[objc2::method(sel = "indexOfSelectedItem")]
    pub unsafe fn indexOfSelectedItem(&self) -> NSInteger;

    #[objc2::method(sel = "synchronizeTitleAndSelectedItem")]
    pub unsafe fn synchronizeTitleAndSelectedItem(&self);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "itemTitleAtIndex:", managed = "Other")]
    pub unsafe fn itemTitleAtIndex(&self, index: NSInteger) -> Id<NSString>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "itemTitles", managed = "Other")]
    pub unsafe fn itemTitles(&self) -> Id<NSArray<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "titleOfSelectedItem", managed = "Other")]
    pub unsafe fn titleOfSelectedItem(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "attachPopUpWithFrame:inView:")]
    pub unsafe fn attachPopUpWithFrame_inView(&self, cell_frame: NSRect, control_view: &NSView);

    #[objc2::method(sel = "dismissPopUp")]
    pub unsafe fn dismissPopUp(&self);

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "performClickWithFrame:inView:")]
    pub unsafe fn performClickWithFrame_inView(&self, frame: NSRect, control_view: &NSView);

    #[objc2::method(sel = "arrowPosition")]
    pub unsafe fn arrowPosition(&self) -> NSPopUpArrowPosition;

    #[objc2::method(sel = "setArrowPosition:")]
    pub unsafe fn setArrowPosition(&self, arrow_position: NSPopUpArrowPosition);
}

extern_static!(NSPopUpButtonCellWillPopUpNotification: &'static NSNotificationName);

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSMenuItemCell`
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    pub type NSPopUpButtonCell;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initTextCell:", managed = "Init")]
    pub unsafe fn initTextCell(this: Option<Allocated<Self>>, string: &NSString) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSButtonCell`
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPopUpButtonCell")]
    pub type NSPopUpButtonCell;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "initImageCell:", managed = "Init")]
    pub unsafe fn initImageCell(this: Option<Allocated<Self>>, image: Option<&NSImage>)
        -> Id<Self>;
}
