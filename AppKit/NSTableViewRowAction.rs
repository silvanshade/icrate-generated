//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSTableViewRowActionStyle {
    NSTableViewRowActionStyleRegular = 0,
    NSTableViewRowActionStyleDestructive = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTableViewRowAction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSTableViewRowAction;
}

#[cfg(feature = "AppKit_NSTableViewRowAction")]
unsafe impl NSObjectProtocol for NSTableViewRowAction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTableViewRowAction")]
    pub type NSTableViewRowAction;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "rowActionWithStyle:title:handler:", managed = "Other")]
    pub unsafe fn rowActionWithStyle_title_handler(
        style: NSTableViewRowActionStyle,
        title: &NSString,
        handler: &Block<(NonNull<NSTableViewRowAction>, NSInteger), ()>,
    ) -> Id<Self>;

    #[objc2::method(sel = "style")]
    pub unsafe fn style(&self) -> NSTableViewRowActionStyle;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: &NSString);

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "backgroundColor", managed = "Other")]
    pub unsafe fn backgroundColor(&self) -> Id<NSColor>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "setBackgroundColor:")]
    pub unsafe fn setBackgroundColor(&self, background_color: Option<&NSColor>);

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "setImage:")]
    pub unsafe fn setImage(&self, image: Option<&NSImage>);
}
