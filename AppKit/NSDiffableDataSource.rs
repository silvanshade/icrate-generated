//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSDiffableDataSourceSnapshot")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSDiffableDataSourceSnapshot<
        SectionIdentifierType: Message = Object,
        ItemIdentifierType: Message = Object,
        SectionIdentifierTypeOwnership: Ownership = Shared,
        ItemIdentifierTypeOwnership: Ownership = Shared,
    >;
}

#[cfg(feature = "AppKit_NSDiffableDataSourceSnapshot")]
unsafe impl<
        SectionIdentifierType: Message,
        ItemIdentifierType: Message,
        SectionIdentifierTypeOwnership: Ownership,
        ItemIdentifierTypeOwnership: Ownership,
    > NSObjectProtocol
    for NSDiffableDataSourceSnapshot<
        SectionIdentifierType,
        ItemIdentifierType,
        SectionIdentifierTypeOwnership,
        ItemIdentifierTypeOwnership,
    >
{
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSDiffableDataSourceSnapshot")]
    pub type NSDiffableDataSourceSnapshot<
        SectionIdentifierType: Message = Object,
        ItemIdentifierType: Message = Object,
        SectionIdentifierTypeOwnership: Ownership = Shared,
        ItemIdentifierTypeOwnership: Ownership = Shared,
    >;

    #[objc2::method(sel = "numberOfItems")]
    pub unsafe fn numberOfItems(&self) -> NSInteger;

    #[objc2::method(sel = "numberOfSections")]
    pub unsafe fn numberOfSections(&self) -> NSInteger;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "sectionIdentifiers", managed = "Other")]
    pub unsafe fn sectionIdentifiers(&self) -> Id<NSArray<SectionIdentifierType>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "itemIdentifiers", managed = "Other")]
    pub unsafe fn itemIdentifiers(&self) -> Id<NSArray<ItemIdentifierType>>;

    #[objc2::method(sel = "numberOfItemsInSection:")]
    pub unsafe fn numberOfItemsInSection(
        &self,
        section_identifier: &SectionIdentifierType,
    ) -> NSInteger;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "itemIdentifiersInSectionWithIdentifier:", managed = "Other")]
    pub unsafe fn itemIdentifiersInSectionWithIdentifier(
        &self,
        section_identifier: &SectionIdentifierType,
    ) -> Id<NSArray<ItemIdentifierType>>;

    #[objc2::method(
        sel = "sectionIdentifierForSectionContainingItemIdentifier:",
        managed = "Other"
    )]
    pub unsafe fn sectionIdentifierForSectionContainingItemIdentifier(
        &self,
        item_identifier: &ItemIdentifierType,
    ) -> Option<Id<SectionIdentifierType, SectionIdentifierTypeOwnership>>;

    #[objc2::method(sel = "indexOfItemIdentifier:")]
    pub unsafe fn indexOfItemIdentifier(&self, item_identifier: &ItemIdentifierType) -> NSInteger;

    #[objc2::method(sel = "indexOfSectionIdentifier:")]
    pub unsafe fn indexOfSectionIdentifier(
        &self,
        section_identifier: &SectionIdentifierType,
    ) -> NSInteger;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "appendItemsWithIdentifiers:")]
    pub unsafe fn appendItemsWithIdentifiers(&self, identifiers: &NSArray<ItemIdentifierType>);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "appendItemsWithIdentifiers:intoSectionWithIdentifier:")]
    pub unsafe fn appendItemsWithIdentifiers_intoSectionWithIdentifier(
        &self,
        identifiers: &NSArray<ItemIdentifierType>,
        section_identifier: &SectionIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "insertItemsWithIdentifiers:beforeItemWithIdentifier:")]
    pub unsafe fn insertItemsWithIdentifiers_beforeItemWithIdentifier(
        &self,
        identifiers: &NSArray<ItemIdentifierType>,
        item_identifier: &ItemIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "insertItemsWithIdentifiers:afterItemWithIdentifier:")]
    pub unsafe fn insertItemsWithIdentifiers_afterItemWithIdentifier(
        &self,
        identifiers: &NSArray<ItemIdentifierType>,
        item_identifier: &ItemIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "deleteItemsWithIdentifiers:")]
    pub unsafe fn deleteItemsWithIdentifiers(&self, identifiers: &NSArray<ItemIdentifierType>);

    #[objc2::method(sel = "deleteAllItems")]
    pub unsafe fn deleteAllItems(&self);

    #[objc2::method(sel = "moveItemWithIdentifier:beforeItemWithIdentifier:")]
    pub unsafe fn moveItemWithIdentifier_beforeItemWithIdentifier(
        &self,
        from_identifier: &ItemIdentifierType,
        to_identifier: &ItemIdentifierType,
    );

    #[objc2::method(sel = "moveItemWithIdentifier:afterItemWithIdentifier:")]
    pub unsafe fn moveItemWithIdentifier_afterItemWithIdentifier(
        &self,
        from_identifier: &ItemIdentifierType,
        to_identifier: &ItemIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "reloadItemsWithIdentifiers:")]
    pub unsafe fn reloadItemsWithIdentifiers(&self, identifiers: &NSArray<ItemIdentifierType>);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "appendSectionsWithIdentifiers:")]
    pub unsafe fn appendSectionsWithIdentifiers(
        &self,
        section_identifiers: &NSArray<SectionIdentifierType>,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "insertSectionsWithIdentifiers:beforeSectionWithIdentifier:")]
    pub unsafe fn insertSectionsWithIdentifiers_beforeSectionWithIdentifier(
        &self,
        section_identifiers: &NSArray<SectionIdentifierType>,
        to_section_identifier: &SectionIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "insertSectionsWithIdentifiers:afterSectionWithIdentifier:")]
    pub unsafe fn insertSectionsWithIdentifiers_afterSectionWithIdentifier(
        &self,
        section_identifiers: &NSArray<SectionIdentifierType>,
        to_section_identifier: &SectionIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "deleteSectionsWithIdentifiers:")]
    pub unsafe fn deleteSectionsWithIdentifiers(
        &self,
        section_identifiers: &NSArray<SectionIdentifierType>,
    );

    #[objc2::method(sel = "moveSectionWithIdentifier:beforeSectionWithIdentifier:")]
    pub unsafe fn moveSectionWithIdentifier_beforeSectionWithIdentifier(
        &self,
        from_section_identifier: &SectionIdentifierType,
        to_section_identifier: &SectionIdentifierType,
    );

    #[objc2::method(sel = "moveSectionWithIdentifier:afterSectionWithIdentifier:")]
    pub unsafe fn moveSectionWithIdentifier_afterSectionWithIdentifier(
        &self,
        from_section_identifier: &SectionIdentifierType,
        to_section_identifier: &SectionIdentifierType,
    );

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "reloadSectionsWithIdentifiers:")]
    pub unsafe fn reloadSectionsWithIdentifiers(
        &self,
        section_identifiers: &NSArray<SectionIdentifierType>,
    );
}

pub type NSCollectionViewDiffableDataSourceSupplementaryViewProvider = *mut Block<
    (
        NonNull<NSCollectionView>,
        NonNull<NSString>,
        NonNull<NSIndexPath>,
    ),
    *mut NSView,
>;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCollectionViewDiffableDataSource")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCollectionViewDiffableDataSource<
        SectionIdentifierType: Message = Object,
        ItemIdentifierType: Message = Object,
        SectionIdentifierTypeOwnership: Ownership = Shared,
        ItemIdentifierTypeOwnership: Ownership = Shared,
    >;
}

#[cfg(feature = "AppKit_NSCollectionViewDiffableDataSource")]
unsafe impl<
        SectionIdentifierType: Message,
        ItemIdentifierType: Message,
        SectionIdentifierTypeOwnership: Ownership,
        ItemIdentifierTypeOwnership: Ownership,
    > NSCollectionViewDataSource
    for NSCollectionViewDiffableDataSource<
        SectionIdentifierType,
        ItemIdentifierType,
        SectionIdentifierTypeOwnership,
        ItemIdentifierTypeOwnership,
    >
{
}

#[cfg(feature = "AppKit_NSCollectionViewDiffableDataSource")]
unsafe impl<
        SectionIdentifierType: Message,
        ItemIdentifierType: Message,
        SectionIdentifierTypeOwnership: Ownership,
        ItemIdentifierTypeOwnership: Ownership,
    > NSObjectProtocol
    for NSCollectionViewDiffableDataSource<
        SectionIdentifierType,
        ItemIdentifierType,
        SectionIdentifierTypeOwnership,
        ItemIdentifierTypeOwnership,
    >
{
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCollectionViewDiffableDataSource")]
    pub type NSCollectionViewDiffableDataSource<
        SectionIdentifierType: Message = Object,
        ItemIdentifierType: Message = Object,
        SectionIdentifierTypeOwnership: Ownership = Shared,
        ItemIdentifierTypeOwnership: Ownership = Shared,
    >;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "AppKit_NSDiffableDataSourceSnapshot")]
    #[objc2::method(sel = "snapshot", managed = "Other")]
    pub unsafe fn snapshot(
        &self,
    ) -> Id<NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>>;

    #[cfg(feature = "AppKit_NSDiffableDataSourceSnapshot")]
    #[objc2::method(sel = "applySnapshot:animatingDifferences:")]
    pub unsafe fn applySnapshot_animatingDifferences(
        &self,
        snapshot: &NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>,
        animating_differences: bool,
    );

    #[cfg(feature = "Foundation_NSIndexPath")]
    #[objc2::method(sel = "itemIdentifierForIndexPath:", managed = "Other")]
    pub unsafe fn itemIdentifierForIndexPath(
        &self,
        index_path: &NSIndexPath,
    ) -> Option<Id<ItemIdentifierType, ItemIdentifierTypeOwnership>>;

    #[cfg(feature = "Foundation_NSIndexPath")]
    #[objc2::method(sel = "indexPathForItemIdentifier:", managed = "Other")]
    pub unsafe fn indexPathForItemIdentifier(
        &self,
        identifier: &ItemIdentifierType,
    ) -> Option<Id<NSIndexPath>>;

    #[objc2::method(sel = "supplementaryViewProvider")]
    pub unsafe fn supplementaryViewProvider(
        &self,
    ) -> NSCollectionViewDiffableDataSourceSupplementaryViewProvider;

    #[objc2::method(sel = "setSupplementaryViewProvider:")]
    pub unsafe fn setSupplementaryViewProvider(
        &self,
        supplementary_view_provider: NSCollectionViewDiffableDataSourceSupplementaryViewProvider,
    );
}
