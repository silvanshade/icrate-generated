//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPageLayout")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPageLayout;
}

#[cfg(feature = "AppKit_NSPageLayout")]
unsafe impl NSObjectProtocol for NSPageLayout {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPageLayout")]
    pub type NSPageLayout;

    #[objc2::method(sel = "pageLayout", managed = "Other")]
    pub unsafe fn pageLayout() -> Id<NSPageLayout>;

    #[cfg(feature = "AppKit_NSViewController")]
    #[objc2::method(sel = "addAccessoryController:")]
    pub unsafe fn addAccessoryController(&self, accessory_controller: &NSViewController);

    #[cfg(feature = "AppKit_NSViewController")]
    #[objc2::method(sel = "removeAccessoryController:")]
    pub unsafe fn removeAccessoryController(&self, accessory_controller: &NSViewController);

    #[cfg(all(feature = "AppKit_NSViewController", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "accessoryControllers", managed = "Other")]
    pub unsafe fn accessoryControllers(&self) -> Id<NSArray<NSViewController>>;

    #[cfg(all(feature = "AppKit_NSPrintInfo", feature = "AppKit_NSWindow"))]
    #[objc2::method(
        sel = "beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:"
    )]
    pub unsafe fn beginSheetWithPrintInfo_modalForWindow_delegate_didEndSelector_contextInfo(
        &self,
        print_info: &NSPrintInfo,
        doc_window: &NSWindow,
        delegate: Option<&Object>,
        did_end_selector: Option<Sel>,
        context_info: *mut c_void,
    );

    #[cfg(feature = "AppKit_NSPrintInfo")]
    #[objc2::method(sel = "runModalWithPrintInfo:")]
    pub unsafe fn runModalWithPrintInfo(&self, print_info: &NSPrintInfo) -> NSInteger;

    #[objc2::method(sel = "runModal")]
    pub unsafe fn runModal(&self) -> NSInteger;

    #[cfg(feature = "AppKit_NSPrintInfo")]
    #[objc2::method(sel = "printInfo", managed = "Other")]
    pub unsafe fn printInfo(&self) -> Option<Id<NSPrintInfo>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPageLayout")]
    pub type NSPageLayout;

    #[cfg(feature = "AppKit_NSView")]
    #[deprecated]
    #[objc2::method(sel = "setAccessoryView:")]
    pub unsafe fn setAccessoryView(&self, accessory_view: Option<&NSView>);

    #[cfg(feature = "AppKit_NSView")]
    #[deprecated]
    #[objc2::method(sel = "accessoryView", managed = "Other")]
    pub unsafe fn accessoryView(&self) -> Option<Id<NSView>>;

    #[deprecated]
    #[objc2::method(sel = "readPrintInfo")]
    pub unsafe fn readPrintInfo(&self);

    #[deprecated]
    #[objc2::method(sel = "writePrintInfo")]
    pub unsafe fn writePrintInfo(&self);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSApplication")]
    pub type NSApplication;

    #[objc2::method(sel = "runPageLayout:")]
    pub unsafe fn runPageLayout(&self, sender: Option<&Object>);
}
