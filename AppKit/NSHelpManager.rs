//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSHelpBookName = NSString;

pub type NSHelpAnchorName = NSString;

pub type NSHelpManagerContextHelpKey = NSString;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSHelpManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSHelpManager;
}

#[cfg(feature = "AppKit_NSHelpManager")]
unsafe impl NSObjectProtocol for NSHelpManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSHelpManager")]
    pub type NSHelpManager;

    #[objc2::method(sel = "sharedHelpManager", managed = "Other")]
    pub unsafe fn sharedHelpManager() -> Id<NSHelpManager>;

    #[objc2::method(sel = "isContextHelpModeActive")]
    pub unsafe fn isContextHelpModeActive() -> bool;

    #[objc2::method(sel = "setContextHelpModeActive:")]
    pub unsafe fn setContextHelpModeActive(context_help_mode_active: bool);

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "setContextHelp:forObject:")]
    pub unsafe fn setContextHelp_forObject(
        &self,
        attr_string: &NSAttributedString,
        object: &Object,
    );

    #[objc2::method(sel = "removeContextHelpForObject:")]
    pub unsafe fn removeContextHelpForObject(&self, object: &Object);

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "contextHelpForObject:", managed = "Other")]
    pub unsafe fn contextHelpForObject(&self, object: &Object) -> Option<Id<NSAttributedString>>;

    #[objc2::method(sel = "showContextHelpForObject:locationHint:")]
    pub unsafe fn showContextHelpForObject_locationHint(
        &self,
        object: &Object,
        pt: NSPoint,
    ) -> bool;

    #[objc2::method(sel = "openHelpAnchor:inBook:")]
    pub unsafe fn openHelpAnchor_inBook(
        &self,
        anchor: &NSHelpAnchorName,
        book: Option<&NSHelpBookName>,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "findString:inBook:")]
    pub unsafe fn findString_inBook(&self, query: &NSString, book: Option<&NSHelpBookName>);

    #[cfg(feature = "Foundation_NSBundle")]
    #[objc2::method(sel = "registerBooksInBundle:")]
    pub unsafe fn registerBooksInBundle(&self, bundle: &NSBundle) -> bool;
}

extern_static!(NSContextHelpModeDidActivateNotification: &'static NSNotificationName);

extern_static!(NSContextHelpModeDidDeactivateNotification: &'static NSNotificationName);

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Foundation_NSBundle")]
    pub type NSBundle;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "contextHelpForKey:", managed = "Other")]
    pub unsafe fn contextHelpForKey(
        &self,
        key: &NSHelpManagerContextHelpKey,
    ) -> Option<Id<NSAttributedString>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSApplication")]
    pub type NSApplication;

    #[objc2::method(sel = "activateContextHelpMode:")]
    pub unsafe fn activateContextHelpMode(&self, sender: Option<&Object>);

    #[objc2::method(sel = "showHelp:")]
    pub unsafe fn showHelp(&self, sender: Option<&Object>);
}
