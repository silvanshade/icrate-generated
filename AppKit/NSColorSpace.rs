//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSColorSpaceModel {
    NSColorSpaceModelUnknown = -1,
    NSColorSpaceModelGray = 0,
    NSColorSpaceModelRGB = 1,
    NSColorSpaceModelCMYK = 2,
    NSColorSpaceModelLAB = 3,
    NSColorSpaceModelDeviceN = 4,
    NSColorSpaceModelIndexed = 5,
    NSColorSpaceModelPatterned = 6,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSColorSpace")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSColorSpace;
}

#[cfg(feature = "AppKit_NSColorSpace")]
unsafe impl NSCoding for NSColorSpace {}

#[cfg(feature = "AppKit_NSColorSpace")]
unsafe impl NSObjectProtocol for NSColorSpace {}

#[cfg(feature = "AppKit_NSColorSpace")]
unsafe impl NSSecureCoding for NSColorSpace {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSColorSpace")]
    pub type NSColorSpace;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "initWithICCProfileData:", managed = "Init")]
    pub unsafe fn initWithICCProfileData(
        this: Option<Allocated<Self>>,
        icc_data: &NSData,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "ICCProfileData", managed = "Other")]
    pub unsafe fn ICCProfileData(&self) -> Option<Id<NSData>>;

    #[objc2::method(sel = "initWithColorSyncProfile:", managed = "Init")]
    pub unsafe fn initWithColorSyncProfile(
        this: Option<Allocated<Self>>,
        prof: NonNull<c_void>,
    ) -> Option<Id<Self>>;

    #[objc2::method(sel = "colorSyncProfile")]
    pub unsafe fn colorSyncProfile(&self) -> *mut c_void;

    #[objc2::method(sel = "numberOfColorComponents")]
    pub unsafe fn numberOfColorComponents(&self) -> NSInteger;

    #[objc2::method(sel = "colorSpaceModel")]
    pub unsafe fn colorSpaceModel(&self) -> NSColorSpaceModel;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "localizedName", managed = "Other")]
    pub unsafe fn localizedName(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "sRGBColorSpace", managed = "Other")]
    pub unsafe fn sRGBColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "genericGamma22GrayColorSpace", managed = "Other")]
    pub unsafe fn genericGamma22GrayColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "extendedSRGBColorSpace", managed = "Other")]
    pub unsafe fn extendedSRGBColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "extendedGenericGamma22GrayColorSpace", managed = "Other")]
    pub unsafe fn extendedGenericGamma22GrayColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "displayP3ColorSpace", managed = "Other")]
    pub unsafe fn displayP3ColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "adobeRGB1998ColorSpace", managed = "Other")]
    pub unsafe fn adobeRGB1998ColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "genericRGBColorSpace", managed = "Other")]
    pub unsafe fn genericRGBColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "genericGrayColorSpace", managed = "Other")]
    pub unsafe fn genericGrayColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "genericCMYKColorSpace", managed = "Other")]
    pub unsafe fn genericCMYKColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "deviceRGBColorSpace", managed = "Other")]
    pub unsafe fn deviceRGBColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "deviceGrayColorSpace", managed = "Other")]
    pub unsafe fn deviceGrayColorSpace() -> Id<NSColorSpace>;

    #[objc2::method(sel = "deviceCMYKColorSpace", managed = "Other")]
    pub unsafe fn deviceCMYKColorSpace() -> Id<NSColorSpace>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "availableColorSpacesWithModel:", managed = "Other")]
    pub unsafe fn availableColorSpacesWithModel(
        model: NSColorSpaceModel,
    ) -> Id<NSArray<NSColorSpace>>;
}

extern_static!(NSUnknownColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelUnknown);

extern_static!(NSGrayColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelGray);

extern_static!(NSRGBColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelRGB);

extern_static!(NSCMYKColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelCMYK);

extern_static!(NSLABColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelLAB);

extern_static!(NSDeviceNColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelDeviceN);

extern_static!(NSIndexedColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelIndexed);

extern_static!(NSPatternColorSpaceModel: NSColorSpaceModel = NSColorSpaceModelPatterned);
