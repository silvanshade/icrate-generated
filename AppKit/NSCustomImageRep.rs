//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSImageRep,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCustomImageRep")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSCustomImageRep;
}

#[cfg(feature = "AppKit_NSCustomImageRep")]
unsafe impl NSCoding for NSCustomImageRep {}

#[cfg(feature = "AppKit_NSCustomImageRep")]
unsafe impl NSObjectProtocol for NSCustomImageRep {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSCustomImageRep")]
    pub type NSCustomImageRep;

    #[objc2::method(sel = "initWithSize:flipped:drawingHandler:", managed = "Init")]
    pub unsafe fn initWithSize_flipped_drawingHandler(
        this: Option<Allocated<Self>>,
        size: NSSize,
        drawing_handler_should_be_called_with_flipped_context: bool,
        drawing_handler: &Block<(NSRect,), Bool>,
    ) -> Id<Self>;

    #[objc2::method(sel = "drawingHandler")]
    pub unsafe fn drawingHandler(&self) -> *mut Block<(NSRect,), Bool>;

    #[objc2::method(sel = "initWithDrawSelector:delegate:", managed = "Init")]
    pub unsafe fn initWithDrawSelector_delegate(
        this: Option<Allocated<Self>>,
        selector: Sel,
        delegate: &Object,
    ) -> Id<Self>;

    #[objc2::method(sel = "drawSelector")]
    pub unsafe fn drawSelector(&self) -> Option<Sel>;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(&self) -> Option<Id<Object>>;
}
