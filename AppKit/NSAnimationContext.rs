//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAnimationContext")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAnimationContext;
}

#[cfg(feature = "AppKit_NSAnimationContext")]
unsafe impl NSObjectProtocol for NSAnimationContext {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSAnimationContext")]
    pub type NSAnimationContext;

    #[objc2::method(sel = "runAnimationGroup:completionHandler:")]
    pub unsafe fn runAnimationGroup_completionHandler(
        changes: &Block<(NonNull<NSAnimationContext>,), ()>,
        completion_handler: Option<&Block<(), ()>>,
    );

    #[objc2::method(sel = "runAnimationGroup:")]
    pub unsafe fn runAnimationGroup(changes: &Block<(NonNull<NSAnimationContext>,), ()>);

    #[objc2::method(sel = "beginGrouping")]
    pub unsafe fn beginGrouping();

    #[objc2::method(sel = "endGrouping")]
    pub unsafe fn endGrouping();

    #[objc2::method(sel = "currentContext", managed = "Other")]
    pub unsafe fn currentContext() -> Id<NSAnimationContext>;

    #[objc2::method(sel = "duration")]
    pub unsafe fn duration(&self) -> NSTimeInterval;

    #[objc2::method(sel = "setDuration:")]
    pub unsafe fn setDuration(&self, duration: NSTimeInterval);

    #[objc2::method(sel = "completionHandler")]
    pub unsafe fn completionHandler(&self) -> *mut Block<(), ()>;

    #[objc2::method(sel = "setCompletionHandler:")]
    pub unsafe fn setCompletionHandler(&self, completion_handler: Option<&Block<(), ()>>);

    #[objc2::method(sel = "allowsImplicitAnimation")]
    pub unsafe fn allowsImplicitAnimation(&self) -> bool;

    #[objc2::method(sel = "setAllowsImplicitAnimation:")]
    pub unsafe fn setAllowsImplicitAnimation(&self, allows_implicit_animation: bool);
}
