//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSGestureRecognizer,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPanGestureRecognizer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPanGestureRecognizer;
}

#[cfg(feature = "AppKit_NSPanGestureRecognizer")]
unsafe impl NSCoding for NSPanGestureRecognizer {}

#[cfg(feature = "AppKit_NSPanGestureRecognizer")]
unsafe impl NSObjectProtocol for NSPanGestureRecognizer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPanGestureRecognizer")]
    pub type NSPanGestureRecognizer;

    #[objc2::method(sel = "buttonMask")]
    pub unsafe fn buttonMask(&self) -> NSUInteger;

    #[objc2::method(sel = "setButtonMask:")]
    pub unsafe fn setButtonMask(&self, button_mask: NSUInteger);

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "translationInView:")]
    pub unsafe fn translationInView(&self, view: Option<&NSView>) -> NSPoint;

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "setTranslation:inView:")]
    pub unsafe fn setTranslation_inView(&self, translation: NSPoint, view: Option<&NSView>);

    #[cfg(feature = "AppKit_NSView")]
    #[objc2::method(sel = "velocityInView:")]
    pub unsafe fn velocityInView(&self, view: Option<&NSView>) -> NSPoint;

    #[objc2::method(sel = "numberOfTouchesRequired")]
    pub unsafe fn numberOfTouchesRequired(&self) -> NSInteger;

    #[objc2::method(sel = "setNumberOfTouchesRequired:")]
    pub unsafe fn setNumberOfTouchesRequired(&self, number_of_touches_required: NSInteger);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSGestureRecognizer`
    #[cfg(feature = "AppKit_NSPanGestureRecognizer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSPanGestureRecognizer")]
    pub type NSPanGestureRecognizer;

    #[objc2::method(sel = "initWithTarget:action:", managed = "Init")]
    pub unsafe fn initWithTarget_action(
        this: Option<Allocated<Self>>,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;
}
