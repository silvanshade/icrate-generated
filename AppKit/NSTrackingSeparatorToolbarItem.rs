//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSToolbarItem,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTrackingSeparatorToolbarItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSTrackingSeparatorToolbarItem;
}

#[cfg(feature = "AppKit_NSTrackingSeparatorToolbarItem")]
unsafe impl NSObjectProtocol for NSTrackingSeparatorToolbarItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTrackingSeparatorToolbarItem")]
    pub type NSTrackingSeparatorToolbarItem;

    #[cfg(feature = "AppKit_NSSplitView")]
    #[objc2::method(
        sel = "trackingSeparatorToolbarItemWithIdentifier:splitView:dividerIndex:",
        managed = "Other"
    )]
    pub unsafe fn trackingSeparatorToolbarItemWithIdentifier_splitView_dividerIndex(
        identifier: &NSToolbarItemIdentifier,
        split_view: &NSSplitView,
        divider_index: NSInteger,
    ) -> Id<Self>;

    #[cfg(feature = "AppKit_NSSplitView")]
    #[objc2::method(sel = "splitView", managed = "Other")]
    pub unsafe fn splitView(&self) -> Id<NSSplitView>;

    #[cfg(feature = "AppKit_NSSplitView")]
    #[objc2::method(sel = "setSplitView:")]
    pub unsafe fn setSplitView(&self, split_view: &NSSplitView);

    #[objc2::method(sel = "dividerIndex")]
    pub unsafe fn dividerIndex(&self) -> NSInteger;

    #[objc2::method(sel = "setDividerIndex:")]
    pub unsafe fn setDividerIndex(&self, divider_index: NSInteger);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSToolbarItem`
    #[cfg(feature = "AppKit_NSTrackingSeparatorToolbarItem")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTrackingSeparatorToolbarItem")]
    pub type NSTrackingSeparatorToolbarItem;

    #[objc2::method(sel = "initWithItemIdentifier:", managed = "Init")]
    pub unsafe fn initWithItemIdentifier(
        this: Option<Allocated<Self>>,
        item_identifier: &NSToolbarItemIdentifier,
    ) -> Id<Self>;
}
