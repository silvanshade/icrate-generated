//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSController;
}

#[cfg(feature = "AppKit_NSController")]
unsafe impl NSCoding for NSController {}

#[cfg(feature = "AppKit_NSController")]
unsafe impl NSEditor for NSController {}

#[cfg(feature = "AppKit_NSController")]
unsafe impl NSEditorRegistration for NSController {}

#[cfg(feature = "AppKit_NSController")]
unsafe impl NSObjectProtocol for NSController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSController")]
    pub type NSController;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, coder: &NSCoder)
        -> Option<Id<Self>>;

    #[objc2::method(sel = "objectDidBeginEditing:")]
    pub unsafe fn objectDidBeginEditing(&self, editor: &ProtocolObject<dyn NSEditor>);

    #[objc2::method(sel = "objectDidEndEditing:")]
    pub unsafe fn objectDidEndEditing(&self, editor: &ProtocolObject<dyn NSEditor>);

    #[objc2::method(sel = "discardEditing")]
    pub unsafe fn discardEditing(&self);

    #[objc2::method(sel = "commitEditing")]
    pub unsafe fn commitEditing(&self) -> bool;

    #[objc2::method(sel = "commitEditingWithDelegate:didCommitSelector:contextInfo:")]
    pub unsafe fn commitEditingWithDelegate_didCommitSelector_contextInfo(
        &self,
        delegate: Option<&Object>,
        did_commit_selector: Option<Sel>,
        context_info: *mut c_void,
    );

    #[objc2::method(sel = "isEditing")]
    pub unsafe fn isEditing(&self) -> bool;
}
