//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

pub type NSStatusItemAutosaveName = NSString;

#[ns_options]
#[underlying(NSUInteger)]
pub enum NSStatusItemBehavior {
    NSStatusItemBehaviorRemovalAllowed = 1 << 1,
    NSStatusItemBehaviorTerminationOnRemoval = 1 << 2,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSStatusItem;
}

#[cfg(feature = "AppKit_NSStatusItem")]
unsafe impl NSObjectProtocol for NSStatusItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusItem")]
    pub type NSStatusItem;

    #[cfg(feature = "AppKit_NSStatusBar")]
    #[objc2::method(sel = "statusBar", managed = "Other")]
    pub unsafe fn statusBar(&self) -> Option<Id<NSStatusBar>>;

    #[objc2::method(sel = "length")]
    pub unsafe fn length(&self) -> CGFloat;

    #[objc2::method(sel = "setLength:")]
    pub unsafe fn setLength(&self, length: CGFloat);

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "menu", managed = "Other")]
    pub unsafe fn menu(&self) -> Option<Id<NSMenu>>;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "setMenu:")]
    pub unsafe fn setMenu(&self, menu: Option<&NSMenu>);

    #[cfg(feature = "AppKit_NSStatusBarButton")]
    #[objc2::method(sel = "button", managed = "Other")]
    pub unsafe fn button(&self) -> Option<Id<NSStatusBarButton>>;

    #[objc2::method(sel = "behavior")]
    pub unsafe fn behavior(&self) -> NSStatusItemBehavior;

    #[objc2::method(sel = "setBehavior:")]
    pub unsafe fn setBehavior(&self, behavior: NSStatusItemBehavior);

    #[objc2::method(sel = "isVisible")]
    pub unsafe fn isVisible(&self) -> bool;

    #[objc2::method(sel = "setVisible:")]
    pub unsafe fn setVisible(&self, visible: bool);

    #[objc2::method(sel = "autosaveName", managed = "Other")]
    pub unsafe fn autosaveName(&self) -> Id<NSStatusItemAutosaveName>;

    #[objc2::method(sel = "setAutosaveName:")]
    pub unsafe fn setAutosaveName(&self, autosave_name: Option<&NSStatusItemAutosaveName>);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStatusItem")]
    pub type NSStatusItem;

    #[deprecated = "Use the receiver's button.action instead"]
    #[objc2::method(sel = "action")]
    pub unsafe fn action(&self) -> Option<Sel>;

    #[deprecated = "Use the receiver's button.action instead"]
    #[objc2::method(sel = "setAction:")]
    pub unsafe fn setAction(&self, action: Option<Sel>);

    #[deprecated = "Use the receiver's button.doubleAction instead"]
    #[objc2::method(sel = "doubleAction")]
    pub unsafe fn doubleAction(&self) -> Option<Sel>;

    #[deprecated = "Use the receiver's button.doubleAction instead"]
    #[objc2::method(sel = "setDoubleAction:")]
    pub unsafe fn setDoubleAction(&self, double_action: Option<Sel>);

    #[deprecated = "Use the receiver's button.target instead"]
    #[objc2::method(sel = "target", managed = "Other")]
    pub unsafe fn target(&self) -> Option<Id<Object>>;

    #[deprecated = "Use the receiver's button.target instead"]
    #[objc2::method(sel = "setTarget:")]
    pub unsafe fn setTarget(&self, target: Option<&Object>);

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use the receiver's button.title instead"]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use the receiver's button.title instead"]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: Option<&NSString>);

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[deprecated = "Use the receiver's button.attributedTitle instead"]
    #[objc2::method(sel = "attributedTitle", managed = "Other")]
    pub unsafe fn attributedTitle(&self) -> Option<Id<NSAttributedString>>;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[deprecated = "Use the receiver's button.attributedTitle instead"]
    #[objc2::method(sel = "setAttributedTitle:")]
    pub unsafe fn setAttributedTitle(&self, attributed_title: Option<&NSAttributedString>);

    #[cfg(feature = "AppKit_NSImage")]
    #[deprecated = "Use the receiver's button.image instead"]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[deprecated = "Use the receiver's button.image instead"]
    #[objc2::method(sel = "setImage:")]
    pub unsafe fn setImage(&self, image: Option<&NSImage>);

    #[cfg(feature = "AppKit_NSImage")]
    #[deprecated = "Use the receiver's button.alternateImage instead"]
    #[objc2::method(sel = "alternateImage", managed = "Other")]
    pub unsafe fn alternateImage(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[deprecated = "Use the receiver's button.alternateImage instead"]
    #[objc2::method(sel = "setAlternateImage:")]
    pub unsafe fn setAlternateImage(&self, alternate_image: Option<&NSImage>);

    #[deprecated = "Use the receiver's button.enabled instead"]
    #[objc2::method(sel = "isEnabled")]
    pub unsafe fn isEnabled(&self) -> bool;

    #[deprecated = "Use the receiver's button.enabled instead"]
    #[objc2::method(sel = "setEnabled:")]
    pub unsafe fn setEnabled(&self, enabled: bool);

    #[deprecated = "Use the receiver's button.cell.highlightsBy instead"]
    #[objc2::method(sel = "highlightMode")]
    pub unsafe fn highlightMode(&self) -> bool;

    #[deprecated = "Use the receiver's button.cell.highlightsBy instead"]
    #[objc2::method(sel = "setHighlightMode:")]
    pub unsafe fn setHighlightMode(&self, highlight_mode: bool);

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use the receiver's button.toolTip instead"]
    #[objc2::method(sel = "toolTip", managed = "Other")]
    pub unsafe fn toolTip(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use the receiver's button.toolTip instead"]
    #[objc2::method(sel = "setToolTip:")]
    pub unsafe fn setToolTip(&self, tool_tip: Option<&NSString>);

    #[deprecated = "Use the receiver's button's -sendActionOn: instead"]
    #[objc2::method(sel = "sendActionOn:")]
    pub unsafe fn sendActionOn(&self, mask: NSEventMask) -> NSInteger;

    #[cfg(feature = "AppKit_NSView")]
    #[deprecated = "Use the standard button property instead"]
    #[objc2::method(sel = "view", managed = "Other")]
    pub unsafe fn view(&self) -> Option<Id<NSView>>;

    #[cfg(feature = "AppKit_NSView")]
    #[deprecated = "Use the standard button property instead"]
    #[objc2::method(sel = "setView:")]
    pub unsafe fn setView(&self, view: Option<&NSView>);

    #[deprecated = "Use the standard button instead which handles highlight drawing, making this method obsolete"]
    #[objc2::method(sel = "drawStatusBarBackgroundInRect:withHighlight:")]
    pub unsafe fn drawStatusBarBackgroundInRect_withHighlight(&self, rect: NSRect, highlight: bool);

    #[cfg(feature = "AppKit_NSMenu")]
    #[deprecated = "Use the menu property instead"]
    #[objc2::method(sel = "popUpStatusItemMenu:")]
    pub unsafe fn popUpStatusItemMenu(&self, menu: &NSMenu);
}
