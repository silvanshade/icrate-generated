//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSControl,
    unsafe inherits = [
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSImageView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSImageView;
}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSAccessibility for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSAccessibilityElementProtocol for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSAccessibilityImage for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSAnimatablePropertyContainer for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSAppearanceCustomization for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSCoding for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSDraggingDestination for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSMenuItemValidation for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSObjectProtocol for NSImageView {}

#[cfg(feature = "AppKit_NSImageView")]
unsafe impl NSUserInterfaceItemIdentification for NSImageView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSImageView")]
    pub type NSImageView;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "imageViewWithImage:", managed = "Other")]
    pub unsafe fn imageViewWithImage(image: &NSImage) -> Id<Self>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "setImage:")]
    pub unsafe fn setImage(&self, image: Option<&NSImage>);

    #[objc2::method(sel = "isEditable")]
    pub unsafe fn isEditable(&self) -> bool;

    #[objc2::method(sel = "setEditable:")]
    pub unsafe fn setEditable(&self, editable: bool);

    #[objc2::method(sel = "imageAlignment")]
    pub unsafe fn imageAlignment(&self) -> NSImageAlignment;

    #[objc2::method(sel = "setImageAlignment:")]
    pub unsafe fn setImageAlignment(&self, image_alignment: NSImageAlignment);

    #[objc2::method(sel = "imageScaling")]
    pub unsafe fn imageScaling(&self) -> NSImageScaling;

    #[objc2::method(sel = "setImageScaling:")]
    pub unsafe fn setImageScaling(&self, image_scaling: NSImageScaling);

    #[objc2::method(sel = "imageFrameStyle")]
    pub unsafe fn imageFrameStyle(&self) -> NSImageFrameStyle;

    #[objc2::method(sel = "setImageFrameStyle:")]
    pub unsafe fn setImageFrameStyle(&self, image_frame_style: NSImageFrameStyle);

    #[cfg(feature = "AppKit_NSImageSymbolConfiguration")]
    #[objc2::method(sel = "symbolConfiguration", managed = "Other")]
    pub unsafe fn symbolConfiguration(&self) -> Option<Id<NSImageSymbolConfiguration>>;

    #[cfg(feature = "AppKit_NSImageSymbolConfiguration")]
    #[objc2::method(sel = "setSymbolConfiguration:")]
    pub unsafe fn setSymbolConfiguration(
        &self,
        symbol_configuration: Option<&NSImageSymbolConfiguration>,
    );

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "contentTintColor", managed = "Other")]
    pub unsafe fn contentTintColor(&self) -> Option<Id<NSColor>>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "setContentTintColor:")]
    pub unsafe fn setContentTintColor(&self, content_tint_color: Option<&NSColor>);

    #[objc2::method(sel = "animates")]
    pub unsafe fn animates(&self) -> bool;

    #[objc2::method(sel = "setAnimates:")]
    pub unsafe fn setAnimates(&self, animates: bool);

    #[objc2::method(sel = "allowsCutCopyPaste")]
    pub unsafe fn allowsCutCopyPaste(&self) -> bool;

    #[objc2::method(sel = "setAllowsCutCopyPaste:")]
    pub unsafe fn setAllowsCutCopyPaste(&self, allows_cut_copy_paste: bool);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSImageView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSImageView")]
    pub type NSImageView;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
