//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutAnchor")]
    pub type NSLayoutAnchor<AnchorType: Message = Object, AnchorTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintEqualToAnchor:", managed = "Other")]
    pub unsafe fn constraintEqualToAnchor(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintGreaterThanOrEqualToAnchor:", managed = "Other")]
    pub unsafe fn constraintGreaterThanOrEqualToAnchor(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintLessThanOrEqualToAnchor:", managed = "Other")]
    pub unsafe fn constraintLessThanOrEqualToAnchor(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintEqualToAnchor:constant:", managed = "Other")]
    pub unsafe fn constraintEqualToAnchor_constant(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintGreaterThanOrEqualToAnchor:constant:",
        managed = "Other"
    )]
    pub unsafe fn constraintGreaterThanOrEqualToAnchor_constant(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintLessThanOrEqualToAnchor:constant:", managed = "Other")]
    pub unsafe fn constraintLessThanOrEqualToAnchor_constant(
        &self,
        anchor: &NSLayoutAnchor<AnchorType>,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[objc2::method(sel = "item", managed = "Other")]
    pub unsafe fn item(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "hasAmbiguousLayout")]
    pub unsafe fn hasAmbiguousLayout(&self) -> bool;

    #[cfg(all(feature = "AppKit_NSLayoutConstraint", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "constraintsAffectingLayout", managed = "Other")]
    pub unsafe fn constraintsAffectingLayout(&self) -> Id<NSArray<NSLayoutConstraint>>;
}

#[objc2::interface(
    unsafe super = NSLayoutAnchor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutXAxisAnchor")]
    #[derive(Debug)]
    pub type NSLayoutXAxisAnchor;
}

#[cfg(feature = "AppKit_NSLayoutXAxisAnchor")]
unsafe impl NSObjectProtocol for NSLayoutXAxisAnchor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutXAxisAnchor")]
    pub type NSLayoutXAxisAnchor;

    #[cfg(feature = "AppKit_NSLayoutDimension")]
    #[objc2::method(sel = "anchorWithOffsetToAnchor:", managed = "Other")]
    pub unsafe fn anchorWithOffsetToAnchor(
        &self,
        other_anchor: &NSLayoutXAxisAnchor,
    ) -> Id<NSLayoutDimension>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintEqualToSystemSpacingAfterAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintEqualToSystemSpacingAfterAnchor_multiplier(
        &self,
        anchor: &NSLayoutXAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier(
        &self,
        anchor: &NSLayoutXAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintLessThanOrEqualToSystemSpacingAfterAnchor_multiplier(
        &self,
        anchor: &NSLayoutXAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;
}

#[objc2::interface(
    unsafe super = NSLayoutAnchor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutYAxisAnchor")]
    #[derive(Debug)]
    pub type NSLayoutYAxisAnchor;
}

#[cfg(feature = "AppKit_NSLayoutYAxisAnchor")]
unsafe impl NSObjectProtocol for NSLayoutYAxisAnchor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutYAxisAnchor")]
    pub type NSLayoutYAxisAnchor;

    #[cfg(feature = "AppKit_NSLayoutDimension")]
    #[objc2::method(sel = "anchorWithOffsetToAnchor:", managed = "Other")]
    pub unsafe fn anchorWithOffsetToAnchor(
        &self,
        other_anchor: &NSLayoutYAxisAnchor,
    ) -> Id<NSLayoutDimension>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintEqualToSystemSpacingBelowAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintEqualToSystemSpacingBelowAnchor_multiplier(
        &self,
        anchor: &NSLayoutYAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier(
        &self,
        anchor: &NSLayoutYAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintLessThanOrEqualToSystemSpacingBelowAnchor_multiplier(
        &self,
        anchor: &NSLayoutYAxisAnchor,
        multiplier: CGFloat,
    ) -> Id<NSLayoutConstraint>;
}

#[objc2::interface(
    unsafe super = NSLayoutAnchor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutDimension")]
    #[derive(Debug)]
    pub type NSLayoutDimension;
}

#[cfg(feature = "AppKit_NSLayoutDimension")]
unsafe impl NSObjectProtocol for NSLayoutDimension {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSLayoutDimension")]
    pub type NSLayoutDimension;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintEqualToConstant:", managed = "Other")]
    pub unsafe fn constraintEqualToConstant(&self, c: CGFloat) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintGreaterThanOrEqualToConstant:", managed = "Other")]
    pub unsafe fn constraintGreaterThanOrEqualToConstant(
        &self,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintLessThanOrEqualToConstant:", managed = "Other")]
    pub unsafe fn constraintLessThanOrEqualToConstant(&self, c: CGFloat) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(sel = "constraintEqualToAnchor:multiplier:", managed = "Other")]
    pub unsafe fn constraintEqualToAnchor_multiplier(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintGreaterThanOrEqualToAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintGreaterThanOrEqualToAnchor_multiplier(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintLessThanOrEqualToAnchor:multiplier:",
        managed = "Other"
    )]
    pub unsafe fn constraintLessThanOrEqualToAnchor_multiplier(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintEqualToAnchor:multiplier:constant:",
        managed = "Other"
    )]
    pub unsafe fn constraintEqualToAnchor_multiplier_constant(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintGreaterThanOrEqualToAnchor:multiplier:constant:",
        managed = "Other"
    )]
    pub unsafe fn constraintGreaterThanOrEqualToAnchor_multiplier_constant(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;

    #[cfg(feature = "AppKit_NSLayoutConstraint")]
    #[objc2::method(
        sel = "constraintLessThanOrEqualToAnchor:multiplier:constant:",
        managed = "Other"
    )]
    pub unsafe fn constraintLessThanOrEqualToAnchor_multiplier_constant(
        &self,
        anchor: &NSLayoutDimension,
        m: CGFloat,
        c: CGFloat,
    ) -> Id<NSLayoutConstraint>;
}
