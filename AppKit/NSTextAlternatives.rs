//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTextAlternatives")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSTextAlternatives;
}

#[cfg(feature = "AppKit_NSTextAlternatives")]
unsafe impl NSCoding for NSTextAlternatives {}

#[cfg(feature = "AppKit_NSTextAlternatives")]
unsafe impl NSObjectProtocol for NSTextAlternatives {}

#[cfg(feature = "AppKit_NSTextAlternatives")]
unsafe impl NSSecureCoding for NSTextAlternatives {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSTextAlternatives")]
    pub type NSTextAlternatives;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithPrimaryString:alternativeStrings:", managed = "Init")]
    pub unsafe fn initWithPrimaryString_alternativeStrings(
        this: Option<Allocated<Self>>,
        primary_string: &NSString,
        alternative_strings: &NSArray<NSString>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "primaryString", managed = "Other")]
    pub unsafe fn primaryString(&self) -> Id<NSString>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "alternativeStrings", managed = "Other")]
    pub unsafe fn alternativeStrings(&self) -> Id<NSArray<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "noteSelectedAlternativeString:")]
    pub unsafe fn noteSelectedAlternativeString(&self, alternative_string: &NSString);
}

extern_static!(
    NSTextAlternativesSelectedAlternativeStringNotification: &'static NSNotificationName
);
