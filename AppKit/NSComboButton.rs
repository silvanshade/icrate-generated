//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSComboButtonStyle {
    NSComboButtonStyleSplit = 0,
    NSComboButtonStyleUnified = 1,
}

#[objc2::interface(
    unsafe super = NSControl,
    unsafe inherits = [
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSComboButton")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSComboButton;
}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSAccessibility for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSAccessibilityElementProtocol for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSAnimatablePropertyContainer for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSAppearanceCustomization for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSCoding for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSDraggingDestination for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSObjectProtocol for NSComboButton {}

#[cfg(feature = "AppKit_NSComboButton")]
unsafe impl NSUserInterfaceItemIdentification for NSComboButton {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSComboButton")]
    pub type NSComboButton;

    #[cfg(all(feature = "AppKit_NSMenu", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "comboButtonWithTitle:menu:target:action:", managed = "Other")]
    pub unsafe fn comboButtonWithTitle_menu_target_action(
        title: &NSString,
        menu: Option<&NSMenu>,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(all(feature = "AppKit_NSImage", feature = "AppKit_NSMenu"))]
    #[objc2::method(sel = "comboButtonWithImage:menu:target:action:", managed = "Other")]
    pub unsafe fn comboButtonWithImage_menu_target_action(
        image: &NSImage,
        menu: Option<&NSMenu>,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "AppKit_NSImage",
        feature = "AppKit_NSMenu",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(
        sel = "comboButtonWithTitle:image:menu:target:action:",
        managed = "Other"
    )]
    pub unsafe fn comboButtonWithTitle_image_menu_target_action(
        title: &NSString,
        image: &NSImage,
        menu: Option<&NSMenu>,
        target: Option<&Object>,
        action: Option<Sel>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: &NSString);

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "setImage:")]
    pub unsafe fn setImage(&self, image: Option<&NSImage>);

    #[objc2::method(sel = "imageScaling")]
    pub unsafe fn imageScaling(&self) -> NSImageScaling;

    #[objc2::method(sel = "setImageScaling:")]
    pub unsafe fn setImageScaling(&self, image_scaling: NSImageScaling);

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "menu", managed = "Other")]
    pub unsafe fn menu(&self) -> Id<NSMenu>;

    #[cfg(feature = "AppKit_NSMenu")]
    #[objc2::method(sel = "setMenu:")]
    pub unsafe fn setMenu(&self, menu: &NSMenu);

    #[objc2::method(sel = "style")]
    pub unsafe fn style(&self) -> NSComboButtonStyle;

    #[objc2::method(sel = "setStyle:")]
    pub unsafe fn setStyle(&self, style: NSComboButtonStyle);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSComboButton")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSComboButton")]
    pub type NSComboButton;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
