//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSTouchBarItem,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStepperTouchBarItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSStepperTouchBarItem;
}

#[cfg(feature = "AppKit_NSStepperTouchBarItem")]
unsafe impl NSCoding for NSStepperTouchBarItem {}

#[cfg(feature = "AppKit_NSStepperTouchBarItem")]
unsafe impl NSObjectProtocol for NSStepperTouchBarItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStepperTouchBarItem")]
    pub type NSStepperTouchBarItem;

    #[cfg(feature = "Foundation_NSFormatter")]
    #[objc2::method(
        sel = "stepperTouchBarItemWithIdentifier:formatter:",
        managed = "Other"
    )]
    pub unsafe fn stepperTouchBarItemWithIdentifier_formatter(
        identifier: &NSTouchBarItemIdentifier,
        formatter: &NSFormatter,
    ) -> Id<Self>;

    #[objc2::method(
        sel = "stepperTouchBarItemWithIdentifier:drawingHandler:",
        managed = "Other"
    )]
    pub unsafe fn stepperTouchBarItemWithIdentifier_drawingHandler(
        identifier: &NSTouchBarItemIdentifier,
        drawing_handler: &Block<(NSRect, c_double), ()>,
    ) -> Id<Self>;

    #[objc2::method(sel = "maxValue")]
    pub unsafe fn maxValue(&self) -> c_double;

    #[objc2::method(sel = "setMaxValue:")]
    pub unsafe fn setMaxValue(&self, max_value: c_double);

    #[objc2::method(sel = "minValue")]
    pub unsafe fn minValue(&self) -> c_double;

    #[objc2::method(sel = "setMinValue:")]
    pub unsafe fn setMinValue(&self, min_value: c_double);

    #[objc2::method(sel = "increment")]
    pub unsafe fn increment(&self) -> c_double;

    #[objc2::method(sel = "setIncrement:")]
    pub unsafe fn setIncrement(&self, increment: c_double);

    #[objc2::method(sel = "value")]
    pub unsafe fn value(&self) -> c_double;

    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: c_double);

    #[objc2::method(sel = "target", managed = "Other")]
    pub unsafe fn target(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setTarget:")]
    pub unsafe fn setTarget(&self, target: Option<&Object>);

    #[objc2::method(sel = "action")]
    pub unsafe fn action(&self) -> Option<Sel>;

    #[objc2::method(sel = "setAction:")]
    pub unsafe fn setAction(&self, action: Option<Sel>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "customizationLabel", managed = "Other")]
    pub unsafe fn customizationLabel(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCustomizationLabel:")]
    pub unsafe fn setCustomizationLabel(&self, customization_label: Option<&NSString>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSStepperTouchBarItem")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSStepperTouchBarItem")]
    pub type NSStepperTouchBarItem;

    #[objc2::method(sel = "initWithIdentifier:", managed = "Init")]
    pub unsafe fn initWithIdentifier(
        this: Option<Allocated<Self>>,
        identifier: &NSTouchBarItemIdentifier,
    ) -> Id<Self>;
}
