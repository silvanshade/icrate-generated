//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSScreen")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSScreen;
}

#[cfg(feature = "AppKit_NSScreen")]
unsafe impl NSObjectProtocol for NSScreen {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSScreen")]
    pub type NSScreen;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "screens", managed = "Other")]
    pub unsafe fn screens() -> Id<NSArray<NSScreen>>;

    #[objc2::method(sel = "mainScreen", managed = "Other")]
    pub unsafe fn mainScreen() -> Option<Id<NSScreen>>;

    #[objc2::method(sel = "deepestScreen", managed = "Other")]
    pub unsafe fn deepestScreen() -> Option<Id<NSScreen>>;

    #[objc2::method(sel = "screensHaveSeparateSpaces")]
    pub unsafe fn screensHaveSeparateSpaces() -> bool;

    #[objc2::method(sel = "depth")]
    pub unsafe fn depth(&self) -> NSWindowDepth;

    #[objc2::method(sel = "frame")]
    pub unsafe fn frame(&self) -> NSRect;

    #[objc2::method(sel = "visibleFrame")]
    pub unsafe fn visibleFrame(&self) -> NSRect;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "deviceDescription", managed = "Other")]
    pub unsafe fn deviceDescription(&self) -> Id<NSDictionary<NSDeviceDescriptionKey, Object>>;

    #[cfg(feature = "AppKit_NSColorSpace")]
    #[objc2::method(sel = "colorSpace", managed = "Other")]
    pub unsafe fn colorSpace(&self) -> Option<Id<NSColorSpace>>;

    #[objc2::method(sel = "supportedWindowDepths")]
    pub unsafe fn supportedWindowDepths(&self) -> NonNull<NSWindowDepth>;

    #[objc2::method(sel = "canRepresentDisplayGamut:")]
    pub unsafe fn canRepresentDisplayGamut(&self, display_gamut: NSDisplayGamut) -> bool;

    #[objc2::method(sel = "convertRectToBacking:")]
    pub unsafe fn convertRectToBacking(&self, rect: NSRect) -> NSRect;

    #[objc2::method(sel = "convertRectFromBacking:")]
    pub unsafe fn convertRectFromBacking(&self, rect: NSRect) -> NSRect;

    #[objc2::method(sel = "backingAlignedRect:options:")]
    pub unsafe fn backingAlignedRect_options(
        &self,
        rect: NSRect,
        options: NSAlignmentOptions,
    ) -> NSRect;

    #[objc2::method(sel = "backingScaleFactor")]
    pub unsafe fn backingScaleFactor(&self) -> CGFloat;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "localizedName", managed = "Other")]
    pub unsafe fn localizedName(&self) -> Id<NSString>;

    #[objc2::method(sel = "safeAreaInsets")]
    pub unsafe fn safeAreaInsets(&self) -> NSEdgeInsets;

    #[objc2::method(sel = "auxiliaryTopLeftArea")]
    pub unsafe fn auxiliaryTopLeftArea(&self) -> NSRect;

    #[objc2::method(sel = "auxiliaryTopRightArea")]
    pub unsafe fn auxiliaryTopRightArea(&self) -> NSRect;
}

extern_static!(NSScreenColorSpaceDidChangeNotification: &'static NSNotificationName);

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSScreen")]
    pub type NSScreen;

    #[objc2::method(sel = "maximumExtendedDynamicRangeColorComponentValue")]
    pub unsafe fn maximumExtendedDynamicRangeColorComponentValue(&self) -> CGFloat;

    #[objc2::method(sel = "maximumPotentialExtendedDynamicRangeColorComponentValue")]
    pub unsafe fn maximumPotentialExtendedDynamicRangeColorComponentValue(&self) -> CGFloat;

    #[objc2::method(sel = "maximumReferenceExtendedDynamicRangeColorComponentValue")]
    pub unsafe fn maximumReferenceExtendedDynamicRangeColorComponentValue(&self) -> CGFloat;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSScreen")]
    pub type NSScreen;

    #[objc2::method(sel = "maximumFramesPerSecond")]
    pub unsafe fn maximumFramesPerSecond(&self) -> NSInteger;

    #[objc2::method(sel = "minimumRefreshInterval")]
    pub unsafe fn minimumRefreshInterval(&self) -> NSTimeInterval;

    #[objc2::method(sel = "maximumRefreshInterval")]
    pub unsafe fn maximumRefreshInterval(&self) -> NSTimeInterval;

    #[objc2::method(sel = "displayUpdateGranularity")]
    pub unsafe fn displayUpdateGranularity(&self) -> NSTimeInterval;

    #[objc2::method(sel = "lastDisplayUpdateTimestamp")]
    pub unsafe fn lastDisplayUpdateTimestamp(&self) -> NSTimeInterval;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AppKit_NSScreen")]
    pub type NSScreen;

    #[deprecated = "Use -convertRectToBacking: or -backingScaleFactor instead"]
    #[objc2::method(sel = "userSpaceScaleFactor")]
    pub unsafe fn userSpaceScaleFactor(&self) -> CGFloat;
}
