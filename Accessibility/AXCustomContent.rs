//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Accessibility::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum AXCustomContentImportance {
    AXCustomContentImportanceDefault = 0,
    AXCustomContentImportanceHigh = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Accessibility_AXCustomContent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type AXCustomContent;
}

#[cfg(feature = "Accessibility_AXCustomContent")]
unsafe impl NSCoding for AXCustomContent {}

#[cfg(feature = "Accessibility_AXCustomContent")]
unsafe impl NSObjectProtocol for AXCustomContent {}

#[cfg(feature = "Accessibility_AXCustomContent")]
unsafe impl NSSecureCoding for AXCustomContent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Accessibility_AXCustomContent")]
    pub type AXCustomContent;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "customContentWithLabel:value:", managed = "Other")]
    pub unsafe fn customContentWithLabel_value(label: &NSString, value: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(
        sel = "customContentWithAttributedLabel:attributedValue:",
        managed = "Other"
    )]
    pub unsafe fn customContentWithAttributedLabel_attributedValue(
        label: &NSAttributedString,
        value: &NSAttributedString,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "attributedLabel", managed = "Other")]
    pub unsafe fn attributedLabel(&self) -> Id<NSAttributedString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "value", managed = "Other")]
    pub unsafe fn value(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSAttributedString")]
    #[objc2::method(sel = "attributedValue", managed = "Other")]
    pub unsafe fn attributedValue(&self) -> Id<NSAttributedString>;

    #[objc2::method(sel = "importance")]
    pub unsafe fn importance(&self) -> AXCustomContentImportance;

    #[objc2::method(sel = "setImportance:")]
    pub unsafe fn setImportance(&self, importance: AXCustomContentImportance);

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}

#[objc2::protocol]
pub unsafe trait AXCustomContentProvider: NSObjectProtocol {
    #[cfg(all(
        feature = "Accessibility_AXCustomContent",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "accessibilityCustomContent", managed = "Other")]
    unsafe fn accessibilityCustomContent(&self) -> Id<NSArray<AXCustomContent>>;

    #[cfg(all(
        feature = "Accessibility_AXCustomContent",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setAccessibilityCustomContent:")]
    unsafe fn setAccessibilityCustomContent(
        &self,
        accessibility_custom_content: Option<&NSArray<AXCustomContent>>,
    );
}
