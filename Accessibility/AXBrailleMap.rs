//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Accessibility::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Accessibility_AXBrailleMap")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type AXBrailleMap;
}

#[cfg(feature = "Accessibility_AXBrailleMap")]
unsafe impl NSCoding for AXBrailleMap {}

#[cfg(feature = "Accessibility_AXBrailleMap")]
unsafe impl NSObjectProtocol for AXBrailleMap {}

#[cfg(feature = "Accessibility_AXBrailleMap")]
unsafe impl NSSecureCoding for AXBrailleMap {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Accessibility_AXBrailleMap")]
    pub type AXBrailleMap;

    #[objc2::method(sel = "dimensions")]
    pub unsafe fn dimensions(&self) -> CGSize;

    #[objc2::method(sel = "setHeight:atPoint:")]
    pub unsafe fn setHeight_atPoint(&self, status: c_float, point: CGPoint);

    #[objc2::method(sel = "heightAtPoint:")]
    pub unsafe fn heightAtPoint(&self, point: CGPoint) -> c_float;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}

#[objc2::protocol]
pub unsafe trait AXBrailleMapRenderer: NSObjectProtocol {
    #[objc2::method(optional, sel = "accessibilityBrailleMapRenderRegion")]
    unsafe fn accessibilityBrailleMapRenderRegion(&self) -> CGRect;

    #[objc2::method(optional, sel = "setAccessibilityBrailleMapRenderRegion:")]
    unsafe fn setAccessibilityBrailleMapRenderRegion(
        &self,
        accessibility_braille_map_render_region: CGRect,
    );

    #[cfg(feature = "Accessibility_AXBrailleMap")]
    #[objc2::method(optional, sel = "accessibilityBrailleMapRenderer")]
    unsafe fn accessibilityBrailleMapRenderer(
        &self,
    ) -> NonNull<Block<(NonNull<AXBrailleMap>,), ()>>;

    #[cfg(feature = "Accessibility_AXBrailleMap")]
    #[objc2::method(optional, sel = "setAccessibilityBrailleMapRenderer:")]
    unsafe fn setAccessibilityBrailleMapRenderer(
        &self,
        accessibility_braille_map_renderer: &Block<(NonNull<AXBrailleMap>,), ()>,
    );
}
