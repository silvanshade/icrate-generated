//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

pub type CLGeocodeCompletionHandler = *mut Block<(*mut NSArray<CLPlacemark>, *mut NSError), ()>;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLGeocoder")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CLGeocoder;
}

#[cfg(feature = "CoreLocation_CLGeocoder")]
unsafe impl NSObjectProtocol for CLGeocoder {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLGeocoder")]
    pub type CLGeocoder;

    #[objc2::method(sel = "isGeocoding")]
    pub unsafe fn isGeocoding(&self) -> bool;

    #[cfg(feature = "CoreLocation_CLLocation")]
    #[objc2::method(sel = "reverseGeocodeLocation:completionHandler:")]
    pub unsafe fn reverseGeocodeLocation_completionHandler(
        &self,
        location: &CLLocation,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(all(feature = "CoreLocation_CLLocation", feature = "Foundation_NSLocale"))]
    #[objc2::method(sel = "reverseGeocodeLocation:preferredLocale:completionHandler:")]
    pub unsafe fn reverseGeocodeLocation_preferredLocale_completionHandler(
        &self,
        location: &CLLocation,
        locale: Option<&NSLocale>,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(feature = "Foundation_NSDictionary")]
    #[deprecated = "Use -geocodePostalAddress:completionHandler:"]
    #[objc2::method(sel = "geocodeAddressDictionary:completionHandler:")]
    pub unsafe fn geocodeAddressDictionary_completionHandler(
        &self,
        address_dictionary: &NSDictionary,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "geocodeAddressString:completionHandler:")]
    pub unsafe fn geocodeAddressString_completionHandler(
        &self,
        address_string: &NSString,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(all(feature = "CoreLocation_CLRegion", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "geocodeAddressString:inRegion:completionHandler:")]
    pub unsafe fn geocodeAddressString_inRegion_completionHandler(
        &self,
        address_string: &NSString,
        region: Option<&CLRegion>,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(all(
        feature = "CoreLocation_CLRegion",
        feature = "Foundation_NSLocale",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "geocodeAddressString:inRegion:preferredLocale:completionHandler:")]
    pub unsafe fn geocodeAddressString_inRegion_preferredLocale_completionHandler(
        &self,
        address_string: &NSString,
        region: Option<&CLRegion>,
        locale: Option<&NSLocale>,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[objc2::method(sel = "cancelGeocode")]
    pub unsafe fn cancelGeocode(&self);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLGeocoder")]
    pub type CLGeocoder;

    #[cfg(feature = "Contacts_CNPostalAddress")]
    #[objc2::method(sel = "geocodePostalAddress:completionHandler:")]
    pub unsafe fn geocodePostalAddress_completionHandler(
        &self,
        postal_address: &CNPostalAddress,
        completion_handler: CLGeocodeCompletionHandler,
    );

    #[cfg(all(feature = "Contacts_CNPostalAddress", feature = "Foundation_NSLocale"))]
    #[objc2::method(sel = "geocodePostalAddress:preferredLocale:completionHandler:")]
    pub unsafe fn geocodePostalAddress_preferredLocale_completionHandler(
        &self,
        postal_address: &CNPostalAddress,
        locale: Option<&NSLocale>,
        completion_handler: CLGeocodeCompletionHandler,
    );
}
