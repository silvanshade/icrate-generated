//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

pub type CLBeaconMajorValue = u16;

pub type CLBeaconMinorValue = u16;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CLBeaconIdentityConstraint;
}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSCoding for CLBeaconIdentityConstraint {}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSObjectProtocol for CLBeaconIdentityConstraint {}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSSecureCoding for CLBeaconIdentityConstraint {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    pub type CLBeaconIdentityConstraint;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(sel = "major", managed = "Other")]
    pub unsafe fn major(&self) -> Option<Id<NSNumber>>;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(sel = "minor", managed = "Other")]
    pub unsafe fn minor(&self) -> Option<Id<NSNumber>>;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithUUID:", managed = "Init")]
    pub unsafe fn initWithUUID(this: Option<Allocated<Self>>, uuid: &NSUUID) -> Id<Self>;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithUUID:major:", managed = "Init")]
    pub unsafe fn initWithUUID_major(
        this: Option<Allocated<Self>>,
        uuid: &NSUUID,
        major: CLBeaconMajorValue,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithUUID:major:minor:", managed = "Init")]
    pub unsafe fn initWithUUID_major_minor(
        this: Option<Allocated<Self>>,
        uuid: &NSUUID,
        major: CLBeaconMajorValue,
        minor: CLBeaconMinorValue,
    ) -> Id<Self>;
}
