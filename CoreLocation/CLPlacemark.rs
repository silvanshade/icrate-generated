//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLPlacemark")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CLPlacemark;
}

#[cfg(feature = "CoreLocation_CLPlacemark")]
unsafe impl NSCoding for CLPlacemark {}

#[cfg(feature = "CoreLocation_CLPlacemark")]
unsafe impl NSObjectProtocol for CLPlacemark {}

#[cfg(feature = "CoreLocation_CLPlacemark")]
unsafe impl NSSecureCoding for CLPlacemark {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLPlacemark")]
    pub type CLPlacemark;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "initWithPlacemark:", managed = "Init")]
    pub unsafe fn initWithPlacemark(
        this: Option<Allocated<Self>>,
        placemark: &CLPlacemark,
    ) -> Id<Self>;

    #[cfg(feature = "CoreLocation_CLLocation")]
    #[objc2::method(sel = "location", managed = "Other")]
    pub unsafe fn location(&self) -> Option<Id<CLLocation>>;

    #[cfg(feature = "CoreLocation_CLRegion")]
    #[objc2::method(sel = "region", managed = "Other")]
    pub unsafe fn region(&self) -> Option<Id<CLRegion>>;

    #[cfg(feature = "Foundation_NSTimeZone")]
    #[objc2::method(sel = "timeZone", managed = "Other")]
    pub unsafe fn timeZone(&self) -> Option<Id<NSTimeZone>>;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[deprecated = "Use @properties"]
    #[objc2::method(sel = "addressDictionary", managed = "Other")]
    pub unsafe fn addressDictionary(&self) -> Option<Id<NSDictionary>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "thoroughfare", managed = "Other")]
    pub unsafe fn thoroughfare(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subThoroughfare", managed = "Other")]
    pub unsafe fn subThoroughfare(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "locality", managed = "Other")]
    pub unsafe fn locality(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subLocality", managed = "Other")]
    pub unsafe fn subLocality(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "administrativeArea", managed = "Other")]
    pub unsafe fn administrativeArea(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subAdministrativeArea", managed = "Other")]
    pub unsafe fn subAdministrativeArea(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "postalCode", managed = "Other")]
    pub unsafe fn postalCode(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "ISOcountryCode", managed = "Other")]
    pub unsafe fn ISOcountryCode(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "country", managed = "Other")]
    pub unsafe fn country(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "inlandWater", managed = "Other")]
    pub unsafe fn inlandWater(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "ocean", managed = "Other")]
    pub unsafe fn ocean(&self) -> Option<Id<NSString>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "areasOfInterest", managed = "Other")]
    pub unsafe fn areasOfInterest(&self) -> Option<Id<NSArray<NSString>>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreLocation_CLPlacemark")]
    pub type CLPlacemark;

    #[cfg(feature = "Contacts_CNPostalAddress")]
    #[objc2::method(sel = "postalAddress", managed = "Other")]
    pub unsafe fn postalAddress(&self) -> Option<Id<CNPostalAddress>>;
}
