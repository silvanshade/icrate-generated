//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSBatchInsertRequestResultType {
    NSBatchInsertRequestResultTypeStatusOnly = 0x0,
    NSBatchInsertRequestResultTypeObjectIDs = 0x1,
    NSBatchInsertRequestResultTypeCount = 0x2,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSBatchUpdateRequestResultType {
    NSStatusOnlyResultType = 0x0,
    NSUpdatedObjectIDsResultType = 0x1,
    NSUpdatedObjectsCountResultType = 0x2,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSBatchDeleteRequestResultType {
    NSBatchDeleteResultTypeStatusOnly = 0x0,
    NSBatchDeleteResultTypeObjectIDs = 0x1,
    NSBatchDeleteResultTypeCount = 0x2,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSPersistentHistoryResultType {
    NSPersistentHistoryResultTypeStatusOnly = 0x0,
    NSPersistentHistoryResultTypeObjectIDs = 0x1,
    NSPersistentHistoryResultTypeCount = 0x2,
    NSPersistentHistoryResultTypeTransactionsOnly = 0x3,
    NSPersistentHistoryResultTypeChangesOnly = 0x4,
    NSPersistentHistoryResultTypeTransactionsAndChanges = 0x5,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPersistentStoreResult;
}

#[cfg(feature = "CoreData_NSPersistentStoreResult")]
unsafe impl NSObjectProtocol for NSPersistentStoreResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreResult")]
    pub type NSPersistentStoreResult;
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreAsynchronousResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPersistentStoreAsynchronousResult;
}

#[cfg(feature = "CoreData_NSPersistentStoreAsynchronousResult")]
unsafe impl NSObjectProtocol for NSPersistentStoreAsynchronousResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreAsynchronousResult")]
    pub type NSPersistentStoreAsynchronousResult;

    #[cfg(feature = "CoreData_NSManagedObjectContext")]
    #[objc2::method(sel = "managedObjectContext", managed = "Other")]
    pub unsafe fn managedObjectContext(&self) -> Id<NSManagedObjectContext>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "operationError", managed = "Other")]
    pub unsafe fn operationError(&self) -> Option<Id<NSError>>;

    #[cfg(feature = "Foundation_NSProgress")]
    #[objc2::method(sel = "progress", managed = "Other")]
    pub unsafe fn progress(&self) -> Option<Id<NSProgress>>;

    #[objc2::method(sel = "cancel")]
    pub unsafe fn cancel(&self);
}

#[objc2::interface(
    unsafe super = NSPersistentStoreAsynchronousResult,
    unsafe inherits = [
        NSPersistentStoreResult,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSAsynchronousFetchResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAsynchronousFetchResult<
        ResultType: Message = Object,
        ResultTypeOwnership: Ownership = Shared,
    >;
}

#[cfg(feature = "CoreData_NSAsynchronousFetchResult")]
unsafe impl<ResultType: Message, ResultTypeOwnership: Ownership> NSObjectProtocol
    for NSAsynchronousFetchResult<ResultType, ResultTypeOwnership>
{
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSAsynchronousFetchResult")]
    pub type NSAsynchronousFetchResult<
        ResultType: Message = Object,
        ResultTypeOwnership: Ownership = Shared,
    >;

    #[cfg(feature = "CoreData_NSAsynchronousFetchRequest")]
    #[objc2::method(sel = "fetchRequest", managed = "Other")]
    pub unsafe fn fetchRequest(&self) -> Id<NSAsynchronousFetchRequest<ResultType>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "finalResult", managed = "Other")]
    pub unsafe fn finalResult(&self) -> Option<Id<NSArray<ResultType>>>;
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchInsertResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSBatchInsertResult;
}

#[cfg(feature = "CoreData_NSBatchInsertResult")]
unsafe impl NSObjectProtocol for NSBatchInsertResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchInsertResult")]
    pub type NSBatchInsertResult;

    #[objc2::method(sel = "result", managed = "Other")]
    pub unsafe fn result(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "resultType")]
    pub unsafe fn resultType(&self) -> NSBatchInsertRequestResultType;
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchUpdateResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSBatchUpdateResult;
}

#[cfg(feature = "CoreData_NSBatchUpdateResult")]
unsafe impl NSObjectProtocol for NSBatchUpdateResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchUpdateResult")]
    pub type NSBatchUpdateResult;

    #[objc2::method(sel = "result", managed = "Other")]
    pub unsafe fn result(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "resultType")]
    pub unsafe fn resultType(&self) -> NSBatchUpdateRequestResultType;
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchDeleteResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSBatchDeleteResult;
}

#[cfg(feature = "CoreData_NSBatchDeleteResult")]
unsafe impl NSObjectProtocol for NSBatchDeleteResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSBatchDeleteResult")]
    pub type NSBatchDeleteResult;

    #[objc2::method(sel = "result", managed = "Other")]
    pub unsafe fn result(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "resultType")]
    pub unsafe fn resultType(&self) -> NSBatchDeleteRequestResultType;
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentHistoryResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPersistentHistoryResult;
}

#[cfg(feature = "CoreData_NSPersistentHistoryResult")]
unsafe impl NSObjectProtocol for NSPersistentHistoryResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentHistoryResult")]
    pub type NSPersistentHistoryResult;

    #[objc2::method(sel = "result", managed = "Other")]
    pub unsafe fn result(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "resultType")]
    pub unsafe fn resultType(&self) -> NSPersistentHistoryResultType;
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSPersistentCloudKitContainerEventResultType {
    NSPersistentCloudKitContainerEventResultTypeEvents = 0,
    NSPersistentCloudKitContainerEventResultTypeCountEvents = 1,
}

#[objc2::interface(
    unsafe super = NSPersistentStoreResult,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentCloudKitContainerEventResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPersistentCloudKitContainerEventResult;
}

#[cfg(feature = "CoreData_NSPersistentCloudKitContainerEventResult")]
unsafe impl NSObjectProtocol for NSPersistentCloudKitContainerEventResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentCloudKitContainerEventResult")]
    pub type NSPersistentCloudKitContainerEventResult;

    #[objc2::method(sel = "result", managed = "Other")]
    pub unsafe fn result(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "resultType")]
    pub unsafe fn resultType(&self) -> NSPersistentCloudKitContainerEventResultType;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}
