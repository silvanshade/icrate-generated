//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreDescription")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPersistentStoreDescription;
}

#[cfg(feature = "CoreData_NSPersistentStoreDescription")]
unsafe impl NSObjectProtocol for NSPersistentStoreDescription {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreDescription")]
    pub type NSPersistentStoreDescription;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "persistentStoreDescriptionWithURL:", managed = "Other")]
    pub unsafe fn persistentStoreDescriptionWithURL(url: &NSURL) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "type", managed = "Other")]
    pub unsafe fn r#type(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setType:")]
    pub unsafe fn setType(&self, r#type: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "configuration", managed = "Other")]
    pub unsafe fn configuration(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setConfiguration:")]
    pub unsafe fn setConfiguration(&self, configuration: Option<&NSString>);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "URL", managed = "Other")]
    pub unsafe fn URL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "setURL:")]
    pub unsafe fn setURL(&self, url: Option<&NSURL>);

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "options", managed = "Other")]
    pub unsafe fn options(&self) -> Id<NSDictionary<NSString, NSObject>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setOption:forKey:")]
    pub unsafe fn setOption_forKey(&self, option: Option<&NSObject>, key: &NSString);

    #[objc2::method(sel = "isReadOnly")]
    pub unsafe fn isReadOnly(&self) -> bool;

    #[objc2::method(sel = "setReadOnly:")]
    pub unsafe fn setReadOnly(&self, read_only: bool);

    #[objc2::method(sel = "timeout")]
    pub unsafe fn timeout(&self) -> NSTimeInterval;

    #[objc2::method(sel = "setTimeout:")]
    pub unsafe fn setTimeout(&self, timeout: NSTimeInterval);

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "sqlitePragmas", managed = "Other")]
    pub unsafe fn sqlitePragmas(&self) -> Id<NSDictionary<NSString, NSObject>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forPragmaNamed:")]
    pub unsafe fn setValue_forPragmaNamed(&self, value: Option<&NSObject>, name: &NSString);

    #[objc2::method(sel = "shouldAddStoreAsynchronously")]
    pub unsafe fn shouldAddStoreAsynchronously(&self) -> bool;

    #[objc2::method(sel = "setShouldAddStoreAsynchronously:")]
    pub unsafe fn setShouldAddStoreAsynchronously(&self, should_add_store_asynchronously: bool);

    #[objc2::method(sel = "shouldMigrateStoreAutomatically")]
    pub unsafe fn shouldMigrateStoreAutomatically(&self) -> bool;

    #[objc2::method(sel = "setShouldMigrateStoreAutomatically:")]
    pub unsafe fn setShouldMigrateStoreAutomatically(
        &self,
        should_migrate_store_automatically: bool,
    );

    #[objc2::method(sel = "shouldInferMappingModelAutomatically")]
    pub unsafe fn shouldInferMappingModelAutomatically(&self) -> bool;

    #[objc2::method(sel = "setShouldInferMappingModelAutomatically:")]
    pub unsafe fn setShouldInferMappingModelAutomatically(
        &self,
        should_infer_mapping_model_automatically: bool,
    );

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "initWithURL:", managed = "Init")]
    pub unsafe fn initWithURL(this: Option<Allocated<Self>>, url: &NSURL) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPersistentStoreDescription")]
    pub type NSPersistentStoreDescription;

    #[cfg(feature = "CoreData_NSPersistentCloudKitContainerOptions")]
    #[objc2::method(sel = "cloudKitContainerOptions", managed = "Other")]
    pub unsafe fn cloudKitContainerOptions(
        &self,
    ) -> Option<Id<NSPersistentCloudKitContainerOptions>>;

    #[cfg(feature = "CoreData_NSPersistentCloudKitContainerOptions")]
    #[objc2::method(sel = "setCloudKitContainerOptions:")]
    pub unsafe fn setCloudKitContainerOptions(
        &self,
        cloud_kit_container_options: Option<&NSPersistentCloudKitContainerOptions>,
    );
}
