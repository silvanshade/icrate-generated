//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSDeleteRule {
    NSNoActionDeleteRule = 0,
    NSNullifyDeleteRule = 1,
    NSCascadeDeleteRule = 2,
    NSDenyDeleteRule = 3,
}

#[objc2::interface(
    unsafe super = NSPropertyDescription,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSRelationshipDescription")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSRelationshipDescription;
}

#[cfg(feature = "CoreData_NSRelationshipDescription")]
unsafe impl NSCoding for NSRelationshipDescription {}

#[cfg(feature = "CoreData_NSRelationshipDescription")]
unsafe impl NSObjectProtocol for NSRelationshipDescription {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSRelationshipDescription")]
    pub type NSRelationshipDescription;

    #[cfg(feature = "CoreData_NSEntityDescription")]
    #[objc2::method(sel = "destinationEntity", managed = "Other")]
    pub unsafe fn destinationEntity(&self) -> Option<Id<NSEntityDescription>>;

    #[cfg(feature = "CoreData_NSEntityDescription")]
    #[objc2::method(sel = "setDestinationEntity:")]
    pub unsafe fn setDestinationEntity(&self, destination_entity: Option<&NSEntityDescription>);

    #[objc2::method(sel = "inverseRelationship", managed = "Other")]
    pub unsafe fn inverseRelationship(&self) -> Option<Id<NSRelationshipDescription>>;

    #[objc2::method(sel = "setInverseRelationship:")]
    pub unsafe fn setInverseRelationship(
        &self,
        inverse_relationship: Option<&NSRelationshipDescription>,
    );

    #[objc2::method(sel = "maxCount")]
    pub unsafe fn maxCount(&self) -> NSUInteger;

    #[objc2::method(sel = "setMaxCount:")]
    pub unsafe fn setMaxCount(&self, max_count: NSUInteger);

    #[objc2::method(sel = "minCount")]
    pub unsafe fn minCount(&self) -> NSUInteger;

    #[objc2::method(sel = "setMinCount:")]
    pub unsafe fn setMinCount(&self, min_count: NSUInteger);

    #[objc2::method(sel = "deleteRule")]
    pub unsafe fn deleteRule(&self) -> NSDeleteRule;

    #[objc2::method(sel = "setDeleteRule:")]
    pub unsafe fn setDeleteRule(&self, delete_rule: NSDeleteRule);

    #[objc2::method(sel = "isToMany")]
    pub unsafe fn isToMany(&self) -> bool;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "versionHash", managed = "Other")]
    pub unsafe fn versionHash(&self) -> Id<NSData>;

    #[objc2::method(sel = "isOrdered")]
    pub unsafe fn isOrdered(&self) -> bool;

    #[objc2::method(sel = "setOrdered:")]
    pub unsafe fn setOrdered(&self, ordered: bool);
}
