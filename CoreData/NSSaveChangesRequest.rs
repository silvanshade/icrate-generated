//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSPersistentStoreRequest,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSSaveChangesRequest")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSSaveChangesRequest;
}

#[cfg(feature = "CoreData_NSSaveChangesRequest")]
unsafe impl NSObjectProtocol for NSSaveChangesRequest {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSSaveChangesRequest")]
    pub type NSSaveChangesRequest;

    #[cfg(all(feature = "CoreData_NSManagedObject", feature = "Foundation_NSSet"))]
    #[objc2::method(
        sel = "initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:",
        managed = "Init"
    )]
    pub unsafe fn initWithInsertedObjects_updatedObjects_deletedObjects_lockedObjects(
        this: Option<Allocated<Self>>,
        inserted_objects: Option<&NSSet<NSManagedObject>>,
        updated_objects: Option<&NSSet<NSManagedObject>>,
        deleted_objects: Option<&NSSet<NSManagedObject>>,
        locked_objects: Option<&NSSet<NSManagedObject>>,
    ) -> Id<Self>;

    #[cfg(all(feature = "CoreData_NSManagedObject", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "insertedObjects", managed = "Other")]
    pub unsafe fn insertedObjects(&self) -> Option<Id<NSSet<NSManagedObject>>>;

    #[cfg(all(feature = "CoreData_NSManagedObject", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "updatedObjects", managed = "Other")]
    pub unsafe fn updatedObjects(&self) -> Option<Id<NSSet<NSManagedObject>>>;

    #[cfg(all(feature = "CoreData_NSManagedObject", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "deletedObjects", managed = "Other")]
    pub unsafe fn deletedObjects(&self) -> Option<Id<NSSet<NSManagedObject>>>;

    #[cfg(all(feature = "CoreData_NSManagedObject", feature = "Foundation_NSSet"))]
    #[objc2::method(sel = "lockedObjects", managed = "Other")]
    pub unsafe fn lockedObjects(&self) -> Option<Id<NSSet<NSManagedObject>>>;
}
