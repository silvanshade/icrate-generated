//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSAtomicStoreCacheNode")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSAtomicStoreCacheNode;
}

#[cfg(feature = "CoreData_NSAtomicStoreCacheNode")]
unsafe impl NSObjectProtocol for NSAtomicStoreCacheNode {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSAtomicStoreCacheNode")]
    pub type NSAtomicStoreCacheNode;

    #[cfg(feature = "CoreData_NSManagedObjectID")]
    #[objc2::method(sel = "initWithObjectID:", managed = "Init")]
    pub unsafe fn initWithObjectID(
        this: Option<Allocated<Self>>,
        moid: &NSManagedObjectID,
    ) -> Id<Self>;

    #[cfg(feature = "CoreData_NSManagedObjectID")]
    #[objc2::method(sel = "objectID", managed = "Other")]
    pub unsafe fn objectID(&self) -> Id<NSManagedObjectID>;

    #[cfg(all(
        feature = "Foundation_NSMutableDictionary",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "propertyCache", managed = "Other")]
    pub unsafe fn propertyCache(&self) -> Option<Id<NSMutableDictionary<NSString, Object>, Owned>>;

    #[cfg(all(
        feature = "Foundation_NSMutableDictionary",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "setPropertyCache:")]
    pub unsafe fn setPropertyCache(
        &self,
        property_cache: Option<&NSMutableDictionary<NSString, Object>>,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(&self, key: &NSString) -> Option<Id<Object>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(&self, value: Option<&Object>, key: &NSString);
}
