//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum NSFetchIndexElementType {
    NSFetchIndexElementTypeBinary = 0,
    NSFetchIndexElementTypeRTree = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSFetchIndexElementDescription")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSFetchIndexElementDescription;
}

#[cfg(feature = "CoreData_NSFetchIndexElementDescription")]
unsafe impl NSCoding for NSFetchIndexElementDescription {}

#[cfg(feature = "CoreData_NSFetchIndexElementDescription")]
unsafe impl NSObjectProtocol for NSFetchIndexElementDescription {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSFetchIndexElementDescription")]
    pub type NSFetchIndexElementDescription;

    #[cfg(feature = "CoreData_NSPropertyDescription")]
    #[objc2::method(sel = "initWithProperty:collationType:", managed = "Init")]
    pub unsafe fn initWithProperty_collationType(
        this: Option<Allocated<Self>>,
        property: &NSPropertyDescription,
        collation_type: NSFetchIndexElementType,
    ) -> Id<Self>;

    #[cfg(feature = "CoreData_NSPropertyDescription")]
    #[objc2::method(sel = "property", managed = "Other")]
    pub unsafe fn property(&self) -> Option<Id<NSPropertyDescription>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "propertyName", managed = "Other")]
    pub unsafe fn propertyName(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "collationType")]
    pub unsafe fn collationType(&self) -> NSFetchIndexElementType;

    #[objc2::method(sel = "setCollationType:")]
    pub unsafe fn setCollationType(&self, collation_type: NSFetchIndexElementType);

    #[objc2::method(sel = "isAscending")]
    pub unsafe fn isAscending(&self) -> bool;

    #[objc2::method(sel = "setAscending:")]
    pub unsafe fn setAscending(&self, ascending: bool);

    #[cfg(feature = "CoreData_NSFetchIndexDescription")]
    #[objc2::method(sel = "indexDescription", managed = "Other")]
    pub unsafe fn indexDescription(&self) -> Option<Id<NSFetchIndexDescription>>;
}
