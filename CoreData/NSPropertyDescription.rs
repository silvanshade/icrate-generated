//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreData::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPropertyDescription")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSPropertyDescription;
}

#[cfg(feature = "CoreData_NSPropertyDescription")]
unsafe impl NSCoding for NSPropertyDescription {}

#[cfg(feature = "CoreData_NSPropertyDescription")]
unsafe impl NSObjectProtocol for NSPropertyDescription {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreData_NSPropertyDescription")]
    pub type NSPropertyDescription;

    #[cfg(feature = "CoreData_NSEntityDescription")]
    #[objc2::method(sel = "entity", managed = "Other")]
    pub unsafe fn entity(&self) -> Id<NSEntityDescription>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: &NSString);

    #[objc2::method(sel = "isOptional")]
    pub unsafe fn isOptional(&self) -> bool;

    #[objc2::method(sel = "setOptional:")]
    pub unsafe fn setOptional(&self, optional: bool);

    #[objc2::method(sel = "isTransient")]
    pub unsafe fn isTransient(&self) -> bool;

    #[objc2::method(sel = "setTransient:")]
    pub unsafe fn setTransient(&self, transient: bool);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSPredicate"))]
    #[objc2::method(sel = "validationPredicates", managed = "Other")]
    pub unsafe fn validationPredicates(&self) -> Id<NSArray<NSPredicate>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "validationWarnings", managed = "Other")]
    pub unsafe fn validationWarnings(&self) -> Id<NSArray>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSPredicate",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "setValidationPredicates:withValidationWarnings:")]
    pub unsafe fn setValidationPredicates_withValidationWarnings(
        &self,
        validation_predicates: Option<&NSArray<NSPredicate>>,
        validation_warnings: Option<&NSArray<NSString>>,
    );

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "userInfo", managed = "Other")]
    pub unsafe fn userInfo(&self) -> Option<Id<NSDictionary>>;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "setUserInfo:")]
    pub unsafe fn setUserInfo(&self, user_info: Option<&NSDictionary>);

    #[deprecated = "Use NSEntityDescription.indexes instead"]
    #[objc2::method(sel = "isIndexed")]
    pub unsafe fn isIndexed(&self) -> bool;

    #[deprecated = "Use NSEntityDescription.indexes instead"]
    #[objc2::method(sel = "setIndexed:")]
    pub unsafe fn setIndexed(&self, indexed: bool);

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "versionHash", managed = "Other")]
    pub unsafe fn versionHash(&self) -> Id<NSData>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "versionHashModifier", managed = "Other")]
    pub unsafe fn versionHashModifier(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setVersionHashModifier:")]
    pub unsafe fn setVersionHashModifier(&self, version_hash_modifier: Option<&NSString>);

    #[objc2::method(sel = "isIndexedBySpotlight")]
    pub unsafe fn isIndexedBySpotlight(&self) -> bool;

    #[objc2::method(sel = "setIndexedBySpotlight:")]
    pub unsafe fn setIndexedBySpotlight(&self, indexed_by_spotlight: bool);

    #[deprecated = "Spotlight integration is deprecated. Use CoreSpotlight integration instead."]
    #[objc2::method(sel = "isStoredInExternalRecord")]
    pub unsafe fn isStoredInExternalRecord(&self) -> bool;

    #[deprecated = "Spotlight integration is deprecated. Use CoreSpotlight integration instead."]
    #[objc2::method(sel = "setStoredInExternalRecord:")]
    pub unsafe fn setStoredInExternalRecord(&self, stored_in_external_record: bool);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "renamingIdentifier", managed = "Other")]
    pub unsafe fn renamingIdentifier(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setRenamingIdentifier:")]
    pub unsafe fn setRenamingIdentifier(&self, renaming_identifier: Option<&NSString>);
}
