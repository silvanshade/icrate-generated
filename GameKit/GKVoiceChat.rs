//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum GKVoiceChatPlayerState {
    GKVoiceChatPlayerConnected = 0,
    GKVoiceChatPlayerDisconnected = 1,
    GKVoiceChatPlayerSpeaking = 2,
    GKVoiceChatPlayerSilent = 3,
    GKVoiceChatPlayerConnecting = 4,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKVoiceChat")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKVoiceChat;
}

#[cfg(feature = "GameKit_GKVoiceChat")]
unsafe impl NSObjectProtocol for GKVoiceChat {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKVoiceChat")]
    pub type GKVoiceChat;

    #[objc2::method(sel = "start")]
    pub unsafe fn start(&self);

    #[objc2::method(sel = "stop")]
    pub unsafe fn stop(&self);

    #[cfg(feature = "GameKit_GKPlayer")]
    #[objc2::method(sel = "setPlayer:muted:")]
    pub unsafe fn setPlayer_muted(&self, player: &GKPlayer, is_muted: bool);

    #[cfg(feature = "GameKit_GKPlayer")]
    #[objc2::method(sel = "playerVoiceChatStateDidChangeHandler")]
    pub unsafe fn playerVoiceChatStateDidChangeHandler(
        &self,
    ) -> NonNull<Block<(NonNull<GKPlayer>, GKVoiceChatPlayerState), ()>>;

    #[cfg(feature = "GameKit_GKPlayer")]
    #[objc2::method(sel = "setPlayerVoiceChatStateDidChangeHandler:")]
    pub unsafe fn setPlayerVoiceChatStateDidChangeHandler(
        &self,
        player_voice_chat_state_did_change_handler: &Block<
            (NonNull<GKPlayer>, GKVoiceChatPlayerState),
            (),
        >,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[objc2::method(sel = "isActive")]
    pub unsafe fn isActive(&self) -> bool;

    #[objc2::method(sel = "setActive:")]
    pub unsafe fn setActive(&self, active: bool);

    #[objc2::method(sel = "volume")]
    pub unsafe fn volume(&self) -> c_float;

    #[objc2::method(sel = "setVolume:")]
    pub unsafe fn setVolume(&self, volume: c_float);

    #[cfg(all(feature = "Foundation_NSArray", feature = "GameKit_GKPlayer"))]
    #[objc2::method(sel = "players", managed = "Other")]
    pub unsafe fn players(&self) -> Id<NSArray<GKPlayer>>;

    #[objc2::method(sel = "isVoIPAllowed")]
    pub unsafe fn isVoIPAllowed() -> bool;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKVoiceChat")]
    pub type GKVoiceChat;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "use setPlayerVoiceChatStateDidChangeHandler:"]
    #[objc2::method(sel = "playerStateUpdateHandler")]
    pub unsafe fn playerStateUpdateHandler(
        &self,
    ) -> NonNull<Block<(NonNull<NSString>, GKVoiceChatPlayerState), ()>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "use setPlayerVoiceChatStateDidChangeHandler:"]
    #[objc2::method(sel = "setPlayerStateUpdateHandler:")]
    pub unsafe fn setPlayerStateUpdateHandler(
        &self,
        player_state_update_handler: &Block<(NonNull<NSString>, GKVoiceChatPlayerState), ()>,
    );
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKVoiceChat")]
    pub type GKVoiceChat;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[deprecated = "use players"]
    #[objc2::method(sel = "playerIDs", managed = "Other")]
    pub unsafe fn playerIDs(&self) -> Option<Id<NSArray<NSString>>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "This is never invoked and its implementation does nothing, use setPlayer:muted:"]
    #[objc2::method(sel = "setMute:forPlayer:")]
    pub unsafe fn setMute_forPlayer(&self, is_muted: bool, player_id: &NSString);
}
