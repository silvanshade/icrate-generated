//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum GKConnectionState {
    GKConnectionStateNotConnected = 0,
    GKConnectionStateConnected = 1,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum GKTransportType {
    GKTransportTypeUnreliable = 0,
    GKTransportTypeReliable = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated = "For real-time matches, use GKMatchmakerViewController. For turn-based matches, use GKTurnBasedMatchmakerViewController."]
    #[cfg(feature = "GameKit_GKGameSession")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKGameSession;
}

#[cfg(feature = "GameKit_GKGameSession")]
unsafe impl NSObjectProtocol for GKGameSession {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameSession")]
    #[deprecated = "For real-time matches, use GKMatchmakerViewController. For turn-based matches, use GKTurnBasedMatchmakerViewController."]
    pub type GKGameSession;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "identifier", managed = "Other")]
    pub unsafe fn identifier(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[cfg(feature = "GameKit_GKCloudPlayer")]
    #[objc2::method(sel = "owner", managed = "Other")]
    pub unsafe fn owner(&self) -> Id<GKCloudPlayer>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "GameKit_GKCloudPlayer"))]
    #[objc2::method(sel = "players", managed = "Other")]
    pub unsafe fn players(&self) -> Id<NSArray<GKCloudPlayer>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "lastModifiedDate", managed = "Other")]
    pub unsafe fn lastModifiedDate(&self) -> Id<NSDate>;

    #[cfg(feature = "GameKit_GKCloudPlayer")]
    #[objc2::method(sel = "lastModifiedPlayer", managed = "Other")]
    pub unsafe fn lastModifiedPlayer(&self) -> Id<GKCloudPlayer>;

    #[objc2::method(sel = "maxNumberOfConnectedPlayers")]
    pub unsafe fn maxNumberOfConnectedPlayers(&self) -> NSInteger;

    #[cfg(all(feature = "Foundation_NSArray", feature = "GameKit_GKCloudPlayer"))]
    #[objc2::method(sel = "badgedPlayers", managed = "Other")]
    pub unsafe fn badgedPlayers(&self) -> Id<NSArray<GKCloudPlayer>>;

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    #[objc2::method(
        sel = "createSessionInContainer:withTitle:maxConnectedPlayers:completionHandler:"
    )]
    pub unsafe fn createSessionInContainer_withTitle_maxConnectedPlayers_completionHandler(
        container_name: Option<&NSString>,
        title: &NSString,
        max_players: NSInteger,
        completion_handler: &Block<(*mut GKGameSession, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "loadSessionsInContainer:completionHandler:")]
    pub unsafe fn loadSessionsInContainer_completionHandler(
        container_name: Option<&NSString>,
        completion_handler: &Block<(*mut NSArray<GKGameSession>, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "loadSessionWithIdentifier:completionHandler:")]
    pub unsafe fn loadSessionWithIdentifier_completionHandler(
        identifier: &NSString,
        completion_handler: &Block<(*mut GKGameSession, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "removeSessionWithIdentifier:completionHandler:")]
    pub unsafe fn removeSessionWithIdentifier_completionHandler(
        identifier: &NSString,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSURL"))]
    #[objc2::method(sel = "getShareURLWithCompletionHandler:")]
    pub unsafe fn getShareURLWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSURL, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSData", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "loadDataWithCompletionHandler:")]
    pub unsafe fn loadDataWithCompletionHandler(
        &self,
        completion_handler: &Block<(*mut NSData, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSData", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "saveData:completionHandler:")]
    pub unsafe fn saveData_completionHandler(
        &self,
        data: &NSData,
        completion_handler: &Block<(*mut NSData, *mut NSError), ()>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "setConnectionState:completionHandler:")]
    pub unsafe fn setConnectionState_completionHandler(
        &self,
        state: GKConnectionState,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(all(feature = "Foundation_NSArray", feature = "GameKit_GKCloudPlayer"))]
    #[objc2::method(sel = "playersWithConnectionState:", managed = "Other")]
    pub unsafe fn playersWithConnectionState(
        &self,
        state: GKConnectionState,
    ) -> Id<NSArray<GKCloudPlayer>>;

    #[cfg(all(feature = "Foundation_NSData", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "sendData:withTransportType:completionHandler:")]
    pub unsafe fn sendData_withTransportType_completionHandler(
        &self,
        data: &NSData,
        transport: GKTransportType,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSData",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString",
        feature = "GameKit_GKCloudPlayer"
    ))]
    #[objc2::method(
        sel = "sendMessageWithLocalizedFormatKey:arguments:data:toPlayers:badgePlayers:completionHandler:"
    )]
    pub unsafe fn sendMessageWithLocalizedFormatKey_arguments_data_toPlayers_badgePlayers_completionHandler(
        &self,
        key: &NSString,
        arguments: &NSArray<NSString>,
        data: Option<&NSData>,
        players: &NSArray<GKCloudPlayer>,
        badge_players: bool,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "GameKit_GKCloudPlayer"
    ))]
    #[objc2::method(sel = "clearBadgeForPlayers:completionHandler:")]
    pub unsafe fn clearBadgeForPlayers_completionHandler(
        &self,
        players: &NSArray<GKCloudPlayer>,
        completion_handler: &Block<(*mut NSError,), ()>,
    );
}
