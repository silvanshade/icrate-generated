//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum GKGameCenterViewControllerState {
    GKGameCenterViewControllerStateDefault = -1,
    GKGameCenterViewControllerStateLeaderboards = 0,
    GKGameCenterViewControllerStateAchievements = 1,
    GKGameCenterViewControllerStateChallenges = 2,
    GKGameCenterViewControllerStateLocalPlayerProfile = 3,
    GKGameCenterViewControllerStateDashboard = 4,
    GKGameCenterViewControllerStateLocalPlayerFriendsList = 5,
}

#[objc2::interface(
    unsafe super = NSViewController,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKGameCenterViewController;
}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl GKViewController for GKGameCenterViewController {}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl NSCoding for GKGameCenterViewController {}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl NSEditor for GKGameCenterViewController {}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl NSObjectProtocol for GKGameCenterViewController {}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl NSSeguePerforming for GKGameCenterViewController {}

#[cfg(feature = "GameKit_GKGameCenterViewController")]
unsafe impl NSUserInterfaceItemIdentification for GKGameCenterViewController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    pub type GKGameCenterViewController;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    pub type GKGameCenterViewController;

    #[objc2::method(sel = "gameCenterDelegate", managed = "Other")]
    pub unsafe fn gameCenterDelegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn GKGameCenterControllerDelegate>>>;

    #[objc2::method(sel = "setGameCenterDelegate:")]
    pub unsafe fn setGameCenterDelegate(
        &self,
        game_center_delegate: Option<&ProtocolObject<dyn GKGameCenterControllerDelegate>>,
    );

    #[objc2::method(sel = "initWithState:", managed = "Init")]
    pub unsafe fn initWithState(
        this: Option<Allocated<Self>>,
        state: GKGameCenterViewControllerState,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithLeaderboardID:playerScope:timeScope:", managed = "Init")]
    pub unsafe fn initWithLeaderboardID_playerScope_timeScope(
        this: Option<Allocated<Self>>,
        leaderboard_id: &NSString,
        player_scope: GKLeaderboardPlayerScope,
        time_scope: GKLeaderboardTimeScope,
    ) -> Id<Self>;

    #[cfg(feature = "GameKit_GKLeaderboard")]
    #[objc2::method(sel = "initWithLeaderboard:playerScope:", managed = "Init")]
    pub unsafe fn initWithLeaderboard_playerScope(
        this: Option<Allocated<Self>>,
        leaderboard: &GKLeaderboard,
        player_scope: GKLeaderboardPlayerScope,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithAchievementID:", managed = "Init")]
    pub unsafe fn initWithAchievementID(
        this: Option<Allocated<Self>>,
        achievement_id: &NSString,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    pub type GKGameCenterViewController;

    #[deprecated = "Use -initWithState: instead"]
    #[objc2::method(sel = "viewState")]
    pub unsafe fn viewState(&self) -> GKGameCenterViewControllerState;

    #[deprecated = "Use -initWithState: instead"]
    #[objc2::method(sel = "setViewState:")]
    pub unsafe fn setViewState(&self, view_state: GKGameCenterViewControllerState);

    #[deprecated = "Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "leaderboardTimeScope")]
    pub unsafe fn leaderboardTimeScope(&self) -> GKLeaderboardTimeScope;

    #[deprecated = "Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "setLeaderboardTimeScope:")]
    pub unsafe fn setLeaderboardTimeScope(&self, leaderboard_time_scope: GKLeaderboardTimeScope);

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "leaderboardIdentifier", managed = "Other")]
    pub unsafe fn leaderboardIdentifier(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "setLeaderboardIdentifier:")]
    pub unsafe fn setLeaderboardIdentifier(&self, leaderboard_identifier: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "GKGameCenterViewController's leaderboardCategory property is deprecated. Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "leaderboardCategory", managed = "Other")]
    pub unsafe fn leaderboardCategory(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "GKGameCenterViewController's leaderboardCategory property is deprecated. Use -initWithLeaderboard: instead"]
    #[objc2::method(sel = "setLeaderboardCategory:")]
    pub unsafe fn setLeaderboardCategory(&self, leaderboard_category: Option<&NSString>);
}

#[objc2::protocol]
pub unsafe trait GKGameCenterControllerDelegate: NSObjectProtocol {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    #[objc2::method(sel = "gameCenterViewControllerDidFinish:")]
    unsafe fn gameCenterViewControllerDidFinish(
        &self,
        game_center_view_controller: &GKGameCenterViewController,
    );
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSViewController`
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKGameCenterViewController")]
    pub type GKGameCenterViewController;

    #[cfg(feature = "Foundation_NSBundle")]
    #[objc2::method(sel = "initWithNibName:bundle:", managed = "Init")]
    pub unsafe fn initWithNibName_bundle(
        this: Option<Allocated<Self>>,
        nib_name_or_nil: Option<&NSNibName>,
        nib_bundle_or_nil: Option<&NSBundle>,
    ) -> Id<Self>;
}
