//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated = "Replaced by GKLeaderboardScore"]
    #[cfg(feature = "GameKit_GKScore")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKScore;
}

#[cfg(feature = "GameKit_GKScore")]
unsafe impl NSCoding for GKScore {}

#[cfg(feature = "GameKit_GKScore")]
unsafe impl NSObjectProtocol for GKScore {}

#[cfg(feature = "GameKit_GKScore")]
unsafe impl NSSecureCoding for GKScore {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKScore")]
    #[deprecated = "Replaced by GKLeaderboardScore"]
    pub type GKScore;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithLeaderboardIdentifier:", managed = "Init")]
    pub unsafe fn initWithLeaderboardIdentifier(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSString", feature = "GameKit_GKPlayer"))]
    #[objc2::method(sel = "initWithLeaderboardIdentifier:player:", managed = "Init")]
    pub unsafe fn initWithLeaderboardIdentifier_player(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
        player: &GKPlayer,
    ) -> Id<Self>;

    #[objc2::method(sel = "value")]
    pub unsafe fn value(&self) -> i64;

    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: i64);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "formattedValue", managed = "Other")]
    pub unsafe fn formattedValue(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "leaderboardIdentifier", managed = "Other")]
    pub unsafe fn leaderboardIdentifier(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLeaderboardIdentifier:")]
    pub unsafe fn setLeaderboardIdentifier(&self, leaderboard_identifier: &NSString);

    #[objc2::method(sel = "context")]
    pub unsafe fn context(&self) -> u64;

    #[objc2::method(sel = "setContext:")]
    pub unsafe fn setContext(&self, context: u64);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "date", managed = "Other")]
    pub unsafe fn date(&self) -> Id<NSDate>;

    #[cfg(feature = "GameKit_GKPlayer")]
    #[objc2::method(sel = "player", managed = "Other")]
    pub unsafe fn player(&self) -> Option<Id<GKPlayer>>;

    #[objc2::method(sel = "rank")]
    pub unsafe fn rank(&self) -> NSInteger;

    #[objc2::method(sel = "shouldSetDefaultLeaderboard")]
    pub unsafe fn shouldSetDefaultLeaderboard(&self) -> bool;

    #[objc2::method(sel = "setShouldSetDefaultLeaderboard:")]
    pub unsafe fn setShouldSetDefaultLeaderboard(&self, should_set_default_leaderboard: bool);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "reportScores:withCompletionHandler:")]
    pub unsafe fn reportScores_withCompletionHandler(
        scores: &NSArray<GKScore>,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKScore")]
    pub type GKScore;

    #[cfg(feature = "Foundation_NSError")]
    #[deprecated = "Use +reportScores:withCompletionhandler: instead"]
    #[objc2::method(sel = "reportScoreWithCompletionHandler:")]
    pub unsafe fn reportScoreWithCompletionHandler(
        &self,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use initWithLeaderboardIdentifier: instead"]
    #[objc2::method(sel = "initWithCategory:", managed = "Init")]
    pub unsafe fn initWithCategory(
        this: Option<Allocated<Self>>,
        category: Option<&NSString>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use leaderboardIdentifier instead"]
    #[objc2::method(sel = "category", managed = "Other")]
    pub unsafe fn category(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Use leaderboardIdentifier instead"]
    #[objc2::method(sel = "setCategory:")]
    pub unsafe fn setCategory(&self, category: Option<&NSString>);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKScore")]
    pub type GKScore;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithLeaderboardIdentifier:forPlayer:", managed = "Init")]
    pub unsafe fn initWithLeaderboardIdentifier_forPlayer(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
        player_id: &NSString,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "use player instead"]
    #[objc2::method(sel = "playerID", managed = "Other")]
    pub unsafe fn playerID(&self) -> Option<Id<NSString>>;
}
