//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[objc2::interface(
    unsafe super = NSViewController,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "GameKit_GKChallengesViewController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKChallengesViewController;
}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl GKViewController for GKChallengesViewController {}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl NSCoding for GKChallengesViewController {}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl NSEditor for GKChallengesViewController {}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl NSObjectProtocol for GKChallengesViewController {}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl NSSeguePerforming for GKChallengesViewController {}

#[cfg(feature = "GameKit_GKChallengesViewController")]
unsafe impl NSUserInterfaceItemIdentification for GKChallengesViewController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKChallengesViewController")]
    #[deprecated]
    pub type GKChallengesViewController;

    #[objc2::method(sel = "challengeDelegate", managed = "Other")]
    pub unsafe fn challengeDelegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn GKChallengesViewControllerDelegate>>>;

    #[objc2::method(sel = "setChallengeDelegate:")]
    pub unsafe fn setChallengeDelegate(
        &self,
        challenge_delegate: Option<&ProtocolObject<dyn GKChallengesViewControllerDelegate>>,
    );
}

#[objc2::protocol]
pub unsafe trait GKChallengesViewControllerDelegate {
    #[cfg(feature = "GameKit_GKChallengesViewController")]
    #[objc2::method(sel = "challengesViewControllerDidFinish:")]
    unsafe fn challengesViewControllerDidFinish(
        &self,
        view_controller: Option<&GKChallengesViewController>,
    );
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSViewController`
    #[cfg(feature = "GameKit_GKChallengesViewController")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKChallengesViewController")]
    pub type GKChallengesViewController;

    #[cfg(feature = "Foundation_NSBundle")]
    #[objc2::method(sel = "initWithNibName:bundle:", managed = "Init")]
    pub unsafe fn initWithNibName_bundle(
        this: Option<Allocated<Self>>,
        nib_name_or_nil: Option<&NSNibName>,
        nib_bundle_or_nil: Option<&NSBundle>,
    ) -> Id<Self>;
}
