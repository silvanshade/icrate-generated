//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::GameKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum GKAccessPointLocation {
    GKAccessPointLocationTopLeading = 0,
    GKAccessPointLocationTopTrailing = 1,
    GKAccessPointLocationBottomLeading = 2,
    GKAccessPointLocationBottomTrailing = 3,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKAccessPoint")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type GKAccessPoint;
}

#[cfg(feature = "GameKit_GKAccessPoint")]
unsafe impl NSObjectProtocol for GKAccessPoint {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "GameKit_GKAccessPoint")]
    pub type GKAccessPoint;

    #[objc2::method(sel = "shared", managed = "Other")]
    pub unsafe fn shared() -> Id<GKAccessPoint>;

    #[objc2::method(sel = "isActive")]
    pub unsafe fn isActive(&self) -> bool;

    #[objc2::method(sel = "setActive:")]
    pub unsafe fn setActive(&self, active: bool);

    #[objc2::method(sel = "isFocused")]
    pub unsafe fn isFocused(&self) -> bool;

    #[objc2::method(sel = "setFocused:")]
    pub unsafe fn setFocused(&self, focused: bool);

    #[objc2::method(sel = "isVisible")]
    pub unsafe fn isVisible(&self) -> bool;

    #[objc2::method(sel = "isPresentingGameCenter")]
    pub unsafe fn isPresentingGameCenter(&self) -> bool;

    #[objc2::method(sel = "showHighlights")]
    pub unsafe fn showHighlights(&self) -> bool;

    #[objc2::method(sel = "setShowHighlights:")]
    pub unsafe fn setShowHighlights(&self, show_highlights: bool);

    #[objc2::method(sel = "location")]
    pub unsafe fn location(&self) -> GKAccessPointLocation;

    #[objc2::method(sel = "setLocation:")]
    pub unsafe fn setLocation(&self, location: GKAccessPointLocation);

    #[objc2::method(sel = "frameInScreenCoordinates")]
    pub unsafe fn frameInScreenCoordinates(&self) -> NSRect;

    #[cfg(feature = "AppKit_NSWindow")]
    #[objc2::method(sel = "parentWindow", managed = "Other")]
    pub unsafe fn parentWindow(&self) -> Option<Id<NSWindow>>;

    #[cfg(feature = "AppKit_NSWindow")]
    #[objc2::method(sel = "setParentWindow:")]
    pub unsafe fn setParentWindow(&self, parent_window: Option<&NSWindow>);

    #[objc2::method(sel = "triggerAccessPointWithHandler:")]
    pub unsafe fn triggerAccessPointWithHandler(&self, handler: &Block<(), ()>);

    #[objc2::method(sel = "triggerAccessPointWithState:handler:")]
    pub unsafe fn triggerAccessPointWithState_handler(
        &self,
        state: GKGameCenterViewControllerState,
        handler: &Block<(), ()>,
    );
}
