//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MediaPlayer::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum MPMediaPlaylistAttribute {
    MPMediaPlaylistAttributeNone = 0,
    MPMediaPlaylistAttributeOnTheGo = 1 << 0,
    MPMediaPlaylistAttributeSmart = 1 << 1,
    MPMediaPlaylistAttributeGenius = 1 << 2,
}

extern_static!(MPMediaPlaylistPropertyPersistentID: &'static NSString);

extern_static!(MPMediaPlaylistPropertyCloudGlobalID: &'static NSString);

extern_static!(MPMediaPlaylistPropertyName: &'static NSString);

extern_static!(MPMediaPlaylistPropertyPlaylistAttributes: &'static NSString);

extern_static!(MPMediaPlaylistPropertySeedItems: &'static NSString);

extern_static!(MPMediaPlaylistPropertyDescriptionText: &'static NSString);

extern_static!(MPMediaPlaylistPropertyAuthorDisplayName: &'static NSString);

#[objc2::interface(
    unsafe super = MPMediaItemCollection,
    unsafe inherits = [
        MPMediaEntity,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMediaPlaylist;
}

#[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
unsafe impl NSCoding for MPMediaPlaylist {}

#[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
unsafe impl NSObjectProtocol for MPMediaPlaylist {}

#[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
unsafe impl NSSecureCoding for MPMediaPlaylist {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
    pub type MPMediaPlaylist;

    #[objc2::method(sel = "persistentID")]
    pub unsafe fn persistentID(&self) -> MPMediaEntityPersistentID;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "cloudGlobalID", managed = "Other")]
    pub unsafe fn cloudGlobalID(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "playlistAttributes")]
    pub unsafe fn playlistAttributes(&self) -> MPMediaPlaylistAttribute;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MediaPlayer_MPMediaItem"))]
    #[objc2::method(sel = "seedItems", managed = "Other")]
    pub unsafe fn seedItems(&self) -> Option<Id<NSArray<MPMediaItem>>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "descriptionText", managed = "Other")]
    pub unsafe fn descriptionText(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "authorDisplayName", managed = "Other")]
    pub unsafe fn authorDisplayName(&self) -> Option<Id<NSString>>;

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "addItemWithProductID:completionHandler:")]
    pub unsafe fn addItemWithProductID_completionHandler(
        &self,
        product_id: &NSString,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "MediaPlayer_MPMediaItem"
    ))]
    #[objc2::method(sel = "addMediaItems:completionHandler:")]
    pub unsafe fn addMediaItems_completionHandler(
        &self,
        media_items: &NSArray<MPMediaItem>,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMediaPlaylistCreationMetadata")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMediaPlaylistCreationMetadata;
}

#[cfg(feature = "MediaPlayer_MPMediaPlaylistCreationMetadata")]
unsafe impl NSObjectProtocol for MPMediaPlaylistCreationMetadata {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMediaPlaylistCreationMetadata")]
    pub type MPMediaPlaylistCreationMetadata;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithName:", managed = "Init")]
    pub unsafe fn initWithName(this: Option<Allocated<Self>>, name: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "authorDisplayName", managed = "Other")]
    pub unsafe fn authorDisplayName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setAuthorDisplayName:")]
    pub unsafe fn setAuthorDisplayName(&self, author_display_name: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "descriptionText", managed = "Other")]
    pub unsafe fn descriptionText(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setDescriptionText:")]
    pub unsafe fn setDescriptionText(&self, description_text: &NSString);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MPMediaItemCollection`
    #[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMediaPlaylist")]
    pub type MPMediaPlaylist;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MediaPlayer_MPMediaItem"))]
    #[objc2::method(sel = "initWithItems:", managed = "Init")]
    pub unsafe fn initWithItems(
        this: Option<Allocated<Self>>,
        items: &NSArray<MPMediaItem>,
    ) -> Id<Self>;
}
