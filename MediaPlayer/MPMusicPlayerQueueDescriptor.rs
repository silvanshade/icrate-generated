//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MediaPlayer::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerQueueDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerQueueDescriptor;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerQueueDescriptor")]
unsafe impl NSObjectProtocol for MPMusicPlayerQueueDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerQueueDescriptor")]
    pub type MPMusicPlayerQueueDescriptor;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

#[objc2::interface(
    unsafe super = MPMusicPlayerQueueDescriptor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerMediaItemQueueDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerMediaItemQueueDescriptor;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerMediaItemQueueDescriptor")]
unsafe impl NSObjectProtocol for MPMusicPlayerMediaItemQueueDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerMediaItemQueueDescriptor")]
    pub type MPMusicPlayerMediaItemQueueDescriptor;

    #[cfg(feature = "MediaPlayer_MPMediaQuery")]
    #[objc2::method(sel = "initWithQuery:", managed = "Init")]
    pub unsafe fn initWithQuery(this: Option<Allocated<Self>>, query: &MPMediaQuery) -> Id<Self>;

    #[cfg(feature = "MediaPlayer_MPMediaItemCollection")]
    #[objc2::method(sel = "initWithItemCollection:", managed = "Init")]
    pub unsafe fn initWithItemCollection(
        this: Option<Allocated<Self>>,
        item_collection: &MPMediaItemCollection,
    ) -> Id<Self>;

    #[cfg(feature = "MediaPlayer_MPMediaQuery")]
    #[objc2::method(sel = "query", managed = "Other")]
    pub unsafe fn query(&self) -> Id<MPMediaQuery>;

    #[cfg(feature = "MediaPlayer_MPMediaItemCollection")]
    #[objc2::method(sel = "itemCollection", managed = "Other")]
    pub unsafe fn itemCollection(&self) -> Id<MPMediaItemCollection>;

    #[cfg(feature = "MediaPlayer_MPMediaItem")]
    #[objc2::method(sel = "startItem", managed = "Other")]
    pub unsafe fn startItem(&self) -> Option<Id<MPMediaItem>>;

    #[cfg(feature = "MediaPlayer_MPMediaItem")]
    #[objc2::method(sel = "setStartItem:")]
    pub unsafe fn setStartItem(&self, start_item: Option<&MPMediaItem>);

    #[cfg(feature = "MediaPlayer_MPMediaItem")]
    #[objc2::method(sel = "setStartTime:forItem:")]
    pub unsafe fn setStartTime_forItem(&self, start_time: NSTimeInterval, media_item: &MPMediaItem);

    #[cfg(feature = "MediaPlayer_MPMediaItem")]
    #[objc2::method(sel = "setEndTime:forItem:")]
    pub unsafe fn setEndTime_forItem(&self, end_time: NSTimeInterval, media_item: &MPMediaItem);
}

#[objc2::interface(
    unsafe super = MPMusicPlayerQueueDescriptor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerStoreQueueDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerStoreQueueDescriptor;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerStoreQueueDescriptor")]
unsafe impl NSObjectProtocol for MPMusicPlayerStoreQueueDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerStoreQueueDescriptor")]
    pub type MPMusicPlayerStoreQueueDescriptor;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithStoreIDs:", managed = "Init")]
    pub unsafe fn initWithStoreIDs(
        this: Option<Allocated<Self>>,
        store_i_ds: &NSArray<NSString>,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "storeIDs", managed = "Other")]
    pub unsafe fn storeIDs(&self) -> Option<Id<NSArray<NSString>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "setStoreIDs:")]
    pub unsafe fn setStoreIDs(&self, store_i_ds: Option<&NSArray<NSString>>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "startItemID", managed = "Other")]
    pub unsafe fn startItemID(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setStartItemID:")]
    pub unsafe fn setStartItemID(&self, start_item_id: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setStartTime:forItemWithStoreID:")]
    pub unsafe fn setStartTime_forItemWithStoreID(
        &self,
        start_time: NSTimeInterval,
        store_id: &NSString,
    );

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setEndTime:forItemWithStoreID:")]
    pub unsafe fn setEndTime_forItemWithStoreID(
        &self,
        end_time: NSTimeInterval,
        store_id: &NSString,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerPlayParameters;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
unsafe impl NSObjectProtocol for MPMusicPlayerPlayParameters {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    pub type MPMusicPlayerPlayParameters;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithDictionary:", managed = "Init")]
    pub unsafe fn initWithDictionary(
        this: Option<Allocated<Self>>,
        dictionary: &NSDictionary<NSString, Object>,
    ) -> Option<Id<Self>>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "dictionary", managed = "Other")]
    pub unsafe fn dictionary(&self) -> Id<NSDictionary<NSString, Object>>;
}

#[objc2::interface(
    unsafe super = MPMusicPlayerQueueDescriptor,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParametersQueueDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerPlayParametersQueueDescriptor;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParametersQueueDescriptor")]
unsafe impl NSObjectProtocol for MPMusicPlayerPlayParametersQueueDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParametersQueueDescriptor")]
    pub type MPMusicPlayerPlayParametersQueueDescriptor;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "MediaPlayer_MPMusicPlayerPlayParameters"
    ))]
    #[objc2::method(sel = "initWithPlayParametersQueue:", managed = "Init")]
    pub unsafe fn initWithPlayParametersQueue(
        this: Option<Allocated<Self>>,
        play_parameters_queue: &NSArray<MPMusicPlayerPlayParameters>,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "MediaPlayer_MPMusicPlayerPlayParameters"
    ))]
    #[objc2::method(sel = "playParametersQueue", managed = "Other")]
    pub unsafe fn playParametersQueue(&self) -> Id<NSArray<MPMusicPlayerPlayParameters>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "MediaPlayer_MPMusicPlayerPlayParameters"
    ))]
    #[objc2::method(sel = "setPlayParametersQueue:")]
    pub unsafe fn setPlayParametersQueue(
        &self,
        play_parameters_queue: &NSArray<MPMusicPlayerPlayParameters>,
    );

    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    #[objc2::method(sel = "startItemPlayParameters", managed = "Other")]
    pub unsafe fn startItemPlayParameters(&self) -> Option<Id<MPMusicPlayerPlayParameters>>;

    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    #[objc2::method(sel = "setStartItemPlayParameters:")]
    pub unsafe fn setStartItemPlayParameters(
        &self,
        start_item_play_parameters: Option<&MPMusicPlayerPlayParameters>,
    );

    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    #[objc2::method(sel = "setStartTime:forItemWithPlayParameters:")]
    pub unsafe fn setStartTime_forItemWithPlayParameters(
        &self,
        start_time: NSTimeInterval,
        play_parameters: &MPMusicPlayerPlayParameters,
    );

    #[cfg(feature = "MediaPlayer_MPMusicPlayerPlayParameters")]
    #[objc2::method(sel = "setEndTime:forItemWithPlayParameters:")]
    pub unsafe fn setEndTime_forItemWithPlayParameters(
        &self,
        end_time: NSTimeInterval,
        play_parameters: &MPMusicPlayerPlayParameters,
    );
}
