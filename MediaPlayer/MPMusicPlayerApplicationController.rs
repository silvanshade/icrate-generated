//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MediaPlayer::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerControllerQueue")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerControllerQueue;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerControllerQueue")]
unsafe impl NSObjectProtocol for MPMusicPlayerControllerQueue {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerControllerQueue")]
    pub type MPMusicPlayerControllerQueue;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MediaPlayer_MPMediaItem"))]
    #[objc2::method(sel = "items", managed = "Other")]
    pub unsafe fn items(&self) -> Id<NSArray<MPMediaItem>>;
}

#[objc2::interface(
    unsafe super = MPMusicPlayerControllerQueue,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerControllerMutableQueue")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerControllerMutableQueue;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerControllerMutableQueue")]
unsafe impl NSObjectProtocol for MPMusicPlayerControllerMutableQueue {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerControllerMutableQueue")]
    pub type MPMusicPlayerControllerMutableQueue;

    #[cfg(all(
        feature = "MediaPlayer_MPMediaItem",
        feature = "MediaPlayer_MPMusicPlayerQueueDescriptor"
    ))]
    #[objc2::method(sel = "insertQueueDescriptor:afterItem:")]
    pub unsafe fn insertQueueDescriptor_afterItem(
        &self,
        queue_descriptor: &MPMusicPlayerQueueDescriptor,
        after_item: Option<&MPMediaItem>,
    );

    #[cfg(feature = "MediaPlayer_MPMediaItem")]
    #[objc2::method(sel = "removeItem:")]
    pub unsafe fn removeItem(&self, item: &MPMediaItem);
}

#[objc2::interface(
    unsafe super = MPMusicPlayerController,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerApplicationController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPMusicPlayerApplicationController;
}

#[cfg(feature = "MediaPlayer_MPMusicPlayerApplicationController")]
unsafe impl MPMediaPlayback for MPMusicPlayerApplicationController {}

#[cfg(feature = "MediaPlayer_MPMusicPlayerApplicationController")]
unsafe impl NSObjectProtocol for MPMusicPlayerApplicationController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPMusicPlayerApplicationController")]
    pub type MPMusicPlayerApplicationController;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "MediaPlayer_MPMusicPlayerControllerMutableQueue",
        feature = "MediaPlayer_MPMusicPlayerControllerQueue"
    ))]
    #[objc2::method(sel = "performQueueTransaction:completionHandler:")]
    pub unsafe fn performQueueTransaction_completionHandler(
        &self,
        queue_transaction: &Block<(NonNull<MPMusicPlayerControllerMutableQueue>,), ()>,
        completion_handler: &Block<(NonNull<MPMusicPlayerControllerQueue>, *mut NSError), ()>,
    );
}

extern_static!(MPMusicPlayerControllerQueueDidChangeNotification: &'static NSString);
