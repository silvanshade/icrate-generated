//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MediaPlayer::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum MPNowPlayingInfoMediaType {
    MPNowPlayingInfoMediaTypeNone = 0,
    MPNowPlayingInfoMediaTypeAudio = 1,
    MPNowPlayingInfoMediaTypeVideo = 2,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum MPNowPlayingPlaybackState {
    MPNowPlayingPlaybackStateUnknown = 0,
    MPNowPlayingPlaybackStatePlaying = 1,
    MPNowPlayingPlaybackStatePaused = 2,
    MPNowPlayingPlaybackStateStopped = 3,
    MPNowPlayingPlaybackStateInterrupted = 4,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPNowPlayingInfoCenter")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MPNowPlayingInfoCenter;
}

#[cfg(feature = "MediaPlayer_MPNowPlayingInfoCenter")]
unsafe impl NSObjectProtocol for MPNowPlayingInfoCenter {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MediaPlayer_MPNowPlayingInfoCenter")]
    pub type MPNowPlayingInfoCenter;

    #[objc2::method(sel = "defaultCenter", managed = "Other")]
    pub unsafe fn defaultCenter() -> Id<MPNowPlayingInfoCenter>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "nowPlayingInfo", managed = "Other")]
    pub unsafe fn nowPlayingInfo(&self) -> Option<Id<NSDictionary<NSString, Object>>>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "setNowPlayingInfo:")]
    pub unsafe fn setNowPlayingInfo(
        &self,
        now_playing_info: Option<&NSDictionary<NSString, Object>>,
    );

    #[objc2::method(sel = "playbackState")]
    pub unsafe fn playbackState(&self) -> MPNowPlayingPlaybackState;

    #[objc2::method(sel = "setPlaybackState:")]
    pub unsafe fn setPlaybackState(&self, playback_state: MPNowPlayingPlaybackState);
}

extern_static!(MPNowPlayingInfoPropertyElapsedPlaybackTime: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyPlaybackRate: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyDefaultPlaybackRate: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyPlaybackQueueIndex: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyPlaybackQueueCount: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyChapterNumber: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyChapterCount: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyIsLiveStream: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyAvailableLanguageOptions: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyCurrentLanguageOptions: &'static NSString);

extern_static!(MPNowPlayingInfoCollectionIdentifier: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyExternalContentIdentifier: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyExternalUserProfileIdentifier: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyServiceIdentifier: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyPlaybackProgress: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyMediaType: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyAssetURL: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyCurrentPlaybackDate: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyAdTimeRanges: &'static NSString);

extern_static!(MPNowPlayingInfoPropertyCreditsStartTime: &'static NSString);
