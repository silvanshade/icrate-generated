//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[objc2::protocol]
pub unsafe trait MTLEvent: NSObjectProtocol {
    #[objc2::method(sel = "device", managed = "Other")]
    fn device(&self) -> Option<Id<ProtocolObject<dyn MTLDevice>>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    fn label(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    fn setLabel(&self, label: Option<&NSString>);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLSharedEventListener")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLSharedEventListener;
}

#[cfg(feature = "Metal_MTLSharedEventListener")]
unsafe impl NSObjectProtocol for MTLSharedEventListener {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLSharedEventListener")]
    pub type MTLSharedEventListener;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

pub type MTLSharedEventNotificationBlock =
    *mut Block<(NonNull<ProtocolObject<dyn MTLSharedEvent>>, u64), ()>;

#[objc2::protocol]
pub unsafe trait MTLSharedEvent: MTLEvent {
    #[cfg(feature = "Metal_MTLSharedEventListener")]
    #[objc2::method(sel = "notifyListener:atValue:block:")]
    unsafe fn notifyListener_atValue_block(
        &self,
        listener: &MTLSharedEventListener,
        value: u64,
        block: MTLSharedEventNotificationBlock,
    );

    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    #[objc2::method(sel = "newSharedEventHandle", managed = "New")]
    unsafe fn newSharedEventHandle(&self) -> Id<MTLSharedEventHandle>;

    #[objc2::method(sel = "signaledValue")]
    unsafe fn signaledValue(&self) -> u64;

    #[objc2::method(sel = "setSignaledValue:")]
    unsafe fn setSignaledValue(&self, signaled_value: u64);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLSharedEventHandle;
}

#[cfg(feature = "Metal_MTLSharedEventHandle")]
unsafe impl NSCoding for MTLSharedEventHandle {}

#[cfg(feature = "Metal_MTLSharedEventHandle")]
unsafe impl NSObjectProtocol for MTLSharedEventHandle {}

#[cfg(feature = "Metal_MTLSharedEventHandle")]
unsafe impl NSSecureCoding for MTLSharedEventHandle {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    pub type MTLSharedEventHandle;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub fn label(&self) -> Option<Id<NSString>>;
}
