//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[ns_enum]
#[underlying(NSUInteger)]
pub enum MTLAttributeFormat {
    MTLAttributeFormatInvalid = 0,
    MTLAttributeFormatUChar2 = 1,
    MTLAttributeFormatUChar3 = 2,
    MTLAttributeFormatUChar4 = 3,
    MTLAttributeFormatChar2 = 4,
    MTLAttributeFormatChar3 = 5,
    MTLAttributeFormatChar4 = 6,
    MTLAttributeFormatUChar2Normalized = 7,
    MTLAttributeFormatUChar3Normalized = 8,
    MTLAttributeFormatUChar4Normalized = 9,
    MTLAttributeFormatChar2Normalized = 10,
    MTLAttributeFormatChar3Normalized = 11,
    MTLAttributeFormatChar4Normalized = 12,
    MTLAttributeFormatUShort2 = 13,
    MTLAttributeFormatUShort3 = 14,
    MTLAttributeFormatUShort4 = 15,
    MTLAttributeFormatShort2 = 16,
    MTLAttributeFormatShort3 = 17,
    MTLAttributeFormatShort4 = 18,
    MTLAttributeFormatUShort2Normalized = 19,
    MTLAttributeFormatUShort3Normalized = 20,
    MTLAttributeFormatUShort4Normalized = 21,
    MTLAttributeFormatShort2Normalized = 22,
    MTLAttributeFormatShort3Normalized = 23,
    MTLAttributeFormatShort4Normalized = 24,
    MTLAttributeFormatHalf2 = 25,
    MTLAttributeFormatHalf3 = 26,
    MTLAttributeFormatHalf4 = 27,
    MTLAttributeFormatFloat = 28,
    MTLAttributeFormatFloat2 = 29,
    MTLAttributeFormatFloat3 = 30,
    MTLAttributeFormatFloat4 = 31,
    MTLAttributeFormatInt = 32,
    MTLAttributeFormatInt2 = 33,
    MTLAttributeFormatInt3 = 34,
    MTLAttributeFormatInt4 = 35,
    MTLAttributeFormatUInt = 36,
    MTLAttributeFormatUInt2 = 37,
    MTLAttributeFormatUInt3 = 38,
    MTLAttributeFormatUInt4 = 39,
    MTLAttributeFormatInt1010102Normalized = 40,
    MTLAttributeFormatUInt1010102Normalized = 41,
    MTLAttributeFormatUChar4Normalized_BGRA = 42,
    MTLAttributeFormatUChar = 45,
    MTLAttributeFormatChar = 46,
    MTLAttributeFormatUCharNormalized = 47,
    MTLAttributeFormatCharNormalized = 48,
    MTLAttributeFormatUShort = 49,
    MTLAttributeFormatShort = 50,
    MTLAttributeFormatUShortNormalized = 51,
    MTLAttributeFormatShortNormalized = 52,
    MTLAttributeFormatHalf = 53,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum MTLIndexType {
    MTLIndexTypeUInt16 = 0,
    MTLIndexTypeUInt32 = 1,
}

#[ns_enum]
#[underlying(NSUInteger)]
pub enum MTLStepFunction {
    MTLStepFunctionConstant = 0,
    MTLStepFunctionPerVertex = 1,
    MTLStepFunctionPerInstance = 2,
    MTLStepFunctionPerPatch = 3,
    MTLStepFunctionPerPatchControlPoint = 4,
    MTLStepFunctionThreadPositionInGridX = 5,
    MTLStepFunctionThreadPositionInGridY = 6,
    MTLStepFunctionThreadPositionInGridXIndexed = 7,
    MTLStepFunctionThreadPositionInGridYIndexed = 8,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLBufferLayoutDescriptor;
}

#[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
unsafe impl NSObjectProtocol for MTLBufferLayoutDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
    pub type MTLBufferLayoutDescriptor;

    #[objc2::method(sel = "stride")]
    pub fn stride(&self) -> NSUInteger;

    #[objc2::method(sel = "setStride:")]
    pub fn setStride(&self, stride: NSUInteger);

    #[objc2::method(sel = "stepFunction")]
    pub fn stepFunction(&self) -> MTLStepFunction;

    #[objc2::method(sel = "setStepFunction:")]
    pub fn setStepFunction(&self, step_function: MTLStepFunction);

    #[objc2::method(sel = "stepRate")]
    pub fn stepRate(&self) -> NSUInteger;

    #[objc2::method(sel = "setStepRate:")]
    pub fn setStepRate(&self, step_rate: NSUInteger);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLBufferLayoutDescriptorArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLBufferLayoutDescriptorArray;
}

#[cfg(feature = "Metal_MTLBufferLayoutDescriptorArray")]
unsafe impl NSObjectProtocol for MTLBufferLayoutDescriptorArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLBufferLayoutDescriptorArray")]
    pub type MTLBufferLayoutDescriptorArray;

    #[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
    #[objc2::method(sel = "objectAtIndexedSubscript:", managed = "Other")]
    pub unsafe fn objectAtIndexedSubscript(
        &self,
        index: NSUInteger,
    ) -> Id<MTLBufferLayoutDescriptor>;

    #[cfg(feature = "Metal_MTLBufferLayoutDescriptor")]
    #[objc2::method(sel = "setObject:atIndexedSubscript:")]
    pub unsafe fn setObject_atIndexedSubscript(
        &self,
        buffer_desc: Option<&MTLBufferLayoutDescriptor>,
        index: NSUInteger,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAttributeDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLAttributeDescriptor;
}

#[cfg(feature = "Metal_MTLAttributeDescriptor")]
unsafe impl NSObjectProtocol for MTLAttributeDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAttributeDescriptor")]
    pub type MTLAttributeDescriptor;

    #[objc2::method(sel = "format")]
    pub fn format(&self) -> MTLAttributeFormat;

    #[objc2::method(sel = "setFormat:")]
    pub fn setFormat(&self, format: MTLAttributeFormat);

    #[objc2::method(sel = "offset")]
    pub fn offset(&self) -> NSUInteger;

    #[objc2::method(sel = "setOffset:")]
    pub fn setOffset(&self, offset: NSUInteger);

    #[objc2::method(sel = "bufferIndex")]
    pub fn bufferIndex(&self) -> NSUInteger;

    #[objc2::method(sel = "setBufferIndex:")]
    pub unsafe fn setBufferIndex(&self, buffer_index: NSUInteger);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAttributeDescriptorArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLAttributeDescriptorArray;
}

#[cfg(feature = "Metal_MTLAttributeDescriptorArray")]
unsafe impl NSObjectProtocol for MTLAttributeDescriptorArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAttributeDescriptorArray")]
    pub type MTLAttributeDescriptorArray;

    #[cfg(feature = "Metal_MTLAttributeDescriptor")]
    #[objc2::method(sel = "objectAtIndexedSubscript:", managed = "Other")]
    pub unsafe fn objectAtIndexedSubscript(&self, index: NSUInteger) -> Id<MTLAttributeDescriptor>;

    #[cfg(feature = "Metal_MTLAttributeDescriptor")]
    #[objc2::method(sel = "setObject:atIndexedSubscript:")]
    pub unsafe fn setObject_atIndexedSubscript(
        &self,
        attribute_desc: Option<&MTLAttributeDescriptor>,
        index: NSUInteger,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLStageInputOutputDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLStageInputOutputDescriptor;
}

#[cfg(feature = "Metal_MTLStageInputOutputDescriptor")]
unsafe impl NSObjectProtocol for MTLStageInputOutputDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLStageInputOutputDescriptor")]
    pub type MTLStageInputOutputDescriptor;

    #[objc2::method(sel = "stageInputOutputDescriptor", managed = "Other")]
    pub fn stageInputOutputDescriptor() -> Id<MTLStageInputOutputDescriptor>;

    #[cfg(feature = "Metal_MTLBufferLayoutDescriptorArray")]
    #[objc2::method(sel = "layouts", managed = "Other")]
    pub fn layouts(&self) -> Id<MTLBufferLayoutDescriptorArray>;

    #[cfg(feature = "Metal_MTLAttributeDescriptorArray")]
    #[objc2::method(sel = "attributes", managed = "Other")]
    pub fn attributes(&self) -> Id<MTLAttributeDescriptorArray>;

    #[objc2::method(sel = "indexType")]
    pub fn indexType(&self) -> MTLIndexType;

    #[objc2::method(sel = "setIndexType:")]
    pub unsafe fn setIndexType(&self, index_type: MTLIndexType);

    #[objc2::method(sel = "indexBufferIndex")]
    pub fn indexBufferIndex(&self) -> NSUInteger;

    #[objc2::method(sel = "setIndexBufferIndex:")]
    pub unsafe fn setIndexBufferIndex(&self, index_buffer_index: NSUInteger);

    #[objc2::method(sel = "reset")]
    pub fn reset(&self);
}
