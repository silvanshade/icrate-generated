//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[objc2::protocol]
pub unsafe trait MTLCommandQueue: NSObjectProtocol {
    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    fn label(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    fn setLabel(&self, label: Option<&NSString>);

    #[objc2::method(sel = "device", managed = "Other")]
    fn device(&self) -> Id<ProtocolObject<dyn MTLDevice>>;

    #[objc2::method(sel = "commandBuffer", managed = "Other")]
    fn commandBuffer(&self) -> Option<Id<ProtocolObject<dyn MTLCommandBuffer>>>;

    #[cfg(feature = "Metal_MTLCommandBufferDescriptor")]
    #[objc2::method(sel = "commandBufferWithDescriptor:", managed = "Other")]
    unsafe fn commandBufferWithDescriptor(
        &self,
        descriptor: &MTLCommandBufferDescriptor,
    ) -> Option<Id<ProtocolObject<dyn MTLCommandBuffer>>>;

    #[objc2::method(sel = "commandBufferWithUnretainedReferences", managed = "Other")]
    unsafe fn commandBufferWithUnretainedReferences(
        &self,
    ) -> Option<Id<ProtocolObject<dyn MTLCommandBuffer>>>;

    #[deprecated = "Use MTLCaptureScope instead"]
    #[objc2::method(sel = "insertDebugCaptureBoundary")]
    unsafe fn insertDebugCaptureBoundary(&self);
}
