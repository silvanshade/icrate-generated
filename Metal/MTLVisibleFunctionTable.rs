//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLVisibleFunctionTableDescriptor;
}

#[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
unsafe impl NSObjectProtocol for MTLVisibleFunctionTableDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLVisibleFunctionTableDescriptor")]
    pub type MTLVisibleFunctionTableDescriptor;

    #[objc2::method(sel = "visibleFunctionTableDescriptor", managed = "Other")]
    pub unsafe fn visibleFunctionTableDescriptor() -> Id<MTLVisibleFunctionTableDescriptor>;

    #[objc2::method(sel = "functionCount")]
    pub unsafe fn functionCount(&self) -> NSUInteger;

    #[objc2::method(sel = "setFunctionCount:")]
    pub unsafe fn setFunctionCount(&self, function_count: NSUInteger);
}

#[objc2::protocol]
pub unsafe trait MTLVisibleFunctionTable: MTLResource {
    #[objc2::method(sel = "gpuResourceID")]
    unsafe fn gpuResourceID(&self) -> MTLResourceID;

    #[objc2::method(sel = "setFunction:atIndex:")]
    unsafe fn setFunction_atIndex(
        &self,
        function: Option<&ProtocolObject<dyn MTLFunctionHandle>>,
        index: NSUInteger,
    );

    #[objc2::method(sel = "setFunctions:withRange:")]
    unsafe fn setFunctions_withRange(
        &self,
        functions: NonNull<*const ProtocolObject<dyn MTLFunctionHandle>>,
        range: NSRange,
    );
}
