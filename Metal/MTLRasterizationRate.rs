//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLRasterizationRateSampleArray;
}

#[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
unsafe impl NSObjectProtocol for MTLRasterizationRateSampleArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    pub type MTLRasterizationRateSampleArray;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(sel = "objectAtIndexedSubscript:", managed = "Other")]
    pub unsafe fn objectAtIndexedSubscript(&self, index: NSUInteger) -> Id<NSNumber>;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(sel = "setObject:atIndexedSubscript:")]
    pub unsafe fn setObject_atIndexedSubscript(&self, value: &NSNumber, index: NSUInteger);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLRasterizationRateLayerDescriptor;
}

#[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
unsafe impl NSObjectProtocol for MTLRasterizationRateLayerDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    pub type MTLRasterizationRateLayerDescriptor;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "initWithSampleCount:", managed = "Init")]
    pub unsafe fn initWithSampleCount(
        this: Option<Allocated<Self>>,
        sample_count: MTLSize,
    ) -> Id<Self>;

    #[objc2::method(sel = "initWithSampleCount:horizontal:vertical:", managed = "Init")]
    pub unsafe fn initWithSampleCount_horizontal_vertical(
        this: Option<Allocated<Self>>,
        sample_count: MTLSize,
        horizontal: NonNull<c_float>,
        vertical: NonNull<c_float>,
    ) -> Id<Self>;

    #[objc2::method(sel = "maxSampleCount")]
    pub unsafe fn maxSampleCount(&self) -> MTLSize;

    #[objc2::method(sel = "horizontalSampleStorage")]
    pub unsafe fn horizontalSampleStorage(&self) -> NonNull<c_float>;

    #[objc2::method(sel = "verticalSampleStorage")]
    pub unsafe fn verticalSampleStorage(&self) -> NonNull<c_float>;

    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    #[objc2::method(sel = "horizontal", managed = "Other")]
    pub unsafe fn horizontal(&self) -> Id<MTLRasterizationRateSampleArray>;

    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    #[objc2::method(sel = "vertical", managed = "Other")]
    pub unsafe fn vertical(&self) -> Id<MTLRasterizationRateSampleArray>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    pub type MTLRasterizationRateLayerDescriptor;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLRasterizationRateLayerArray;
}

#[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
unsafe impl NSObjectProtocol for MTLRasterizationRateLayerArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    pub type MTLRasterizationRateLayerArray;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(sel = "objectAtIndexedSubscript:", managed = "Other")]
    pub unsafe fn objectAtIndexedSubscript(
        &self,
        layer_index: NSUInteger,
    ) -> Option<Id<MTLRasterizationRateLayerDescriptor>>;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(sel = "setObject:atIndexedSubscript:")]
    pub unsafe fn setObject_atIndexedSubscript(
        &self,
        layer: Option<&MTLRasterizationRateLayerDescriptor>,
        layer_index: NSUInteger,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLRasterizationRateMapDescriptor;
}

#[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
unsafe impl NSObjectProtocol for MTLRasterizationRateMapDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
    pub type MTLRasterizationRateMapDescriptor;

    #[objc2::method(
        sel = "rasterizationRateMapDescriptorWithScreenSize:",
        managed = "Other"
    )]
    pub unsafe fn rasterizationRateMapDescriptorWithScreenSize(
        screen_size: MTLSize,
    ) -> Id<MTLRasterizationRateMapDescriptor>;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(
        sel = "rasterizationRateMapDescriptorWithScreenSize:layer:",
        managed = "Other"
    )]
    pub unsafe fn rasterizationRateMapDescriptorWithScreenSize_layer(
        screen_size: MTLSize,
        layer: &MTLRasterizationRateLayerDescriptor,
    ) -> Id<MTLRasterizationRateMapDescriptor>;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(
        sel = "rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:",
        managed = "Other"
    )]
    pub unsafe fn rasterizationRateMapDescriptorWithScreenSize_layerCount_layers(
        screen_size: MTLSize,
        layer_count: NSUInteger,
        layers: &mut Id<MTLRasterizationRateLayerDescriptor>,
    ) -> Id<MTLRasterizationRateMapDescriptor>;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(sel = "layerAtIndex:", managed = "Other")]
    pub unsafe fn layerAtIndex(
        &self,
        layer_index: NSUInteger,
    ) -> Option<Id<MTLRasterizationRateLayerDescriptor>>;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    #[objc2::method(sel = "setLayer:atIndex:")]
    pub unsafe fn setLayer_atIndex(
        &self,
        layer: Option<&MTLRasterizationRateLayerDescriptor>,
        layer_index: NSUInteger,
    );

    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    #[objc2::method(sel = "layers", managed = "Other")]
    pub unsafe fn layers(&self) -> Id<MTLRasterizationRateLayerArray>;

    #[objc2::method(sel = "screenSize")]
    pub unsafe fn screenSize(&self) -> MTLSize;

    #[objc2::method(sel = "setScreenSize:")]
    pub unsafe fn setScreenSize(&self, screen_size: MTLSize);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    pub unsafe fn setLabel(&self, label: Option<&NSString>);

    #[objc2::method(sel = "layerCount")]
    pub unsafe fn layerCount(&self) -> NSUInteger;
}

#[objc2::protocol]
pub unsafe trait MTLRasterizationRateMap: NSObjectProtocol {
    #[objc2::method(sel = "device", managed = "Other")]
    unsafe fn device(&self) -> Id<ProtocolObject<dyn MTLDevice>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    unsafe fn label(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "screenSize")]
    unsafe fn screenSize(&self) -> MTLSize;

    #[objc2::method(sel = "physicalGranularity")]
    unsafe fn physicalGranularity(&self) -> MTLSize;

    #[objc2::method(sel = "layerCount")]
    unsafe fn layerCount(&self) -> NSUInteger;

    #[objc2::method(sel = "parameterBufferSizeAndAlign")]
    unsafe fn parameterBufferSizeAndAlign(&self) -> MTLSizeAndAlign;

    #[objc2::method(sel = "copyParameterDataToBuffer:offset:")]
    unsafe fn copyParameterDataToBuffer_offset(
        &self,
        buffer: &ProtocolObject<dyn MTLBuffer>,
        offset: NSUInteger,
    );

    #[objc2::method(sel = "physicalSizeForLayer:")]
    unsafe fn physicalSizeForLayer(&self, layer_index: NSUInteger) -> MTLSize;

    #[objc2::method(sel = "mapScreenToPhysicalCoordinates:forLayer:")]
    unsafe fn mapScreenToPhysicalCoordinates_forLayer(
        &self,
        screen_coordinates: MTLCoordinate2D,
        layer_index: NSUInteger,
    ) -> MTLCoordinate2D;

    #[objc2::method(sel = "mapPhysicalToScreenCoordinates:forLayer:")]
    unsafe fn mapPhysicalToScreenCoordinates_forLayer(
        &self,
        physical_coordinates: MTLCoordinate2D,
        layer_index: NSUInteger,
    ) -> MTLCoordinate2D;
}
