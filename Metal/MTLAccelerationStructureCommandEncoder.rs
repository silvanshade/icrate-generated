//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum MTLAccelerationStructureRefitOptions {
    MTLAccelerationStructureRefitOptionVertexData = 1 << 0,
    MTLAccelerationStructureRefitOptionPerPrimitiveData = 1 << 1,
}

#[objc2::protocol]
pub unsafe trait MTLAccelerationStructureCommandEncoder: MTLCommandEncoder {
    #[cfg(feature = "Metal_MTLAccelerationStructureDescriptor")]
    #[objc2::method(
        sel = "buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:"
    )]
    fn buildAccelerationStructure_descriptor_scratchBuffer_scratchBufferOffset(
        &self,
        acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        descriptor: &MTLAccelerationStructureDescriptor,
        scratch_buffer: &ProtocolObject<dyn MTLBuffer>,
        scratch_buffer_offset: NSUInteger,
    );

    #[cfg(feature = "Metal_MTLAccelerationStructureDescriptor")]
    #[objc2::method(
        sel = "refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:"
    )]
    unsafe fn refitAccelerationStructure_descriptor_destination_scratchBuffer_scratchBufferOffset(
        &self,
        source_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        descriptor: &MTLAccelerationStructureDescriptor,
        destination_acceleration_structure: Option<&ProtocolObject<dyn MTLAccelerationStructure>>,
        scratch_buffer: &ProtocolObject<dyn MTLBuffer>,
        scratch_buffer_offset: NSUInteger,
    );

    #[cfg(feature = "Metal_MTLAccelerationStructureDescriptor")]
    #[objc2::method(
        sel = "refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:options:"
    )]
    unsafe fn refitAccelerationStructure_descriptor_destination_scratchBuffer_scratchBufferOffset_options(
        &self,
        source_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        descriptor: &MTLAccelerationStructureDescriptor,
        destination_acceleration_structure: Option<&ProtocolObject<dyn MTLAccelerationStructure>>,
        scratch_buffer: &ProtocolObject<dyn MTLBuffer>,
        scratch_buffer_offset: NSUInteger,
        options: MTLAccelerationStructureRefitOptions,
    );

    #[objc2::method(sel = "copyAccelerationStructure:toAccelerationStructure:")]
    unsafe fn copyAccelerationStructure_toAccelerationStructure(
        &self,
        source_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        destination_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
    );

    #[objc2::method(sel = "writeCompactedAccelerationStructureSize:toBuffer:offset:")]
    fn writeCompactedAccelerationStructureSize_toBuffer_offset(
        &self,
        acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        buffer: &ProtocolObject<dyn MTLBuffer>,
        offset: NSUInteger,
    );

    #[objc2::method(sel = "writeCompactedAccelerationStructureSize:toBuffer:offset:sizeDataType:")]
    unsafe fn writeCompactedAccelerationStructureSize_toBuffer_offset_sizeDataType(
        &self,
        acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        buffer: &ProtocolObject<dyn MTLBuffer>,
        offset: NSUInteger,
        size_data_type: MTLDataType,
    );

    #[objc2::method(sel = "copyAndCompactAccelerationStructure:toAccelerationStructure:")]
    fn copyAndCompactAccelerationStructure_toAccelerationStructure(
        &self,
        source_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
        destination_acceleration_structure: &ProtocolObject<dyn MTLAccelerationStructure>,
    );

    #[objc2::method(sel = "updateFence:")]
    unsafe fn updateFence(&self, fence: &ProtocolObject<dyn MTLFence>);

    #[objc2::method(sel = "waitForFence:")]
    unsafe fn waitForFence(&self, fence: &ProtocolObject<dyn MTLFence>);

    #[objc2::method(sel = "useResource:usage:")]
    unsafe fn useResource_usage(
        &self,
        resource: &ProtocolObject<dyn MTLResource>,
        usage: MTLResourceUsage,
    );

    #[objc2::method(sel = "useResources:count:usage:")]
    unsafe fn useResources_count_usage(
        &self,
        resources: NonNull<NonNull<ProtocolObject<dyn MTLResource>>>,
        count: NSUInteger,
        usage: MTLResourceUsage,
    );

    #[objc2::method(sel = "useHeap:")]
    unsafe fn useHeap(&self, heap: &ProtocolObject<dyn MTLHeap>);

    #[objc2::method(sel = "useHeaps:count:")]
    unsafe fn useHeaps_count(
        &self,
        heaps: NonNull<NonNull<ProtocolObject<dyn MTLHeap>>>,
        count: NSUInteger,
    );

    #[objc2::method(sel = "sampleCountersInBuffer:atSampleIndex:withBarrier:")]
    unsafe fn sampleCountersInBuffer_atSampleIndex_withBarrier(
        &self,
        sample_buffer: &ProtocolObject<dyn MTLCounterSampleBuffer>,
        sample_index: NSUInteger,
        barrier: bool,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLAccelerationStructurePassSampleBufferAttachmentDescriptor;
}

#[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
unsafe impl NSObjectProtocol for MTLAccelerationStructurePassSampleBufferAttachmentDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
    pub type MTLAccelerationStructurePassSampleBufferAttachmentDescriptor;

    #[objc2::method(sel = "sampleBuffer", managed = "Other")]
    pub unsafe fn sampleBuffer(&self) -> Option<Id<ProtocolObject<dyn MTLCounterSampleBuffer>>>;

    #[objc2::method(sel = "setSampleBuffer:")]
    pub unsafe fn setSampleBuffer(
        &self,
        sample_buffer: Option<&ProtocolObject<dyn MTLCounterSampleBuffer>>,
    );

    #[objc2::method(sel = "startOfEncoderSampleIndex")]
    pub unsafe fn startOfEncoderSampleIndex(&self) -> NSUInteger;

    #[objc2::method(sel = "setStartOfEncoderSampleIndex:")]
    pub unsafe fn setStartOfEncoderSampleIndex(&self, start_of_encoder_sample_index: NSUInteger);

    #[objc2::method(sel = "endOfEncoderSampleIndex")]
    pub unsafe fn endOfEncoderSampleIndex(&self) -> NSUInteger;

    #[objc2::method(sel = "setEndOfEncoderSampleIndex:")]
    pub unsafe fn setEndOfEncoderSampleIndex(&self, end_of_encoder_sample_index: NSUInteger);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray;
}

#[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray")]
unsafe impl NSObjectProtocol for MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray")]
    pub type MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray;

    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
    #[objc2::method(sel = "objectAtIndexedSubscript:", managed = "Other")]
    pub unsafe fn objectAtIndexedSubscript(
        &self,
        attachment_index: NSUInteger,
    ) -> Id<MTLAccelerationStructurePassSampleBufferAttachmentDescriptor>;

    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptor")]
    #[objc2::method(sel = "setObject:atIndexedSubscript:")]
    pub unsafe fn setObject_atIndexedSubscript(
        &self,
        attachment: Option<&MTLAccelerationStructurePassSampleBufferAttachmentDescriptor>,
        attachment_index: NSUInteger,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassDescriptor")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MTLAccelerationStructurePassDescriptor;
}

#[cfg(feature = "Metal_MTLAccelerationStructurePassDescriptor")]
unsafe impl NSObjectProtocol for MTLAccelerationStructurePassDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Metal_MTLAccelerationStructurePassDescriptor")]
    pub type MTLAccelerationStructurePassDescriptor;

    #[objc2::method(sel = "accelerationStructurePassDescriptor", managed = "Other")]
    pub unsafe fn accelerationStructurePassDescriptor() -> Id<MTLAccelerationStructurePassDescriptor>;

    #[cfg(feature = "Metal_MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray")]
    #[objc2::method(sel = "sampleBufferAttachments", managed = "Other")]
    pub unsafe fn sampleBufferAttachments(
        &self,
    ) -> Id<MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray>;
}
