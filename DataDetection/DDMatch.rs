//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::DataDetection::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatch")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatch;
}

#[cfg(feature = "DataDetection_DDMatch")]
unsafe impl NSObjectProtocol for DDMatch {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatch")]
    pub type DDMatch;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "matchedString", managed = "Other")]
    pub unsafe fn matchedString(&self) -> Id<NSString>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchLink")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchLink;
}

#[cfg(feature = "DataDetection_DDMatchLink")]
unsafe impl NSObjectProtocol for DDMatchLink {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchLink")]
    pub type DDMatchLink;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "URL", managed = "Other")]
    pub unsafe fn URL(&self) -> Id<NSURL>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchPhoneNumber")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchPhoneNumber;
}

#[cfg(feature = "DataDetection_DDMatchPhoneNumber")]
unsafe impl NSObjectProtocol for DDMatchPhoneNumber {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchPhoneNumber")]
    pub type DDMatchPhoneNumber;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "phoneNumber", managed = "Other")]
    pub unsafe fn phoneNumber(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Option<Id<NSString>>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchEmailAddress")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchEmailAddress;
}

#[cfg(feature = "DataDetection_DDMatchEmailAddress")]
unsafe impl NSObjectProtocol for DDMatchEmailAddress {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchEmailAddress")]
    pub type DDMatchEmailAddress;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "emailAddress", managed = "Other")]
    pub unsafe fn emailAddress(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Option<Id<NSString>>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchPostalAddress")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchPostalAddress;
}

#[cfg(feature = "DataDetection_DDMatchPostalAddress")]
unsafe impl NSObjectProtocol for DDMatchPostalAddress {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchPostalAddress")]
    pub type DDMatchPostalAddress;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "street", managed = "Other")]
    pub unsafe fn street(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "city", managed = "Other")]
    pub unsafe fn city(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "state", managed = "Other")]
    pub unsafe fn state(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "postalCode", managed = "Other")]
    pub unsafe fn postalCode(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "country", managed = "Other")]
    pub unsafe fn country(&self) -> Option<Id<NSString>>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchCalendarEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchCalendarEvent;
}

#[cfg(feature = "DataDetection_DDMatchCalendarEvent")]
unsafe impl NSObjectProtocol for DDMatchCalendarEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchCalendarEvent")]
    pub type DDMatchCalendarEvent;

    #[objc2::method(sel = "isAllDay")]
    pub unsafe fn isAllDay(&self) -> bool;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "startDate", managed = "Other")]
    pub unsafe fn startDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSTimeZone")]
    #[objc2::method(sel = "startTimeZone", managed = "Other")]
    pub unsafe fn startTimeZone(&self) -> Option<Id<NSTimeZone>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endDate", managed = "Other")]
    pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSTimeZone")]
    #[objc2::method(sel = "endTimeZone", managed = "Other")]
    pub unsafe fn endTimeZone(&self) -> Option<Id<NSTimeZone>>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchShipmentTrackingNumber")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchShipmentTrackingNumber;
}

#[cfg(feature = "DataDetection_DDMatchShipmentTrackingNumber")]
unsafe impl NSObjectProtocol for DDMatchShipmentTrackingNumber {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchShipmentTrackingNumber")]
    pub type DDMatchShipmentTrackingNumber;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "carrier", managed = "Other")]
    pub unsafe fn carrier(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "trackingNumber", managed = "Other")]
    pub unsafe fn trackingNumber(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchFlightNumber")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchFlightNumber;
}

#[cfg(feature = "DataDetection_DDMatchFlightNumber")]
unsafe impl NSObjectProtocol for DDMatchFlightNumber {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchFlightNumber")]
    pub type DDMatchFlightNumber;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "airline", managed = "Other")]
    pub unsafe fn airline(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "flightNumber", managed = "Other")]
    pub unsafe fn flightNumber(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe super = DDMatch,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchMoneyAmount")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DDMatchMoneyAmount;
}

#[cfg(feature = "DataDetection_DDMatchMoneyAmount")]
unsafe impl NSObjectProtocol for DDMatchMoneyAmount {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "DataDetection_DDMatchMoneyAmount")]
    pub type DDMatchMoneyAmount;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "currency", managed = "Other")]
    pub unsafe fn currency(&self) -> Id<NSString>;

    #[objc2::method(sel = "amount")]
    pub unsafe fn amount(&self) -> c_double;
}
