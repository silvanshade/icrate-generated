//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ExternalAccessory::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum EABluetoothAccessoryPickerErrorCode {
    EABluetoothAccessoryPickerAlreadyConnected = 0,
    EABluetoothAccessoryPickerResultNotFound = 1,
    EABluetoothAccessoryPickerResultCancelled = 2,
    EABluetoothAccessoryPickerResultFailed = 3,
}

extern_static!(EABluetoothAccessoryPickerErrorDomain: &'static NSString);

pub type EABluetoothAccessoryPickerCompletion = *mut Block<(*mut NSError,), ()>;

extern_static!(EAAccessoryDidConnectNotification: &'static NSString);

extern_static!(EAAccessoryDidDisconnectNotification: &'static NSString);

extern_static!(EAAccessoryKey: &'static NSString);

extern_static!(EAAccessorySelectedKey: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EAAccessoryManager;
}

#[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
unsafe impl NSObjectProtocol for EAAccessoryManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    pub type EAAccessoryManager;

    #[objc2::method(sel = "sharedAccessoryManager", managed = "Other")]
    pub unsafe fn sharedAccessoryManager() -> Id<EAAccessoryManager>;

    #[cfg(feature = "Foundation_NSPredicate")]
    #[objc2::method(sel = "showBluetoothAccessoryPickerWithNameFilter:completion:")]
    pub unsafe fn showBluetoothAccessoryPickerWithNameFilter_completion(
        &self,
        predicate: Option<&NSPredicate>,
        completion: EABluetoothAccessoryPickerCompletion,
    );

    #[objc2::method(sel = "registerForLocalNotifications")]
    pub unsafe fn registerForLocalNotifications(&self);

    #[objc2::method(sel = "unregisterForLocalNotifications")]
    pub unsafe fn unregisterForLocalNotifications(&self);

    #[cfg(all(
        feature = "ExternalAccessory_EAAccessory",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "connectedAccessories", managed = "Other")]
    pub unsafe fn connectedAccessories(&self) -> Id<NSArray<EAAccessory>>;
}
