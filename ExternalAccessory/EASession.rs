//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ExternalAccessory::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "ExternalAccessory_EASession")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type EASession;
}

#[cfg(feature = "ExternalAccessory_EASession")]
unsafe impl NSObjectProtocol for EASession {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ExternalAccessory_EASession")]
    pub type EASession;

    #[cfg(all(
        feature = "ExternalAccessory_EAAccessory",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "initWithAccessory:forProtocol:", managed = "Init")]
    pub unsafe fn initWithAccessory_forProtocol(
        this: Option<Allocated<Self>>,
        accessory: &EAAccessory,
        protocol_string: &NSString,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "ExternalAccessory_EAAccessory")]
    #[objc2::method(sel = "accessory", managed = "Other")]
    pub unsafe fn accessory(&self) -> Option<Id<EAAccessory>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "protocolString", managed = "Other")]
    pub unsafe fn protocolString(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSInputStream")]
    #[objc2::method(sel = "inputStream", managed = "Other")]
    pub unsafe fn inputStream(&self) -> Option<Id<NSInputStream>>;

    #[cfg(feature = "Foundation_NSOutputStream")]
    #[objc2::method(sel = "outputStream", managed = "Other")]
    pub unsafe fn outputStream(&self) -> Option<Id<NSOutputStream>>;
}
