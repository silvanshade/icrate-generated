//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[ns_enum]
#[underlying(NSUInteger)]
#[deprecated = "Use MKPinAnnotationView's pinTintColor instead"]
pub enum MKPinAnnotationColor {
    #[deprecated = "Use MKPinAnnotationView's pinTintColor instead"]
    MKPinAnnotationColorRed = 0,
    #[deprecated = "Use MKPinAnnotationView's pinTintColor instead"]
    MKPinAnnotationColorGreen = 1,
    #[deprecated = "Use MKPinAnnotationView's pinTintColor instead"]
    MKPinAnnotationColorPurple = 2,
}

#[objc2::interface(
    unsafe super = MKAnnotationView,
    unsafe inherits = [
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKPinAnnotationView;
}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSAccessibility for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSAccessibilityElementProtocol for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSAnimatablePropertyContainer for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSAppearanceCustomization for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSCoding for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSDraggingDestination for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSObjectProtocol for MKPinAnnotationView {}

#[cfg(feature = "MapKit_MKPinAnnotationView")]
unsafe impl NSUserInterfaceItemIdentification for MKPinAnnotationView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    #[deprecated]
    pub type MKPinAnnotationView;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "redPinColor", managed = "Other")]
    pub unsafe fn redPinColor() -> Id<NSColor>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "greenPinColor", managed = "Other")]
    pub unsafe fn greenPinColor() -> Id<NSColor>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "purplePinColor", managed = "Other")]
    pub unsafe fn purplePinColor() -> Id<NSColor>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "pinTintColor", managed = "Other")]
    pub unsafe fn pinTintColor(&self) -> Option<Id<NSColor>>;

    #[cfg(feature = "AppKit_NSColor")]
    #[objc2::method(sel = "setPinTintColor:")]
    pub unsafe fn setPinTintColor(&self, pin_tint_color: Option<&NSColor>);

    #[objc2::method(sel = "animatesDrop")]
    pub unsafe fn animatesDrop(&self) -> bool;

    #[objc2::method(sel = "setAnimatesDrop:")]
    pub unsafe fn setAnimatesDrop(&self, animates_drop: bool);

    #[deprecated = "Use pinTintColor instead"]
    #[objc2::method(sel = "pinColor")]
    pub unsafe fn pinColor(&self) -> MKPinAnnotationColor;

    #[deprecated = "Use pinTintColor instead"]
    #[objc2::method(sel = "setPinColor:")]
    pub unsafe fn setPinColor(&self, pin_color: MKPinAnnotationColor);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MKAnnotationView`
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    pub type MKPinAnnotationView;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithAnnotation:reuseIdentifier:", managed = "Init")]
    pub unsafe fn initWithAnnotation_reuseIdentifier(
        this: Option<Allocated<Self>>,
        annotation: Option<&ProtocolObject<dyn MKAnnotation>>,
        reuse_identifier: Option<&NSString>,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSView`
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPinAnnotationView")]
    pub type MKPinAnnotationView;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
