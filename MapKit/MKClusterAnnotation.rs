//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKClusterAnnotation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKClusterAnnotation;
}

#[cfg(feature = "MapKit_MKClusterAnnotation")]
unsafe impl MKAnnotation for MKClusterAnnotation {}

#[cfg(feature = "MapKit_MKClusterAnnotation")]
unsafe impl NSObjectProtocol for MKClusterAnnotation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKClusterAnnotation")]
    pub type MKClusterAnnotation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subtitle", managed = "Other")]
    pub unsafe fn subtitle(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSubtitle:")]
    pub unsafe fn setSubtitle(&self, subtitle: Option<&NSString>);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "memberAnnotations", managed = "Other")]
    pub unsafe fn memberAnnotations(&self) -> Id<NSArray<ProtocolObject<dyn MKAnnotation>>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "initWithMemberAnnotations:", managed = "Init")]
    pub unsafe fn initWithMemberAnnotations(
        this: Option<Allocated<Self>>,
        member_annotations: &NSArray<ProtocolObject<dyn MKAnnotation>>,
    ) -> Id<Self>;
}
