//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPointOfInterestFilter")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKPointOfInterestFilter;
}

#[cfg(feature = "MapKit_MKPointOfInterestFilter")]
unsafe impl NSCoding for MKPointOfInterestFilter {}

#[cfg(feature = "MapKit_MKPointOfInterestFilter")]
unsafe impl NSObjectProtocol for MKPointOfInterestFilter {}

#[cfg(feature = "MapKit_MKPointOfInterestFilter")]
unsafe impl NSSecureCoding for MKPointOfInterestFilter {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPointOfInterestFilter")]
    pub type MKPointOfInterestFilter;

    #[objc2::method(sel = "filterIncludingAllCategories", managed = "Other")]
    pub unsafe fn filterIncludingAllCategories() -> Id<MKPointOfInterestFilter>;

    #[objc2::method(sel = "filterExcludingAllCategories", managed = "Other")]
    pub unsafe fn filterExcludingAllCategories() -> Id<MKPointOfInterestFilter>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "initIncludingCategories:", managed = "Init")]
    pub unsafe fn initIncludingCategories(
        this: Option<Allocated<Self>>,
        categories: &NSArray<MKPointOfInterestCategory>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "initExcludingCategories:", managed = "Init")]
    pub unsafe fn initExcludingCategories(
        this: Option<Allocated<Self>>,
        categories: &NSArray<MKPointOfInterestCategory>,
    ) -> Id<Self>;

    #[objc2::method(sel = "includesCategory:")]
    pub unsafe fn includesCategory(&self, category: &MKPointOfInterestCategory) -> bool;

    #[objc2::method(sel = "excludesCategory:")]
    pub unsafe fn excludesCategory(&self, category: &MKPointOfInterestCategory) -> bool;
}
