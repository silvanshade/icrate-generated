//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum MKLookAroundBadgePosition {
    MKLookAroundBadgePositionTopLeading = 0,
    MKLookAroundBadgePositionTopTrailing = 1,
    MKLookAroundBadgePositionBottomTrailing = 2,
}

#[objc2::interface(
    unsafe super = NSViewController,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKLookAroundViewController;
}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSCoding for MKLookAroundViewController {}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSEditor for MKLookAroundViewController {}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSObjectProtocol for MKLookAroundViewController {}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSSecureCoding for MKLookAroundViewController {}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSSeguePerforming for MKLookAroundViewController {}

#[cfg(feature = "MapKit_MKLookAroundViewController")]
unsafe impl NSUserInterfaceItemIdentification for MKLookAroundViewController {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    pub type MKLookAroundViewController;

    #[cfg(feature = "MapKit_MKLookAroundScene")]
    #[objc2::method(sel = "initWithScene:", managed = "Init")]
    pub unsafe fn initWithScene(
        this: Option<Allocated<Self>>,
        scene: &MKLookAroundScene,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSBundle", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithNibName:bundle:", managed = "Init")]
    pub unsafe fn initWithNibName_bundle(
        this: Option<Allocated<Self>>,
        nib_name_or_nil: Option<&NSString>,
        nib_bundle_or_nil: Option<&NSBundle>,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(this: Option<Allocated<Self>>, coder: &NSCoder)
        -> Option<Id<Self>>;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn MKLookAroundViewControllerDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(
        &self,
        delegate: Option<&ProtocolObject<dyn MKLookAroundViewControllerDelegate>>,
    );

    #[cfg(feature = "MapKit_MKLookAroundScene")]
    #[objc2::method(sel = "scene", managed = "Other")]
    pub unsafe fn scene(&self) -> Option<Id<MKLookAroundScene>>;

    #[cfg(feature = "MapKit_MKLookAroundScene")]
    #[objc2::method(sel = "setScene:")]
    pub unsafe fn setScene(&self, scene: Option<&MKLookAroundScene>);

    #[objc2::method(sel = "isNavigationEnabled")]
    pub unsafe fn isNavigationEnabled(&self) -> bool;

    #[objc2::method(sel = "setNavigationEnabled:")]
    pub unsafe fn setNavigationEnabled(&self, navigation_enabled: bool);

    #[objc2::method(sel = "showsRoadLabels")]
    pub unsafe fn showsRoadLabels(&self) -> bool;

    #[objc2::method(sel = "setShowsRoadLabels:")]
    pub unsafe fn setShowsRoadLabels(&self, shows_road_labels: bool);

    #[cfg(feature = "MapKit_MKPointOfInterestFilter")]
    #[objc2::method(sel = "pointOfInterestFilter", managed = "Other")]
    pub unsafe fn pointOfInterestFilter(&self) -> Option<Id<MKPointOfInterestFilter>>;

    #[cfg(feature = "MapKit_MKPointOfInterestFilter")]
    #[objc2::method(sel = "setPointOfInterestFilter:")]
    pub unsafe fn setPointOfInterestFilter(
        &self,
        point_of_interest_filter: Option<&MKPointOfInterestFilter>,
    );

    #[objc2::method(sel = "badgePosition")]
    pub unsafe fn badgePosition(&self) -> MKLookAroundBadgePosition;

    #[objc2::method(sel = "setBadgePosition:")]
    pub unsafe fn setBadgePosition(&self, badge_position: MKLookAroundBadgePosition);
}

#[objc2::protocol]
pub unsafe trait MKLookAroundViewControllerDelegate: NSObjectProtocol {
    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerWillUpdateScene:")]
    unsafe fn lookAroundViewControllerWillUpdateScene(
        &self,
        view_controller: &MKLookAroundViewController,
    );

    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerDidUpdateScene:")]
    unsafe fn lookAroundViewControllerDidUpdateScene(
        &self,
        view_controller: &MKLookAroundViewController,
    );

    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerWillPresentFullScreen:")]
    unsafe fn lookAroundViewControllerWillPresentFullScreen(
        &self,
        view_controller: &MKLookAroundViewController,
    );

    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerDidPresentFullScreen:")]
    unsafe fn lookAroundViewControllerDidPresentFullScreen(
        &self,
        view_controller: &MKLookAroundViewController,
    );

    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerWillDismissFullScreen:")]
    unsafe fn lookAroundViewControllerWillDismissFullScreen(
        &self,
        view_controller: &MKLookAroundViewController,
    );

    #[cfg(feature = "MapKit_MKLookAroundViewController")]
    #[objc2::method(optional, sel = "lookAroundViewControllerDidDismissFullScreen:")]
    unsafe fn lookAroundViewControllerDidDismissFullScreen(
        &self,
        view_controller: &MKLookAroundViewController,
    );
}
