//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = CLPlacemark,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPlacemark")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKPlacemark;
}

#[cfg(feature = "MapKit_MKPlacemark")]
unsafe impl MKAnnotation for MKPlacemark {}

#[cfg(feature = "MapKit_MKPlacemark")]
unsafe impl NSCoding for MKPlacemark {}

#[cfg(feature = "MapKit_MKPlacemark")]
unsafe impl NSObjectProtocol for MKPlacemark {}

#[cfg(feature = "MapKit_MKPlacemark")]
unsafe impl NSSecureCoding for MKPlacemark {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPlacemark")]
    pub type MKPlacemark;

    #[objc2::method(sel = "initWithCoordinate:", managed = "Init")]
    pub unsafe fn initWithCoordinate(
        this: Option<Allocated<Self>>,
        coordinate: CLLocationCoordinate2D,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithCoordinate:addressDictionary:", managed = "Init")]
    pub unsafe fn initWithCoordinate_addressDictionary(
        this: Option<Allocated<Self>>,
        coordinate: CLLocationCoordinate2D,
        address_dictionary: Option<&NSDictionary<NSString, Object>>,
    ) -> Id<Self>;

    #[cfg(feature = "Contacts_CNPostalAddress")]
    #[objc2::method(sel = "initWithCoordinate:postalAddress:", managed = "Init")]
    pub unsafe fn initWithCoordinate_postalAddress(
        this: Option<Allocated<Self>>,
        coordinate: CLLocationCoordinate2D,
        postal_address: &CNPostalAddress,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "countryCode", managed = "Other")]
    pub unsafe fn countryCode(&self) -> Option<Id<NSString>>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CLPlacemark`
    #[cfg(feature = "MapKit_MKPlacemark")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPlacemark")]
    pub type MKPlacemark;

    #[objc2::method(sel = "initWithPlacemark:", managed = "Init")]
    pub unsafe fn initWithPlacemark(
        this: Option<Allocated<Self>>,
        placemark: &CLPlacemark,
    ) -> Id<Self>;
}
