//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKShape,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPointAnnotation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKPointAnnotation;
}

#[cfg(feature = "MapKit_MKPointAnnotation")]
unsafe impl MKAnnotation for MKPointAnnotation {}

#[cfg(feature = "MapKit_MKPointAnnotation")]
unsafe impl NSObjectProtocol for MKPointAnnotation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPointAnnotation")]
    pub type MKPointAnnotation;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "initWithCoordinate:", managed = "Init")]
    pub unsafe fn initWithCoordinate(
        this: Option<Allocated<Self>>,
        coordinate: CLLocationCoordinate2D,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithCoordinate:title:subtitle:", managed = "Init")]
    pub unsafe fn initWithCoordinate_title_subtitle(
        this: Option<Allocated<Self>>,
        coordinate: CLLocationCoordinate2D,
        title: Option<&NSString>,
        subtitle: Option<&NSString>,
    ) -> Id<Self>;

    #[objc2::method(sel = "coordinate")]
    pub unsafe fn coordinate(&self) -> CLLocationCoordinate2D;

    #[objc2::method(sel = "setCoordinate:")]
    pub unsafe fn setCoordinate(&self, coordinate: CLLocationCoordinate2D);
}
