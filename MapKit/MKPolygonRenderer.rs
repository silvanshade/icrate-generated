//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKOverlayPathRenderer,
    unsafe inherits = [
        MKOverlayRenderer,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPolygonRenderer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKPolygonRenderer;
}

#[cfg(feature = "MapKit_MKPolygonRenderer")]
unsafe impl NSObjectProtocol for MKPolygonRenderer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPolygonRenderer")]
    pub type MKPolygonRenderer;

    #[cfg(feature = "MapKit_MKPolygon")]
    #[objc2::method(sel = "initWithPolygon:", managed = "Init")]
    pub unsafe fn initWithPolygon(this: Option<Allocated<Self>>, polygon: &MKPolygon) -> Id<Self>;

    #[cfg(feature = "MapKit_MKPolygon")]
    #[objc2::method(sel = "polygon", managed = "Other")]
    pub unsafe fn polygon(&self) -> Id<MKPolygon>;

    #[objc2::method(sel = "strokeStart")]
    pub unsafe fn strokeStart(&self) -> CGFloat;

    #[objc2::method(sel = "setStrokeStart:")]
    pub unsafe fn setStrokeStart(&self, stroke_start: CGFloat);

    #[objc2::method(sel = "strokeEnd")]
    pub unsafe fn strokeEnd(&self) -> CGFloat;

    #[objc2::method(sel = "setStrokeEnd:")]
    pub unsafe fn setStrokeEnd(&self, stroke_end: CGFloat);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MKOverlayRenderer`
    #[cfg(feature = "MapKit_MKPolygonRenderer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKPolygonRenderer")]
    pub type MKPolygonRenderer;

    #[objc2::method(sel = "initWithOverlay:", managed = "Init")]
    pub unsafe fn initWithOverlay(
        this: Option<Allocated<Self>>,
        overlay: &ProtocolObject<dyn MKOverlay>,
    ) -> Id<Self>;
}
