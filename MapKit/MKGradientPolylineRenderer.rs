//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKPolylineRenderer,
    unsafe inherits = [
        MKOverlayPathRenderer,
        MKOverlayRenderer,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKGradientPolylineRenderer;
}

#[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
unsafe impl NSObjectProtocol for MKGradientPolylineRenderer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    pub type MKGradientPolylineRenderer;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "locations", managed = "Other")]
    pub unsafe fn locations(&self) -> Id<NSArray<NSNumber>>;

    #[cfg(all(feature = "AppKit_NSColor", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "colors", managed = "Other")]
    pub unsafe fn colors(&self) -> Id<NSArray<NSColor>>;

    #[cfg(all(
        feature = "AppKit_NSColor",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSNumber"
    ))]
    #[objc2::method(sel = "setColors:atLocations:")]
    pub unsafe fn setColors_atLocations(
        &self,
        colors: &NSArray<NSColor>,
        locations: &NSArray<NSNumber>,
    );
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MKPolylineRenderer`
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    pub type MKGradientPolylineRenderer;

    #[cfg(feature = "MapKit_MKPolyline")]
    #[objc2::method(sel = "initWithPolyline:", managed = "Init")]
    pub unsafe fn initWithPolyline(
        this: Option<Allocated<Self>>,
        polyline: &MKPolyline,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MKOverlayRenderer`
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKGradientPolylineRenderer")]
    pub type MKGradientPolylineRenderer;

    #[objc2::method(sel = "initWithOverlay:", managed = "Init")]
    pub unsafe fn initWithOverlay(
        this: Option<Allocated<Self>>,
        overlay: &ProtocolObject<dyn MKOverlay>,
    ) -> Id<Self>;
}
