//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKShape,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKCircle")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKCircle;
}

#[cfg(feature = "MapKit_MKCircle")]
unsafe impl MKAnnotation for MKCircle {}

#[cfg(feature = "MapKit_MKCircle")]
unsafe impl MKOverlay for MKCircle {}

#[cfg(feature = "MapKit_MKCircle")]
unsafe impl NSObjectProtocol for MKCircle {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKCircle")]
    pub type MKCircle;

    #[objc2::method(sel = "circleWithCenterCoordinate:radius:", managed = "Other")]
    pub unsafe fn circleWithCenterCoordinate_radius(
        coord: CLLocationCoordinate2D,
        radius: CLLocationDistance,
    ) -> Id<Self>;

    #[objc2::method(sel = "circleWithMapRect:", managed = "Other")]
    pub unsafe fn circleWithMapRect(map_rect: MKMapRect) -> Id<Self>;

    #[objc2::method(sel = "coordinate")]
    pub unsafe fn coordinate(&self) -> CLLocationCoordinate2D;

    #[objc2::method(sel = "radius")]
    pub unsafe fn radius(&self) -> CLLocationDistance;

    #[objc2::method(sel = "boundingMapRect")]
    pub unsafe fn boundingMapRect(&self) -> MKMapRect;
}
