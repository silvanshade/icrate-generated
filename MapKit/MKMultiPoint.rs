//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKShape,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKMultiPoint")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKMultiPoint;
}

#[cfg(feature = "MapKit_MKMultiPoint")]
unsafe impl MKAnnotation for MKMultiPoint {}

#[cfg(feature = "MapKit_MKMultiPoint")]
unsafe impl NSObjectProtocol for MKMultiPoint {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKMultiPoint")]
    pub type MKMultiPoint;

    #[objc2::method(sel = "points")]
    pub unsafe fn points(&self) -> NonNull<MKMapPoint>;

    #[objc2::method(sel = "pointCount")]
    pub unsafe fn pointCount(&self) -> NSUInteger;

    #[objc2::method(sel = "getCoordinates:range:")]
    pub unsafe fn getCoordinates_range(
        &self,
        coords: NonNull<CLLocationCoordinate2D>,
        range: NSRange,
    );

    #[objc2::method(sel = "locationAtPointIndex:")]
    pub unsafe fn locationAtPointIndex(&self, index: NSUInteger) -> CGFloat;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSIndexSet",
        feature = "Foundation_NSNumber"
    ))]
    #[objc2::method(sel = "locationsAtPointIndexes:", managed = "Other")]
    pub unsafe fn locationsAtPointIndexes(&self, indexes: &NSIndexSet) -> Id<NSArray<NSNumber>>;
}
