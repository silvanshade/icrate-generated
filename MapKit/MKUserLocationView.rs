//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::MapKit::*;

#[objc2::interface(
    unsafe super = MKAnnotationView,
    unsafe inherits = [
        NSView,
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKUserLocationView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MKUserLocationView;
}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSAccessibility for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSAccessibilityElementProtocol for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSAnimatablePropertyContainer for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSAppearanceCustomization for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSCoding for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSDraggingDestination for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSObjectProtocol for MKUserLocationView {}

#[cfg(feature = "MapKit_MKUserLocationView")]
unsafe impl NSUserInterfaceItemIdentification for MKUserLocationView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKUserLocationView")]
    pub type MKUserLocationView;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `MKAnnotationView`
    #[cfg(feature = "MapKit_MKUserLocationView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKUserLocationView")]
    pub type MKUserLocationView;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithAnnotation:reuseIdentifier:", managed = "Init")]
    pub unsafe fn initWithAnnotation_reuseIdentifier(
        this: Option<Allocated<Self>>,
        annotation: Option<&ProtocolObject<dyn MKAnnotation>>,
        reuse_identifier: Option<&NSString>,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSView`
    #[cfg(feature = "MapKit_MKUserLocationView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "MapKit_MKUserLocationView")]
    pub type MKUserLocationView;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
