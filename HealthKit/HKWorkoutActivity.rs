//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutActivity")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKWorkoutActivity;
}

#[cfg(feature = "HealthKit_HKWorkoutActivity")]
unsafe impl NSObjectProtocol for HKWorkoutActivity {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutActivity")]
    pub type HKWorkoutActivity;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
    #[objc2::method(sel = "workoutConfiguration", managed = "Other")]
    pub unsafe fn workoutConfiguration(&self) -> Id<HKWorkoutConfiguration>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "startDate", managed = "Other")]
    pub unsafe fn startDate(&self) -> Id<NSDate>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endDate", managed = "Other")]
    pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "metadata", managed = "Other")]
    pub unsafe fn metadata(&self) -> Option<Id<NSDictionary<NSString, Object>>>;

    #[objc2::method(sel = "duration")]
    pub unsafe fn duration(&self) -> NSTimeInterval;

    #[cfg(all(feature = "Foundation_NSArray", feature = "HealthKit_HKWorkoutEvent"))]
    #[objc2::method(sel = "workoutEvents", managed = "Other")]
    pub unsafe fn workoutEvents(&self) -> Id<NSArray<HKWorkoutEvent>>;

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "HealthKit_HKQuantityType",
        feature = "HealthKit_HKStatistics"
    ))]
    #[objc2::method(sel = "allStatistics", managed = "Other")]
    pub unsafe fn allStatistics(&self) -> Id<NSDictionary<HKQuantityType, HKStatistics>>;

    #[cfg(all(
        feature = "HealthKit_HKQuantityType",
        feature = "HealthKit_HKStatistics"
    ))]
    #[objc2::method(sel = "statisticsForType:", managed = "Other")]
    pub unsafe fn statisticsForType(
        &self,
        quantity_type: &HKQuantityType,
    ) -> Option<Id<HKStatistics>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[objc2::method(
        sel = "initWithWorkoutConfiguration:startDate:endDate:metadata:",
        managed = "Init"
    )]
    pub unsafe fn initWithWorkoutConfiguration_startDate_endDate_metadata(
        this: Option<Allocated<Self>>,
        workout_configuration: &HKWorkoutConfiguration,
        start_date: &NSDate,
        end_date: Option<&NSDate>,
        metadata: Option<&NSDictionary<NSString, Object>>,
    ) -> Id<Self>;
}

extern_static!(HKPredicateKeyPathWorkoutActivityType: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityDuration: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityStartDate: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityEndDate: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivitySumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityMinimumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityMaximumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivityAverageQuantity: &'static NSString);
