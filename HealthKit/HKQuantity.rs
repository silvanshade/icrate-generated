//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKQuantity")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKQuantity;
}

#[cfg(feature = "HealthKit_HKQuantity")]
unsafe impl NSCoding for HKQuantity {}

#[cfg(feature = "HealthKit_HKQuantity")]
unsafe impl NSObjectProtocol for HKQuantity {}

#[cfg(feature = "HealthKit_HKQuantity")]
unsafe impl NSSecureCoding for HKQuantity {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKQuantity")]
    pub type HKQuantity;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "HealthKit_HKUnit")]
    #[objc2::method(sel = "quantityWithUnit:doubleValue:", managed = "Other")]
    pub unsafe fn quantityWithUnit_doubleValue(unit: &HKUnit, value: c_double) -> Id<Self>;

    #[cfg(feature = "HealthKit_HKUnit")]
    #[objc2::method(sel = "isCompatibleWithUnit:")]
    pub unsafe fn isCompatibleWithUnit(&self, unit: &HKUnit) -> bool;

    #[cfg(feature = "HealthKit_HKUnit")]
    #[objc2::method(sel = "doubleValueForUnit:")]
    pub unsafe fn doubleValueForUnit(&self, unit: &HKUnit) -> c_double;

    #[objc2::method(sel = "compare:")]
    pub unsafe fn compare(&self, quantity: &HKQuantity) -> NSComparisonResult;
}
