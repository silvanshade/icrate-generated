//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAttachmentStore")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKAttachmentStore;
}

#[cfg(feature = "HealthKit_HKAttachmentStore")]
unsafe impl NSObjectProtocol for HKAttachmentStore {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAttachmentStore")]
    pub type HKAttachmentStore;

    #[cfg(feature = "HealthKit_HKHealthStore")]
    #[objc2::method(sel = "initWithHealthStore:", managed = "Init")]
    pub unsafe fn initWithHealthStore(
        this: Option<Allocated<Self>>,
        health_store: &HKHealthStore,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString",
        feature = "Foundation_NSURL",
        feature = "HealthKit_HKAttachment",
        feature = "HealthKit_HKObject",
        feature = "UniformTypeIdentifiers_UTType"
    ))]
    #[objc2::method(sel = "addAttachmentToObject:name:contentType:URL:metadata:completion:")]
    pub unsafe fn addAttachmentToObject_name_contentType_URL_metadata_completion(
        &self,
        object: &HKObject,
        name: &NSString,
        content_type: &UTType,
        url: &NSURL,
        metadata: Option<&NSDictionary<NSString, Object>>,
        completion: &Block<(*mut HKAttachment, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKAttachment",
        feature = "HealthKit_HKObject"
    ))]
    #[objc2::method(sel = "removeAttachment:fromObject:completion:")]
    pub unsafe fn removeAttachment_fromObject_completion(
        &self,
        attachment: &HKAttachment,
        object: &HKObject,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKAttachment",
        feature = "HealthKit_HKObject"
    ))]
    #[objc2::method(sel = "getAttachmentsForObject:completion:")]
    pub unsafe fn getAttachmentsForObject_completion(
        &self,
        object: &HKObject,
        completion: &Block<(*mut NSArray<HKAttachment>, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSData",
        feature = "Foundation_NSError",
        feature = "Foundation_NSProgress",
        feature = "HealthKit_HKAttachment"
    ))]
    #[objc2::method(sel = "getDataForAttachment:completion:", managed = "Other")]
    pub unsafe fn getDataForAttachment_completion(
        &self,
        attachment: &HKAttachment,
        completion: &Block<(*mut NSData, *mut NSError), ()>,
    ) -> Id<NSProgress>;

    #[cfg(all(
        feature = "Foundation_NSData",
        feature = "Foundation_NSError",
        feature = "Foundation_NSProgress",
        feature = "HealthKit_HKAttachment"
    ))]
    #[objc2::method(sel = "streamDataForAttachment:dataHandler:", managed = "Other")]
    pub unsafe fn streamDataForAttachment_dataHandler(
        &self,
        attachment: &HKAttachment,
        data_handler: &Block<(*mut NSData, *mut NSError, Bool), ()>,
    ) -> Id<NSProgress>;
}
