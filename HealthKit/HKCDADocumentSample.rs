//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKDocumentSample,
    unsafe inherits = [
        HKSample,
        HKObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKCDADocumentSample")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKCDADocumentSample;
}

#[cfg(feature = "HealthKit_HKCDADocumentSample")]
unsafe impl NSCoding for HKCDADocumentSample {}

#[cfg(feature = "HealthKit_HKCDADocumentSample")]
unsafe impl NSObjectProtocol for HKCDADocumentSample {}

#[cfg(feature = "HealthKit_HKCDADocumentSample")]
unsafe impl NSSecureCoding for HKCDADocumentSample {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKCDADocumentSample")]
    pub type HKCDADocumentSample;

    #[cfg(feature = "HealthKit_HKCDADocument")]
    #[objc2::method(sel = "document", managed = "Other")]
    pub unsafe fn document(&self) -> Option<Id<HKCDADocument>>;

    #[cfg(all(
        feature = "Foundation_NSData",
        feature = "Foundation_NSDate",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(
        sel = "CDADocumentSampleWithData:startDate:endDate:metadata:validationError:",
        managed = "Other",
        throws
    )]
    pub unsafe fn CDADocumentSampleWithData_startDate_endDate_metadata_validationError(
        document_data: &NSData,
        start_date: &NSDate,
        end_date: &NSDate,
        metadata: Option<&NSDictionary<NSString, Object>>,
    ) -> Result<Id<Self>, Id<NSError>>;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKCDADocument")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKCDADocument;
}

#[cfg(feature = "HealthKit_HKCDADocument")]
unsafe impl NSObjectProtocol for HKCDADocument {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKCDADocument")]
    pub type HKCDADocument;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "documentData", managed = "Other")]
    pub unsafe fn documentData(&self) -> Option<Id<NSData>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "patientName", managed = "Other")]
    pub unsafe fn patientName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "authorName", managed = "Other")]
    pub unsafe fn authorName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "custodianName", managed = "Other")]
    pub unsafe fn custodianName(&self) -> Id<NSString>;
}

extern_static!(HKPredicateKeyPathCDATitle: &'static NSString);

extern_static!(HKPredicateKeyPathCDAPatientName: &'static NSString);

extern_static!(HKPredicateKeyPathCDAAuthorName: &'static NSString);

extern_static!(HKPredicateKeyPathCDACustodianName: &'static NSString);

extern_static!(HKDetailedCDAValidationErrorKey: &'static NSString);
