//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum HKWorkoutSessionState {
    HKWorkoutSessionStateNotStarted = 1,
    HKWorkoutSessionStateRunning = 2,
    HKWorkoutSessionStateEnded = 3,
    HKWorkoutSessionStatePaused = 4,
    HKWorkoutSessionStatePrepared = 5,
    HKWorkoutSessionStateStopped = 6,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutSession")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKWorkoutSession;
}

#[cfg(feature = "HealthKit_HKWorkoutSession")]
unsafe impl NSCoding for HKWorkoutSession {}

#[cfg(feature = "HealthKit_HKWorkoutSession")]
unsafe impl NSObjectProtocol for HKWorkoutSession {}

#[cfg(feature = "HealthKit_HKWorkoutSession")]
unsafe impl NSSecureCoding for HKWorkoutSession {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutSession")]
    pub type HKWorkoutSession;

    #[deprecated]
    #[objc2::method(sel = "activityType")]
    pub unsafe fn activityType(&self) -> HKWorkoutActivityType;

    #[deprecated]
    #[objc2::method(sel = "locationType")]
    pub unsafe fn locationType(&self) -> HKWorkoutSessionLocationType;

    #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
    #[objc2::method(sel = "workoutConfiguration", managed = "Other")]
    pub unsafe fn workoutConfiguration(&self) -> Id<HKWorkoutConfiguration>;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn HKWorkoutSessionDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(
        &self,
        delegate: Option<&ProtocolObject<dyn HKWorkoutSessionDelegate>>,
    );

    #[objc2::method(sel = "state")]
    pub unsafe fn state(&self) -> HKWorkoutSessionState;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "startDate", managed = "Other")]
    pub unsafe fn startDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endDate", managed = "Other")]
    pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "HealthKit_HKWorkoutActivity")]
    #[objc2::method(sel = "currentActivity", managed = "Other")]
    pub unsafe fn currentActivity(&self) -> Id<HKWorkoutActivity>;

    #[deprecated]
    #[objc2::method(sel = "initWithActivityType:locationType:", managed = "Init")]
    pub unsafe fn initWithActivityType_locationType(
        this: Option<Allocated<Self>>,
        activity_type: HKWorkoutActivityType,
        location_type: HKWorkoutSessionLocationType,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[deprecated]
    #[objc2::method(sel = "initWithConfiguration:error:", managed = "Init", throws)]
    pub unsafe fn initWithConfiguration_error(
        this: Option<Allocated<Self>>,
        workout_configuration: &HKWorkoutConfiguration,
    ) -> Result<Id<Self>, Id<NSError>>;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKHealthStore",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[objc2::method(
        sel = "initWithHealthStore:configuration:error:",
        managed = "Init",
        throws
    )]
    pub unsafe fn initWithHealthStore_configuration_error(
        this: Option<Allocated<Self>>,
        health_store: &HKHealthStore,
        workout_configuration: &HKWorkoutConfiguration,
    ) -> Result<Id<Self>, Id<NSError>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "prepare")]
    pub unsafe fn prepare(&self);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "startActivityWithDate:")]
    pub unsafe fn startActivityWithDate(&self, date: Option<&NSDate>);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "stopActivityWithDate:")]
    pub unsafe fn stopActivityWithDate(&self, date: Option<&NSDate>);

    #[objc2::method(sel = "end")]
    pub unsafe fn end(&self);

    #[objc2::method(sel = "pause")]
    pub unsafe fn pause(&self);

    #[objc2::method(sel = "resume")]
    pub unsafe fn resume(&self);

    #[cfg(feature = "HealthKit_HKLiveWorkoutBuilder")]
    #[objc2::method(sel = "associatedWorkoutBuilder", managed = "Other")]
    pub unsafe fn associatedWorkoutBuilder(&self) -> Id<HKLiveWorkoutBuilder>;

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[objc2::method(sel = "beginNewActivityWithConfiguration:date:metadata:")]
    pub unsafe fn beginNewActivityWithConfiguration_date_metadata(
        &self,
        workout_configuration: &HKWorkoutConfiguration,
        date: &NSDate,
        metadata: Option<&NSDictionary<NSString, Object>>,
    );

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endCurrentActivityOnDate:")]
    pub unsafe fn endCurrentActivityOnDate(&self, date: &NSDate);
}

#[objc2::protocol]
pub unsafe trait HKWorkoutSessionDelegate: NSObjectProtocol {
    #[cfg(all(feature = "Foundation_NSDate", feature = "HealthKit_HKWorkoutSession"))]
    #[objc2::method(sel = "workoutSession:didChangeToState:fromState:date:")]
    unsafe fn workoutSession_didChangeToState_fromState_date(
        &self,
        workout_session: &HKWorkoutSession,
        to_state: HKWorkoutSessionState,
        from_state: HKWorkoutSessionState,
        date: &NSDate,
    );

    #[cfg(all(feature = "Foundation_NSError", feature = "HealthKit_HKWorkoutSession"))]
    #[objc2::method(sel = "workoutSession:didFailWithError:")]
    unsafe fn workoutSession_didFailWithError(
        &self,
        workout_session: &HKWorkoutSession,
        error: &NSError,
    );

    #[cfg(all(
        feature = "HealthKit_HKWorkoutEvent",
        feature = "HealthKit_HKWorkoutSession"
    ))]
    #[objc2::method(optional, sel = "workoutSession:didGenerateEvent:")]
    unsafe fn workoutSession_didGenerateEvent(
        &self,
        workout_session: &HKWorkoutSession,
        event: &HKWorkoutEvent,
    );

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "HealthKit_HKWorkoutConfiguration",
        feature = "HealthKit_HKWorkoutSession"
    ))]
    #[objc2::method(
        optional,
        sel = "workoutSession:didBeginActivityWithConfiguration:date:"
    )]
    unsafe fn workoutSession_didBeginActivityWithConfiguration_date(
        &self,
        workout_session: &HKWorkoutSession,
        workout_configuration: &HKWorkoutConfiguration,
        date: &NSDate,
    );

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "HealthKit_HKWorkoutConfiguration",
        feature = "HealthKit_HKWorkoutSession"
    ))]
    #[objc2::method(optional, sel = "workoutSession:didEndActivityWithConfiguration:date:")]
    unsafe fn workoutSession_didEndActivityWithConfiguration_date(
        &self,
        workout_session: &HKWorkoutSession,
        workout_configuration: &HKWorkoutConfiguration,
        date: &NSDate,
    );
}
