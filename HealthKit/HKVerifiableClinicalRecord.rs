//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

typed_enum!(
    pub type HKVerifiableClinicalRecordSourceType = NSString;
);

extern_static!(
    HKVerifiableClinicalRecordSourceTypeSMARTHealthCard:
        &'static HKVerifiableClinicalRecordSourceType
);

extern_static!(
    HKVerifiableClinicalRecordSourceTypeEUDigitalCOVIDCertificate:
        &'static HKVerifiableClinicalRecordSourceType
);

typed_enum!(
    pub type HKVerifiableClinicalRecordCredentialType = NSString;
);

extern_static!(
    HKVerifiableClinicalRecordCredentialTypeCOVID19:
        &'static HKVerifiableClinicalRecordCredentialType
);

extern_static!(
    HKVerifiableClinicalRecordCredentialTypeImmunization:
        &'static HKVerifiableClinicalRecordCredentialType
);

extern_static!(
    HKVerifiableClinicalRecordCredentialTypeLaboratory:
        &'static HKVerifiableClinicalRecordCredentialType
);

extern_static!(
    HKVerifiableClinicalRecordCredentialTypeRecovery:
        &'static HKVerifiableClinicalRecordCredentialType
);

#[objc2::interface(
    unsafe super = HKSample,
    unsafe inherits = [
        HKObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKVerifiableClinicalRecord")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKVerifiableClinicalRecord;
}

#[cfg(feature = "HealthKit_HKVerifiableClinicalRecord")]
unsafe impl NSCoding for HKVerifiableClinicalRecord {}

#[cfg(feature = "HealthKit_HKVerifiableClinicalRecord")]
unsafe impl NSObjectProtocol for HKVerifiableClinicalRecord {}

#[cfg(feature = "HealthKit_HKVerifiableClinicalRecord")]
unsafe impl NSSecureCoding for HKVerifiableClinicalRecord {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKVerifiableClinicalRecord")]
    pub type HKVerifiableClinicalRecord;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "recordTypes", managed = "Other")]
    pub unsafe fn recordTypes(&self) -> Id<NSArray<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "issuerIdentifier", managed = "Other")]
    pub unsafe fn issuerIdentifier(&self) -> Id<NSString>;

    #[cfg(feature = "HealthKit_HKVerifiableClinicalRecordSubject")]
    #[objc2::method(sel = "subject", managed = "Other")]
    pub unsafe fn subject(&self) -> Id<HKVerifiableClinicalRecordSubject>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "issuedDate", managed = "Other")]
    pub unsafe fn issuedDate(&self) -> Id<NSDate>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "relevantDate", managed = "Other")]
    pub unsafe fn relevantDate(&self) -> Id<NSDate>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "expirationDate", managed = "Other")]
    pub unsafe fn expirationDate(&self) -> Option<Id<NSDate>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "itemNames", managed = "Other")]
    pub unsafe fn itemNames(&self) -> Id<NSArray<NSString>>;

    #[objc2::method(sel = "sourceType", managed = "Other")]
    pub unsafe fn sourceType(&self) -> Option<Id<HKVerifiableClinicalRecordSourceType>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "dataRepresentation", managed = "Other")]
    pub unsafe fn dataRepresentation(&self) -> Id<NSData>;

    #[cfg(feature = "Foundation_NSData")]
    #[deprecated]
    #[objc2::method(sel = "JWSRepresentation", managed = "Other")]
    pub unsafe fn JWSRepresentation(&self) -> Id<NSData>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}
