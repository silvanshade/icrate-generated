//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKQuery,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKDocumentQuery")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKDocumentQuery;
}

#[cfg(feature = "HealthKit_HKDocumentQuery")]
unsafe impl NSObjectProtocol for HKDocumentQuery {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKDocumentQuery")]
    pub type HKDocumentQuery;

    #[objc2::method(sel = "limit")]
    pub unsafe fn limit(&self) -> NSUInteger;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSSortDescriptor"
    ))]
    #[objc2::method(sel = "sortDescriptors", managed = "Other")]
    pub unsafe fn sortDescriptors(&self) -> Option<Id<NSArray<NSSortDescriptor>>>;

    #[objc2::method(sel = "includeDocumentData")]
    pub unsafe fn includeDocumentData(&self) -> bool;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSPredicate",
        feature = "Foundation_NSSortDescriptor",
        feature = "HealthKit_HKDocumentSample",
        feature = "HealthKit_HKDocumentType"
    ))]
    #[objc2::method(
        sel = "initWithDocumentType:predicate:limit:sortDescriptors:includeDocumentData:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithDocumentType_predicate_limit_sortDescriptors_includeDocumentData_resultsHandler(
        this: Option<Allocated<Self>>,
        document_type: &HKDocumentType,
        predicate: Option<&NSPredicate>,
        limit: NSUInteger,
        sort_descriptors: Option<&NSArray<NSSortDescriptor>>,
        include_document_data: bool,
        results_handler: &Block<
            (
                NonNull<HKDocumentQuery>,
                *mut NSArray<HKDocumentSample>,
                Bool,
                *mut NSError,
            ),
            (),
        >,
    ) -> Id<Self>;
}
