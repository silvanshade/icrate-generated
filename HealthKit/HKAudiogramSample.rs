//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKSample,
    unsafe inherits = [
        HKObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAudiogramSample")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKAudiogramSample;
}

#[cfg(feature = "HealthKit_HKAudiogramSample")]
unsafe impl NSCoding for HKAudiogramSample {}

#[cfg(feature = "HealthKit_HKAudiogramSample")]
unsafe impl NSObjectProtocol for HKAudiogramSample {}

#[cfg(feature = "HealthKit_HKAudiogramSample")]
unsafe impl NSSecureCoding for HKAudiogramSample {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAudiogramSample")]
    pub type HKAudiogramSample;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "HealthKit_HKAudiogramSensitivityPoint"
    ))]
    #[objc2::method(sel = "sensitivityPoints", managed = "Other")]
    pub unsafe fn sensitivityPoints(&self) -> Id<NSArray<HKAudiogramSensitivityPoint>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSDate",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString",
        feature = "HealthKit_HKAudiogramSensitivityPoint"
    ))]
    #[objc2::method(
        sel = "audiogramSampleWithSensitivityPoints:startDate:endDate:metadata:",
        managed = "Other"
    )]
    pub unsafe fn audiogramSampleWithSensitivityPoints_startDate_endDate_metadata(
        sensitivity_points: &NSArray<HKAudiogramSensitivityPoint>,
        start_date: &NSDate,
        end_date: &NSDate,
        metadata: Option<&NSDictionary<NSString, Object>>,
    ) -> Id<Self>;
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAudiogramSensitivityPoint")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKAudiogramSensitivityPoint;
}

#[cfg(feature = "HealthKit_HKAudiogramSensitivityPoint")]
unsafe impl NSObjectProtocol for HKAudiogramSensitivityPoint {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAudiogramSensitivityPoint")]
    pub type HKAudiogramSensitivityPoint;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "frequency", managed = "Other")]
    pub unsafe fn frequency(&self) -> Id<HKQuantity>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "leftEarSensitivity", managed = "Other")]
    pub unsafe fn leftEarSensitivity(&self) -> Option<Id<HKQuantity>>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "rightEarSensitivity", managed = "Other")]
    pub unsafe fn rightEarSensitivity(&self) -> Option<Id<HKQuantity>>;

    #[cfg(all(feature = "Foundation_NSError", feature = "HealthKit_HKQuantity"))]
    #[objc2::method(
        sel = "sensitivityPointWithFrequency:leftEarSensitivity:rightEarSensitivity:error:",
        managed = "Other",
        throws
    )]
    pub unsafe fn sensitivityPointWithFrequency_leftEarSensitivity_rightEarSensitivity_error(
        frequency: &HKQuantity,
        left_ear_sensitivity: Option<&HKQuantity>,
        right_ear_sensitivity: Option<&HKQuantity>,
    ) -> Result<Id<Self>, Id<NSError>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
