//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

extern_static!(HKObjectQueryNoLimit: NSUInteger = 0);

#[objc2::interface(
    unsafe super = HKQuery,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKSampleQuery")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKSampleQuery;
}

#[cfg(feature = "HealthKit_HKSampleQuery")]
unsafe impl NSObjectProtocol for HKSampleQuery {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKSampleQuery")]
    pub type HKSampleQuery;

    #[objc2::method(sel = "limit")]
    pub unsafe fn limit(&self) -> NSUInteger;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSSortDescriptor"
    ))]
    #[objc2::method(sel = "sortDescriptors", managed = "Other")]
    pub unsafe fn sortDescriptors(&self) -> Option<Id<NSArray<NSSortDescriptor>>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSPredicate",
        feature = "Foundation_NSSortDescriptor",
        feature = "HealthKit_HKSample",
        feature = "HealthKit_HKSampleType"
    ))]
    #[objc2::method(
        sel = "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithSampleType_predicate_limit_sortDescriptors_resultsHandler(
        this: Option<Allocated<Self>>,
        sample_type: &HKSampleType,
        predicate: Option<&NSPredicate>,
        limit: NSUInteger,
        sort_descriptors: Option<&NSArray<NSSortDescriptor>>,
        results_handler: &Block<(NonNull<HKSampleQuery>, *mut NSArray<HKSample>, *mut NSError), ()>,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKQueryDescriptor",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(
        sel = "initWithQueryDescriptors:limit:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithQueryDescriptors_limit_resultsHandler(
        this: Option<Allocated<Self>>,
        query_descriptors: &NSArray<HKQueryDescriptor>,
        limit: NSInteger,
        results_handler: &Block<(NonNull<HKSampleQuery>, *mut NSArray<HKSample>, *mut NSError), ()>,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSSortDescriptor",
        feature = "HealthKit_HKQueryDescriptor",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(
        sel = "initWithQueryDescriptors:limit:sortDescriptors:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithQueryDescriptors_limit_sortDescriptors_resultsHandler(
        this: Option<Allocated<Self>>,
        query_descriptors: &NSArray<HKQueryDescriptor>,
        limit: NSInteger,
        sort_descriptors: &NSArray<NSSortDescriptor>,
        results_handler: &Block<(NonNull<HKSampleQuery>, *mut NSArray<HKSample>, *mut NSError), ()>,
    ) -> Id<Self>;
}
