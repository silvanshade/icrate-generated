//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum HKPrismBase {
    HKPrismBaseNone = 0,
    HKPrismBaseUp = 1,
    HKPrismBaseDown = 2,
    HKPrismBaseIn = 3,
    HKPrismBaseOut = 4,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum HKVisionEye {
    HKVisionEyeLeft = 1,
    HKVisionEyeRight = 2,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKVisionPrism")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKVisionPrism;
}

#[cfg(feature = "HealthKit_HKVisionPrism")]
unsafe impl NSCoding for HKVisionPrism {}

#[cfg(feature = "HealthKit_HKVisionPrism")]
unsafe impl NSObjectProtocol for HKVisionPrism {}

#[cfg(feature = "HealthKit_HKVisionPrism")]
unsafe impl NSSecureCoding for HKVisionPrism {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKVisionPrism")]
    pub type HKVisionPrism;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "amount", managed = "Other")]
    pub unsafe fn amount(&self) -> Id<HKQuantity>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "angle", managed = "Other")]
    pub unsafe fn angle(&self) -> Id<HKQuantity>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "verticalAmount", managed = "Other")]
    pub unsafe fn verticalAmount(&self) -> Id<HKQuantity>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "horizontalAmount", managed = "Other")]
    pub unsafe fn horizontalAmount(&self) -> Id<HKQuantity>;

    #[objc2::method(sel = "verticalBase")]
    pub unsafe fn verticalBase(&self) -> HKPrismBase;

    #[objc2::method(sel = "horizontalBase")]
    pub unsafe fn horizontalBase(&self) -> HKPrismBase;

    #[objc2::method(sel = "eye")]
    pub unsafe fn eye(&self) -> HKVisionEye;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "initWithAmount:angle:eye:", managed = "Init")]
    pub unsafe fn initWithAmount_angle_eye(
        this: Option<Allocated<Self>>,
        amount: &HKQuantity,
        angle: &HKQuantity,
        eye: HKVisionEye,
    ) -> Id<Self>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(
        sel = "initWithVerticalAmount:verticalBase:horizontalAmount:horizontalBase:eye:",
        managed = "Init"
    )]
    pub unsafe fn initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye(
        this: Option<Allocated<Self>>,
        vertical_amount: &HKQuantity,
        vertical_base: HKPrismBase,
        horizontal_amount: &HKQuantity,
        horizontal_base: HKPrismBase,
        eye: HKVisionEye,
    ) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}
