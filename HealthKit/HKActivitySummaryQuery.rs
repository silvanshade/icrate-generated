//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKQuery,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKActivitySummaryQuery")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKActivitySummaryQuery;
}

#[cfg(feature = "HealthKit_HKActivitySummaryQuery")]
unsafe impl NSObjectProtocol for HKActivitySummaryQuery {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKActivitySummaryQuery")]
    pub type HKActivitySummaryQuery;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKActivitySummary"
    ))]
    #[objc2::method(sel = "updateHandler")]
    pub unsafe fn updateHandler(
        &self,
    ) -> *mut Block<
        (
            NonNull<HKActivitySummaryQuery>,
            *mut NSArray<HKActivitySummary>,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKActivitySummary"
    ))]
    #[objc2::method(sel = "setUpdateHandler:")]
    pub unsafe fn setUpdateHandler(
        &self,
        update_handler: Option<
            &Block<
                (
                    NonNull<HKActivitySummaryQuery>,
                    *mut NSArray<HKActivitySummary>,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSPredicate",
        feature = "HealthKit_HKActivitySummary"
    ))]
    #[objc2::method(sel = "initWithPredicate:resultsHandler:", managed = "Init")]
    pub unsafe fn initWithPredicate_resultsHandler(
        this: Option<Allocated<Self>>,
        predicate: Option<&NSPredicate>,
        handler: &Block<
            (
                NonNull<HKActivitySummaryQuery>,
                *mut NSArray<HKActivitySummary>,
                *mut NSError,
            ),
            (),
        >,
    ) -> Id<Self>;
}
