//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKFHIRVersion")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKFHIRVersion;
}

#[cfg(feature = "HealthKit_HKFHIRVersion")]
unsafe impl NSCoding for HKFHIRVersion {}

#[cfg(feature = "HealthKit_HKFHIRVersion")]
unsafe impl NSObjectProtocol for HKFHIRVersion {}

#[cfg(feature = "HealthKit_HKFHIRVersion")]
unsafe impl NSSecureCoding for HKFHIRVersion {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKFHIRVersion")]
    pub type HKFHIRVersion;

    #[objc2::method(sel = "majorVersion")]
    pub unsafe fn majorVersion(&self) -> NSInteger;

    #[objc2::method(sel = "minorVersion")]
    pub unsafe fn minorVersion(&self) -> NSInteger;

    #[objc2::method(sel = "patchVersion")]
    pub unsafe fn patchVersion(&self) -> NSInteger;

    #[objc2::method(sel = "FHIRRelease", managed = "Other")]
    pub unsafe fn FHIRRelease(&self) -> Id<HKFHIRRelease>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "stringRepresentation", managed = "Other")]
    pub unsafe fn stringRepresentation(&self) -> Id<NSString>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "versionFromVersionString:error:", managed = "Other", throws)]
    pub unsafe fn versionFromVersionString_error(
        version_string: &NSString,
    ) -> Result<Id<Self>, Id<NSError>>;

    #[objc2::method(sel = "primaryDSTU2Version", managed = "Other")]
    pub unsafe fn primaryDSTU2Version() -> Id<Self>;

    #[objc2::method(sel = "primaryR4Version", managed = "Other")]
    pub unsafe fn primaryR4Version() -> Id<Self>;
}
