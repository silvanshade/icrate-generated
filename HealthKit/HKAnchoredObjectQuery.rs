//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKQuery,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAnchoredObjectQuery")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKAnchoredObjectQuery;
}

#[cfg(feature = "HealthKit_HKAnchoredObjectQuery")]
unsafe impl NSObjectProtocol for HKAnchoredObjectQuery {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKAnchoredObjectQuery")]
    pub type HKAnchoredObjectQuery;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKDeletedObject",
        feature = "HealthKit_HKQueryAnchor",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(sel = "updateHandler")]
    pub unsafe fn updateHandler(
        &self,
    ) -> *mut Block<
        (
            NonNull<HKAnchoredObjectQuery>,
            *mut NSArray<HKSample>,
            *mut NSArray<HKDeletedObject>,
            *mut HKQueryAnchor,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKDeletedObject",
        feature = "HealthKit_HKQueryAnchor",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(sel = "setUpdateHandler:")]
    pub unsafe fn setUpdateHandler(
        &self,
        update_handler: Option<
            &Block<
                (
                    NonNull<HKAnchoredObjectQuery>,
                    *mut NSArray<HKSample>,
                    *mut NSArray<HKDeletedObject>,
                    *mut HKQueryAnchor,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSPredicate",
        feature = "HealthKit_HKDeletedObject",
        feature = "HealthKit_HKQueryAnchor",
        feature = "HealthKit_HKSample",
        feature = "HealthKit_HKSampleType"
    ))]
    #[objc2::method(
        sel = "initWithType:predicate:anchor:limit:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithType_predicate_anchor_limit_resultsHandler(
        this: Option<Allocated<Self>>,
        r#type: &HKSampleType,
        predicate: Option<&NSPredicate>,
        anchor: Option<&HKQueryAnchor>,
        limit: NSUInteger,
        handler: &Block<
            (
                NonNull<HKAnchoredObjectQuery>,
                *mut NSArray<HKSample>,
                *mut NSArray<HKDeletedObject>,
                *mut HKQueryAnchor,
                *mut NSError,
            ),
            (),
        >,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "Foundation_NSPredicate",
        feature = "HealthKit_HKSample",
        feature = "HealthKit_HKSampleType"
    ))]
    #[deprecated]
    #[objc2::method(
        sel = "initWithType:predicate:anchor:limit:completionHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithType_predicate_anchor_limit_completionHandler(
        this: Option<Allocated<Self>>,
        r#type: &HKSampleType,
        predicate: Option<&NSPredicate>,
        anchor: NSUInteger,
        limit: NSUInteger,
        handler: &Block<
            (
                NonNull<HKAnchoredObjectQuery>,
                *mut NSArray<HKSample>,
                NSUInteger,
                *mut NSError,
            ),
            (),
        >,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKDeletedObject",
        feature = "HealthKit_HKQueryAnchor",
        feature = "HealthKit_HKQueryDescriptor",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(
        sel = "initWithQueryDescriptors:anchor:limit:resultsHandler:",
        managed = "Init"
    )]
    pub unsafe fn initWithQueryDescriptors_anchor_limit_resultsHandler(
        this: Option<Allocated<Self>>,
        query_descriptors: &NSArray<HKQueryDescriptor>,
        anchor: Option<&HKQueryAnchor>,
        limit: NSInteger,
        handler: &Block<
            (
                NonNull<HKAnchoredObjectQuery>,
                *mut NSArray<HKSample>,
                *mut NSArray<HKDeletedObject>,
                *mut HKQueryAnchor,
                *mut NSError,
            ),
            (),
        >,
    ) -> Id<Self>;
}
