//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutBuilder")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKWorkoutBuilder;
}

#[cfg(feature = "HealthKit_HKWorkoutBuilder")]
unsafe impl NSObjectProtocol for HKWorkoutBuilder {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutBuilder")]
    pub type HKWorkoutBuilder;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "HealthKit_HKDevice")]
    #[objc2::method(sel = "device", managed = "Other")]
    pub unsafe fn device(&self) -> Option<Id<HKDevice>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "startDate", managed = "Other")]
    pub unsafe fn startDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "endDate", managed = "Other")]
    pub unsafe fn endDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
    #[objc2::method(sel = "workoutConfiguration", managed = "Other")]
    pub unsafe fn workoutConfiguration(&self) -> Id<HKWorkoutConfiguration>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "metadata", managed = "Other")]
    pub unsafe fn metadata(&self) -> Id<NSDictionary<NSString, Object>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "HealthKit_HKWorkoutEvent"))]
    #[objc2::method(sel = "workoutEvents", managed = "Other")]
    pub unsafe fn workoutEvents(&self) -> Id<NSArray<HKWorkoutEvent>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "HealthKit_HKWorkoutActivity"
    ))]
    #[objc2::method(sel = "workoutActivities", managed = "Other")]
    pub unsafe fn workoutActivities(&self) -> Id<NSArray<HKWorkoutActivity>>;

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "HealthKit_HKQuantityType",
        feature = "HealthKit_HKStatistics"
    ))]
    #[objc2::method(sel = "allStatistics", managed = "Other")]
    pub unsafe fn allStatistics(&self) -> Id<NSDictionary<HKQuantityType, HKStatistics>>;

    #[cfg(all(
        feature = "HealthKit_HKDevice",
        feature = "HealthKit_HKHealthStore",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[objc2::method(sel = "initWithHealthStore:configuration:device:", managed = "Init")]
    pub unsafe fn initWithHealthStore_configuration_device(
        this: Option<Allocated<Self>>,
        health_store: &HKHealthStore,
        configuration: &HKWorkoutConfiguration,
        device: Option<&HKDevice>,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSDate", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "beginCollectionWithStartDate:completion:")]
    pub unsafe fn beginCollectionWithStartDate_completion(
        &self,
        start_date: &NSDate,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKSample"
    ))]
    #[objc2::method(sel = "addSamples:completion:")]
    pub unsafe fn addSamples_completion(
        &self,
        samples: &NSArray<HKSample>,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError",
        feature = "HealthKit_HKWorkoutEvent"
    ))]
    #[objc2::method(sel = "addWorkoutEvents:completion:")]
    pub unsafe fn addWorkoutEvents_completion(
        &self,
        workout_events: &NSArray<HKWorkoutEvent>,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "addMetadata:completion:")]
    pub unsafe fn addMetadata_completion(
        &self,
        metadata: &NSDictionary<NSString, Object>,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKWorkoutActivity"
    ))]
    #[objc2::method(sel = "addWorkoutActivity:completion:")]
    pub unsafe fn addWorkoutActivity_completion(
        &self,
        workout_activity: &HKWorkoutActivity,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "Foundation_NSError",
        feature = "Foundation_NSUUID"
    ))]
    #[objc2::method(sel = "updateActivityWithUUID:endDate:completion:")]
    pub unsafe fn updateActivityWithUUID_endDate_completion(
        &self,
        uuid: &NSUUID,
        end_date: &NSDate,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString",
        feature = "Foundation_NSUUID"
    ))]
    #[objc2::method(sel = "updateActivityWithUUID:addMedatata:completion:")]
    pub unsafe fn updateActivityWithUUID_addMedatata_completion(
        &self,
        uuid: &NSUUID,
        metadata: &NSDictionary<NSString, Object>,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSDate", feature = "Foundation_NSError"))]
    #[objc2::method(sel = "endCollectionWithEndDate:completion:")]
    pub unsafe fn endCollectionWithEndDate_completion(
        &self,
        end_date: &NSDate,
        completion: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(feature = "Foundation_NSError", feature = "HealthKit_HKWorkout"))]
    #[objc2::method(sel = "finishWorkoutWithCompletion:")]
    pub unsafe fn finishWorkoutWithCompletion(
        &self,
        completion: &Block<(*mut HKWorkout, *mut NSError), ()>,
    );

    #[objc2::method(sel = "discardWorkout")]
    pub unsafe fn discardWorkout(&self);

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "elapsedTimeAtDate:")]
    pub unsafe fn elapsedTimeAtDate(&self, date: &NSDate) -> NSTimeInterval;

    #[cfg(all(
        feature = "HealthKit_HKQuantityType",
        feature = "HealthKit_HKStatistics"
    ))]
    #[objc2::method(sel = "statisticsForType:", managed = "Other")]
    pub unsafe fn statisticsForType(
        &self,
        quantity_type: &HKQuantityType,
    ) -> Option<Id<HKStatistics>>;

    #[cfg(all(
        feature = "HealthKit_HKSeriesBuilder",
        feature = "HealthKit_HKSeriesType"
    ))]
    #[objc2::method(sel = "seriesBuilderForType:", managed = "Other")]
    pub unsafe fn seriesBuilderForType(
        &self,
        series_type: &HKSeriesType,
    ) -> Option<Id<HKSeriesBuilder>>;
}
