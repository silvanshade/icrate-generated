//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKStatisticsCollection")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKStatisticsCollection;
}

#[cfg(feature = "HealthKit_HKStatisticsCollection")]
unsafe impl NSObjectProtocol for HKStatisticsCollection {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKStatisticsCollection")]
    pub type HKStatisticsCollection;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSDate", feature = "HealthKit_HKStatistics"))]
    #[objc2::method(sel = "statisticsForDate:", managed = "Other")]
    pub unsafe fn statisticsForDate(&self, date: &NSDate) -> Option<Id<HKStatistics>>;

    #[cfg(all(feature = "Foundation_NSDate", feature = "HealthKit_HKStatistics"))]
    #[objc2::method(sel = "enumerateStatisticsFromDate:toDate:withBlock:")]
    pub unsafe fn enumerateStatisticsFromDate_toDate_withBlock(
        &self,
        start_date: &NSDate,
        end_date: &NSDate,
        block: &Block<(NonNull<HKStatistics>, NonNull<Bool>), ()>,
    );

    #[cfg(all(feature = "Foundation_NSArray", feature = "HealthKit_HKStatistics"))]
    #[objc2::method(sel = "statistics", managed = "Other")]
    pub unsafe fn statistics(&self) -> Id<NSArray<HKStatistics>>;

    #[cfg(all(feature = "Foundation_NSSet", feature = "HealthKit_HKSource"))]
    #[objc2::method(sel = "sources", managed = "Other")]
    pub unsafe fn sources(&self) -> Id<NSSet<HKSource>>;
}

#[objc2::interface(
    unsafe super = HKQuery,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKStatisticsCollectionQuery")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKStatisticsCollectionQuery;
}

#[cfg(feature = "HealthKit_HKStatisticsCollectionQuery")]
unsafe impl NSObjectProtocol for HKStatisticsCollectionQuery {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKStatisticsCollectionQuery")]
    pub type HKStatisticsCollectionQuery;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "anchorDate", managed = "Other")]
    pub unsafe fn anchorDate(&self) -> Id<NSDate>;

    #[objc2::method(sel = "options")]
    pub unsafe fn options(&self) -> HKStatisticsOptions;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "intervalComponents", managed = "Other")]
    pub unsafe fn intervalComponents(&self) -> Id<NSDateComponents>;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKStatisticsCollection"
    ))]
    #[objc2::method(sel = "initialResultsHandler")]
    pub unsafe fn initialResultsHandler(
        &self,
    ) -> *mut Block<
        (
            NonNull<HKStatisticsCollectionQuery>,
            *mut HKStatisticsCollection,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKStatisticsCollection"
    ))]
    #[objc2::method(sel = "setInitialResultsHandler:")]
    pub unsafe fn setInitialResultsHandler(
        &self,
        initial_results_handler: Option<
            &Block<
                (
                    NonNull<HKStatisticsCollectionQuery>,
                    *mut HKStatisticsCollection,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKStatistics",
        feature = "HealthKit_HKStatisticsCollection"
    ))]
    #[objc2::method(sel = "statisticsUpdateHandler")]
    pub unsafe fn statisticsUpdateHandler(
        &self,
    ) -> *mut Block<
        (
            NonNull<HKStatisticsCollectionQuery>,
            *mut HKStatistics,
            *mut HKStatisticsCollection,
            *mut NSError,
        ),
        (),
    >;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "HealthKit_HKStatistics",
        feature = "HealthKit_HKStatisticsCollection"
    ))]
    #[objc2::method(sel = "setStatisticsUpdateHandler:")]
    pub unsafe fn setStatisticsUpdateHandler(
        &self,
        statistics_update_handler: Option<
            &Block<
                (
                    NonNull<HKStatisticsCollectionQuery>,
                    *mut HKStatistics,
                    *mut HKStatisticsCollection,
                    *mut NSError,
                ),
                (),
            >,
        >,
    );

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "Foundation_NSDateComponents",
        feature = "Foundation_NSPredicate",
        feature = "HealthKit_HKQuantityType"
    ))]
    #[objc2::method(
        sel = "initWithQuantityType:quantitySamplePredicate:options:anchorDate:intervalComponents:",
        managed = "Init"
    )]
    pub unsafe fn initWithQuantityType_quantitySamplePredicate_options_anchorDate_intervalComponents(
        this: Option<Allocated<Self>>,
        quantity_type: &HKQuantityType,
        quantity_sample_predicate: Option<&NSPredicate>,
        options: HKStatisticsOptions,
        anchor_date: &NSDate,
        interval_components: &NSDateComponents,
    ) -> Id<Self>;
}
