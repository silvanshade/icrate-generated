//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum HKWorkoutSessionLocationType {
    HKWorkoutSessionLocationTypeUnknown = 1,
    HKWorkoutSessionLocationTypeIndoor = 2,
    HKWorkoutSessionLocationTypeOutdoor = 3,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKWorkoutConfiguration;
}

#[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
unsafe impl NSCoding for HKWorkoutConfiguration {}

#[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
unsafe impl NSObjectProtocol for HKWorkoutConfiguration {}

#[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
unsafe impl NSSecureCoding for HKWorkoutConfiguration {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKWorkoutConfiguration")]
    pub type HKWorkoutConfiguration;

    #[objc2::method(sel = "activityType")]
    pub unsafe fn activityType(&self) -> HKWorkoutActivityType;

    #[objc2::method(sel = "setActivityType:")]
    pub unsafe fn setActivityType(&self, activity_type: HKWorkoutActivityType);

    #[objc2::method(sel = "locationType")]
    pub unsafe fn locationType(&self) -> HKWorkoutSessionLocationType;

    #[objc2::method(sel = "setLocationType:")]
    pub unsafe fn setLocationType(&self, location_type: HKWorkoutSessionLocationType);

    #[objc2::method(sel = "swimmingLocationType")]
    pub unsafe fn swimmingLocationType(&self) -> HKWorkoutSwimmingLocationType;

    #[objc2::method(sel = "setSwimmingLocationType:")]
    pub unsafe fn setSwimmingLocationType(
        &self,
        swimming_location_type: HKWorkoutSwimmingLocationType,
    );

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "lapLength", managed = "Other")]
    pub unsafe fn lapLength(&self) -> Option<Id<HKQuantity>>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "setLapLength:")]
    pub unsafe fn setLapLength(&self, lap_length: Option<&HKQuantity>);
}
