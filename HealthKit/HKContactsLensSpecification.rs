//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = HKLensSpecification,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKContactsLensSpecification")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKContactsLensSpecification;
}

#[cfg(feature = "HealthKit_HKContactsLensSpecification")]
unsafe impl NSCoding for HKContactsLensSpecification {}

#[cfg(feature = "HealthKit_HKContactsLensSpecification")]
unsafe impl NSObjectProtocol for HKContactsLensSpecification {}

#[cfg(feature = "HealthKit_HKContactsLensSpecification")]
unsafe impl NSSecureCoding for HKContactsLensSpecification {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKContactsLensSpecification")]
    pub type HKContactsLensSpecification;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "baseCurve", managed = "Other")]
    pub unsafe fn baseCurve(&self) -> Option<Id<HKQuantity>>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(sel = "diameter", managed = "Other")]
    pub unsafe fn diameter(&self) -> Option<Id<HKQuantity>>;

    #[cfg(feature = "HealthKit_HKQuantity")]
    #[objc2::method(
        sel = "initWithSphere:cylinder:axis:addPower:baseCurve:diameter:",
        managed = "Init"
    )]
    pub unsafe fn initWithSphere_cylinder_axis_addPower_baseCurve_diameter(
        this: Option<Allocated<Self>>,
        sphere: &HKQuantity,
        cylinder: Option<&HKQuantity>,
        axis: Option<&HKQuantity>,
        add_power: Option<&HKQuantity>,
        base_curve: Option<&HKQuantity>,
        diameter: Option<&HKQuantity>,
    ) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;
}
