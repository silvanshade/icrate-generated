//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKObject")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKObject;
}

#[cfg(feature = "HealthKit_HKObject")]
unsafe impl NSCoding for HKObject {}

#[cfg(feature = "HealthKit_HKObject")]
unsafe impl NSObjectProtocol for HKObject {}

#[cfg(feature = "HealthKit_HKObject")]
unsafe impl NSSecureCoding for HKObject {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKObject")]
    pub type HKObject;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[cfg(feature = "HealthKit_HKSource")]
    #[deprecated]
    #[objc2::method(sel = "source", managed = "Other")]
    pub unsafe fn source(&self) -> Id<HKSource>;

    #[cfg(feature = "HealthKit_HKSourceRevision")]
    #[objc2::method(sel = "sourceRevision", managed = "Other")]
    pub unsafe fn sourceRevision(&self) -> Id<HKSourceRevision>;

    #[cfg(feature = "HealthKit_HKDevice")]
    #[objc2::method(sel = "device", managed = "Other")]
    pub unsafe fn device(&self) -> Option<Id<HKDevice>>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "metadata", managed = "Other")]
    pub unsafe fn metadata(&self) -> Option<Id<NSDictionary<NSString, Object>>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

extern_static!(HKPredicateKeyPathUUID: &'static NSString);

extern_static!(HKPredicateKeyPathSource: &'static NSString);

extern_static!(HKPredicateKeyPathMetadata: &'static NSString);

extern_static!(HKPredicateKeyPathCorrelation: &'static NSString);

extern_static!(HKPredicateKeyPathWorkout: &'static NSString);

extern_static!(HKPredicateKeyPathDevice: &'static NSString);

extern_static!(HKPredicateKeyPathSourceRevision: &'static NSString);
