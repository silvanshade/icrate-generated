//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKLiveWorkoutDataSource")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type HKLiveWorkoutDataSource;
}

#[cfg(feature = "HealthKit_HKLiveWorkoutDataSource")]
unsafe impl NSObjectProtocol for HKLiveWorkoutDataSource {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "HealthKit_HKLiveWorkoutDataSource")]
    pub type HKLiveWorkoutDataSource;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSSet", feature = "HealthKit_HKQuantityType"))]
    #[objc2::method(sel = "typesToCollect", managed = "Other")]
    pub unsafe fn typesToCollect(&self) -> Id<NSSet<HKQuantityType>>;

    #[cfg(all(
        feature = "HealthKit_HKHealthStore",
        feature = "HealthKit_HKWorkoutConfiguration"
    ))]
    #[objc2::method(sel = "initWithHealthStore:workoutConfiguration:", managed = "Init")]
    pub unsafe fn initWithHealthStore_workoutConfiguration(
        this: Option<Allocated<Self>>,
        health_store: &HKHealthStore,
        configuration: Option<&HKWorkoutConfiguration>,
    ) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSPredicate",
        feature = "HealthKit_HKQuantityType"
    ))]
    #[objc2::method(sel = "enableCollectionForType:predicate:")]
    pub unsafe fn enableCollectionForType_predicate(
        &self,
        quantity_type: &HKQuantityType,
        predicate: Option<&NSPredicate>,
    );

    #[cfg(feature = "HealthKit_HKQuantityType")]
    #[objc2::method(sel = "disableCollectionForType:")]
    pub unsafe fn disableCollectionForType(&self, quantity_type: &HKQuantityType);
}
