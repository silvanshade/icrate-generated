//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::LinkPresentation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "LinkPresentation_LPLinkMetadata")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type LPLinkMetadata;
}

#[cfg(feature = "LinkPresentation_LPLinkMetadata")]
unsafe impl NSCoding for LPLinkMetadata {}

#[cfg(feature = "LinkPresentation_LPLinkMetadata")]
unsafe impl NSObjectProtocol for LPLinkMetadata {}

#[cfg(feature = "LinkPresentation_LPLinkMetadata")]
unsafe impl NSSecureCoding for LPLinkMetadata {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "LinkPresentation_LPLinkMetadata")]
    pub type LPLinkMetadata;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "originalURL", managed = "Other")]
    pub unsafe fn originalURL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "setOriginalURL:")]
    pub unsafe fn setOriginalURL(&self, original_url: Option<&NSURL>);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "URL", managed = "Other")]
    pub unsafe fn URL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "setURL:")]
    pub unsafe fn setURL(&self, url: Option<&NSURL>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setTitle:")]
    pub unsafe fn setTitle(&self, title: Option<&NSString>);

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "iconProvider", managed = "Other")]
    pub unsafe fn iconProvider(&self) -> Option<Id<NSItemProvider>>;

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "setIconProvider:")]
    pub unsafe fn setIconProvider(&self, icon_provider: Option<&NSItemProvider>);

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "imageProvider", managed = "Other")]
    pub unsafe fn imageProvider(&self) -> Option<Id<NSItemProvider>>;

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "setImageProvider:")]
    pub unsafe fn setImageProvider(&self, image_provider: Option<&NSItemProvider>);

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "videoProvider", managed = "Other")]
    pub unsafe fn videoProvider(&self) -> Option<Id<NSItemProvider>>;

    #[cfg(feature = "Foundation_NSItemProvider")]
    #[objc2::method(sel = "setVideoProvider:")]
    pub unsafe fn setVideoProvider(&self, video_provider: Option<&NSItemProvider>);

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "remoteVideoURL", managed = "Other")]
    pub unsafe fn remoteVideoURL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "setRemoteVideoURL:")]
    pub unsafe fn setRemoteVideoURL(&self, remote_video_url: Option<&NSURL>);
}
