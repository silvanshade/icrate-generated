//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFMessagePortRef = *mut c_void;

ns_enum!(
    #[underlying(i32)]
    pub enum __anonymous__ {
        kCFMessagePortSuccess = 0,
        kCFMessagePortSendTimeout = -1,
        kCFMessagePortReceiveTimeout = -2,
        kCFMessagePortIsInvalid = -3,
        kCFMessagePortTransportError = -4,
        kCFMessagePortBecameInvalidError = -5,
    }
);

extern_struct!(
    #[encoding_name("?")]
    pub struct CFMessagePortContext {
        pub version: CFIndex,
        pub info: *mut c_void,
        pub retain: Option<unsafe extern "C" fn(*mut c_void) -> *mut c_void>,
        pub release: Option<unsafe extern "C" fn(*mut c_void)>,
        pub copyDescription: Option<unsafe extern "C" fn(*mut c_void) -> CFStringRef>,
    }
);

pub type CFMessagePortCallBack =
    Option<unsafe extern "C" fn(CFMessagePortRef, i32, CFDataRef, *mut c_void) -> CFDataRef>;

pub type CFMessagePortInvalidationCallBack =
    Option<unsafe extern "C" fn(CFMessagePortRef, *mut c_void)>;

extern_fn!(
    pub unsafe fn CFMessagePortGetTypeID() -> CFTypeID;
);

extern_fn!(
    pub unsafe fn CFMessagePortCreateLocal(
        allocator: CFAllocatorRef,
        name: CFStringRef,
        callout: CFMessagePortCallBack,
        context: *mut CFMessagePortContext,
        should_free_info: *mut Boolean,
    ) -> CFMessagePortRef;
);

extern_fn!(
    pub unsafe fn CFMessagePortCreateRemote(
        allocator: CFAllocatorRef,
        name: CFStringRef,
    ) -> CFMessagePortRef;
);

extern_fn!(
    pub unsafe fn CFMessagePortIsRemote(ms: CFMessagePortRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFMessagePortGetName(ms: CFMessagePortRef) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFMessagePortSetName(ms: CFMessagePortRef, new_name: CFStringRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFMessagePortGetContext(ms: CFMessagePortRef, context: *mut CFMessagePortContext);
);

extern_fn!(
    pub unsafe fn CFMessagePortInvalidate(ms: CFMessagePortRef);
);

extern_fn!(
    pub unsafe fn CFMessagePortIsValid(ms: CFMessagePortRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFMessagePortGetInvalidationCallBack(
        ms: CFMessagePortRef,
    ) -> CFMessagePortInvalidationCallBack;
);

extern_fn!(
    pub unsafe fn CFMessagePortSetInvalidationCallBack(
        ms: CFMessagePortRef,
        callout: CFMessagePortInvalidationCallBack,
    );
);

extern_fn!(
    pub unsafe fn CFMessagePortSendRequest(
        remote: CFMessagePortRef,
        msgid: i32,
        data: CFDataRef,
        send_timeout: CFTimeInterval,
        rcv_timeout: CFTimeInterval,
        reply_mode: CFStringRef,
        return_data: *mut CFDataRef,
    ) -> i32;
);

extern_fn!(
    pub unsafe fn CFMessagePortCreateRunLoopSource(
        allocator: CFAllocatorRef,
        local: CFMessagePortRef,
        order: CFIndex,
    ) -> CFRunLoopSourceRef;
);
