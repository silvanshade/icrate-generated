//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFBooleanRef = *mut c_void;

extern_static!(kCFBooleanTrue: CFBooleanRef);

extern_static!(kCFBooleanFalse: CFBooleanRef);

extern_fn!(
    pub unsafe fn CFBooleanGetTypeID() -> CFTypeID;
);

extern_fn!(
    pub unsafe fn CFBooleanGetValue(boolean: CFBooleanRef) -> Boolean;
);

ns_enum!(
    #[underlying(CFIndex)]
    pub enum CFNumberType {
        kCFNumberSInt8Type = 1,
        kCFNumberSInt16Type = 2,
        kCFNumberSInt32Type = 3,
        kCFNumberSInt64Type = 4,
        kCFNumberFloat32Type = 5,
        kCFNumberFloat64Type = 6,
        kCFNumberCharType = 7,
        kCFNumberShortType = 8,
        kCFNumberIntType = 9,
        kCFNumberLongType = 10,
        kCFNumberLongLongType = 11,
        kCFNumberFloatType = 12,
        kCFNumberDoubleType = 13,
        kCFNumberCFIndexType = 14,
        kCFNumberNSIntegerType = 15,
        kCFNumberCGFloatType = 16,
        kCFNumberMaxType = 16,
    }
);

pub type CFNumberRef = *mut c_void;

extern_static!(kCFNumberPositiveInfinity: CFNumberRef);

extern_static!(kCFNumberNegativeInfinity: CFNumberRef);

extern_static!(kCFNumberNaN: CFNumberRef);

extern_fn!(
    pub unsafe fn CFNumberGetTypeID() -> CFTypeID;
);

extern_fn!(
    pub unsafe fn CFNumberCreate(
        allocator: CFAllocatorRef,
        the_type: CFNumberType,
        value_ptr: *mut c_void,
    ) -> CFNumberRef;
);

extern_fn!(
    pub unsafe fn CFNumberGetType(number: CFNumberRef) -> CFNumberType;
);

extern_fn!(
    pub unsafe fn CFNumberGetByteSize(number: CFNumberRef) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFNumberIsFloatType(number: CFNumberRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFNumberGetValue(
        number: CFNumberRef,
        the_type: CFNumberType,
        value_ptr: *mut c_void,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFNumberCompare(
        number: CFNumberRef,
        other_number: CFNumberRef,
        context: *mut c_void,
    ) -> CFComparisonResult;
);
