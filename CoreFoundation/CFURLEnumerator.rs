//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFURLEnumeratorRef = *mut c_void;

extern_fn!(
    pub unsafe fn CFURLEnumeratorGetTypeID() -> CFTypeID;
);

ns_options!(
    #[underlying(CFOptionFlags)]
    pub enum CFURLEnumeratorOptions {
        kCFURLEnumeratorDefaultBehavior = 0,
        kCFURLEnumeratorDescendRecursively = 1 << 0,
        kCFURLEnumeratorSkipInvisibles = 1 << 1,
        kCFURLEnumeratorGenerateFileReferenceURLs = 1 << 2,
        kCFURLEnumeratorSkipPackageContents = 1 << 3,
        kCFURLEnumeratorIncludeDirectoriesPreOrder = 1 << 4,
        kCFURLEnumeratorIncludeDirectoriesPostOrder = 1 << 5,
        kCFURLEnumeratorGenerateRelativePathURLs = 1 << 6,
    }
);

extern_fn!(
    pub unsafe fn CFURLEnumeratorCreateForDirectoryURL(
        alloc: CFAllocatorRef,
        directory_url: CFURLRef,
        option: CFURLEnumeratorOptions,
        property_keys: CFArrayRef,
    ) -> CFURLEnumeratorRef;
);

extern_fn!(
    pub unsafe fn CFURLEnumeratorCreateForMountedVolumes(
        alloc: CFAllocatorRef,
        option: CFURLEnumeratorOptions,
        property_keys: CFArrayRef,
    ) -> CFURLEnumeratorRef;
);

ns_enum!(
    #[underlying(CFIndex)]
    pub enum CFURLEnumeratorResult {
        kCFURLEnumeratorSuccess = 1,
        kCFURLEnumeratorEnd = 2,
        kCFURLEnumeratorError = 3,
        kCFURLEnumeratorDirectoryPostOrderSuccess = 4,
    }
);

extern_fn!(
    pub unsafe fn CFURLEnumeratorGetNextURL(
        enumerator: CFURLEnumeratorRef,
        url: *mut CFURLRef,
        error: *mut CFErrorRef,
    ) -> CFURLEnumeratorResult;
);

extern_fn!(
    pub unsafe fn CFURLEnumeratorSkipDescendents(enumerator: CFURLEnumeratorRef);
);

extern_fn!(
    pub unsafe fn CFURLEnumeratorGetDescendentLevel(enumerator: CFURLEnumeratorRef) -> CFIndex;
);

extern_fn!(
    #[deprecated = "Use File System Events API instead"]
    pub unsafe fn CFURLEnumeratorGetSourceDidChange(enumerator: CFURLEnumeratorRef) -> Boolean;
);
