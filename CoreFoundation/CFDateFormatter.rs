//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFDateFormatterKey = CFStringRef;

pub type CFDateFormatterRef = *mut c_void;

extern_fn!(
    pub unsafe fn CFDateFormatterCreateDateFormatFromTemplate(
        allocator: CFAllocatorRef,
        tmplate: CFStringRef,
        options: CFOptionFlags,
        locale: CFLocaleRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetTypeID() -> CFTypeID;
);

ns_enum!(
    #[underlying(CFIndex)]
    pub enum CFDateFormatterStyle {
        kCFDateFormatterNoStyle = 0,
        kCFDateFormatterShortStyle = 1,
        kCFDateFormatterMediumStyle = 2,
        kCFDateFormatterLongStyle = 3,
        kCFDateFormatterFullStyle = 4,
    }
);

ns_options!(
    #[underlying(CFOptionFlags)]
    pub enum CFISO8601DateFormatOptions {
        kCFISO8601DateFormatWithYear = 1 << 0,
        kCFISO8601DateFormatWithMonth = 1 << 1,
        kCFISO8601DateFormatWithWeekOfYear = 1 << 2,
        kCFISO8601DateFormatWithDay = 1 << 4,
        kCFISO8601DateFormatWithTime = 1 << 5,
        kCFISO8601DateFormatWithTimeZone = 1 << 6,
        kCFISO8601DateFormatWithSpaceBetweenDateAndTime = 1 << 7,
        kCFISO8601DateFormatWithDashSeparatorInDate = 1 << 8,
        kCFISO8601DateFormatWithColonSeparatorInTime = 1 << 9,
        kCFISO8601DateFormatWithColonSeparatorInTimeZone = 1 << 10,
        kCFISO8601DateFormatWithFractionalSeconds = 1 << 11,
        kCFISO8601DateFormatWithFullDate = kCFISO8601DateFormatWithYear
            | kCFISO8601DateFormatWithMonth
            | kCFISO8601DateFormatWithDay
            | kCFISO8601DateFormatWithDashSeparatorInDate,
        kCFISO8601DateFormatWithFullTime = kCFISO8601DateFormatWithTime
            | kCFISO8601DateFormatWithColonSeparatorInTime
            | kCFISO8601DateFormatWithTimeZone
            | kCFISO8601DateFormatWithColonSeparatorInTimeZone,
        kCFISO8601DateFormatWithInternetDateTime =
            kCFISO8601DateFormatWithFullDate | kCFISO8601DateFormatWithFullTime,
    }
);

extern_fn!(
    pub unsafe fn CFDateFormatterCreateISO8601Formatter(
        allocator: CFAllocatorRef,
        format_options: CFISO8601DateFormatOptions,
    ) -> CFDateFormatterRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterCreate(
        allocator: CFAllocatorRef,
        locale: CFLocaleRef,
        date_style: CFDateFormatterStyle,
        time_style: CFDateFormatterStyle,
    ) -> CFDateFormatterRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetLocale(formatter: CFDateFormatterRef) -> CFLocaleRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetDateStyle(
        formatter: CFDateFormatterRef,
    ) -> CFDateFormatterStyle;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetTimeStyle(
        formatter: CFDateFormatterRef,
    ) -> CFDateFormatterStyle;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetFormat(formatter: CFDateFormatterRef) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterSetFormat(
        formatter: CFDateFormatterRef,
        format_string: CFStringRef,
    );
);

extern_fn!(
    pub unsafe fn CFDateFormatterCreateStringWithDate(
        allocator: CFAllocatorRef,
        formatter: CFDateFormatterRef,
        date: CFDateRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterCreateStringWithAbsoluteTime(
        allocator: CFAllocatorRef,
        formatter: CFDateFormatterRef,
        at: CFAbsoluteTime,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterCreateDateFromString(
        allocator: CFAllocatorRef,
        formatter: CFDateFormatterRef,
        string: CFStringRef,
        rangep: *mut CFRange,
    ) -> CFDateRef;
);

extern_fn!(
    pub unsafe fn CFDateFormatterGetAbsoluteTimeFromString(
        formatter: CFDateFormatterRef,
        string: CFStringRef,
        rangep: *mut CFRange,
        atp: *mut CFAbsoluteTime,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFDateFormatterSetProperty(
        formatter: CFDateFormatterRef,
        key: CFStringRef,
        value: CFTypeRef,
    );
);

extern_fn!(
    pub unsafe fn CFDateFormatterCopyProperty(
        formatter: CFDateFormatterRef,
        key: CFDateFormatterKey,
    ) -> CFTypeRef;
);

extern_static!(kCFDateFormatterIsLenient: CFDateFormatterKey);

extern_static!(kCFDateFormatterTimeZone: CFDateFormatterKey);

extern_static!(kCFDateFormatterCalendarName: CFDateFormatterKey);

extern_static!(kCFDateFormatterDefaultFormat: CFDateFormatterKey);

extern_static!(kCFDateFormatterTwoDigitStartDate: CFDateFormatterKey);

extern_static!(kCFDateFormatterDefaultDate: CFDateFormatterKey);

extern_static!(kCFDateFormatterCalendar: CFDateFormatterKey);

extern_static!(kCFDateFormatterEraSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterAMSymbol: CFDateFormatterKey);

extern_static!(kCFDateFormatterPMSymbol: CFDateFormatterKey);

extern_static!(kCFDateFormatterLongEraSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterVeryShortMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterStandaloneMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortStandaloneMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterVeryShortStandaloneMonthSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterVeryShortWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterStandaloneWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortStandaloneWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterVeryShortStandaloneWeekdaySymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterQuarterSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortQuarterSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterStandaloneQuarterSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterShortStandaloneQuarterSymbols: CFDateFormatterKey);

extern_static!(kCFDateFormatterGregorianStartDate: CFDateFormatterKey);

extern_static!(kCFDateFormatterDoesRelativeDateFormattingKey: CFDateFormatterKey);
