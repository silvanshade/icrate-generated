//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

ns_enum!(
    #[underlying(u32)]
    pub enum CFStringEncoding {
        kCFStringEncodingMacRoman = 0,
        kCFStringEncodingWindowsLatin1 = 0x0500,
        kCFStringEncodingISOLatin1 = 0x0201,
        kCFStringEncodingNextStepLatin = 0x0B01,
        kCFStringEncodingASCII = 0x0600,
        kCFStringEncodingUnicode = 0x0100,
        kCFStringEncodingUTF8 = 0x08000100,
        kCFStringEncodingNonLossyASCII = 0x0BFF,
        kCFStringEncodingUTF16 = 0x0100,
        kCFStringEncodingUTF16BE = 0x10000100,
        kCFStringEncodingUTF16LE = 0x14000100,
        kCFStringEncodingUTF32 = 0x0c000100,
        kCFStringEncodingUTF32BE = 0x18000100,
        kCFStringEncodingUTF32LE = 0x1c000100,
    }
);

extern_fn!(
    pub unsafe fn CFStringGetTypeID() -> CFTypeID;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithPascalString(
        alloc: CFAllocatorRef,
        p_str: ConstStr255Param,
        encoding: CFStringEncoding,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithCString(
        alloc: CFAllocatorRef,
        c_str: *mut c_char,
        encoding: CFStringEncoding,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithBytes(
        alloc: CFAllocatorRef,
        bytes: *mut u8,
        num_bytes: CFIndex,
        encoding: CFStringEncoding,
        is_external_representation: Boolean,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithCharacters(
        alloc: CFAllocatorRef,
        chars: *mut UniChar,
        num_chars: CFIndex,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithPascalStringNoCopy(
        alloc: CFAllocatorRef,
        p_str: ConstStr255Param,
        encoding: CFStringEncoding,
        contents_deallocator: CFAllocatorRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithCStringNoCopy(
        alloc: CFAllocatorRef,
        c_str: *mut c_char,
        encoding: CFStringEncoding,
        contents_deallocator: CFAllocatorRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithBytesNoCopy(
        alloc: CFAllocatorRef,
        bytes: *mut u8,
        num_bytes: CFIndex,
        encoding: CFStringEncoding,
        is_external_representation: Boolean,
        contents_deallocator: CFAllocatorRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithCharactersNoCopy(
        alloc: CFAllocatorRef,
        chars: *mut UniChar,
        num_chars: CFIndex,
        contents_deallocator: CFAllocatorRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithSubstring(
        alloc: CFAllocatorRef,
        str: CFStringRef,
        range: CFRange,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateCopy(alloc: CFAllocatorRef, the_string: CFStringRef)
        -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateMutable(
        alloc: CFAllocatorRef,
        max_length: CFIndex,
    ) -> CFMutableStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateMutableCopy(
        alloc: CFAllocatorRef,
        max_length: CFIndex,
        the_string: CFStringRef,
    ) -> CFMutableStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateMutableWithExternalCharactersNoCopy(
        alloc: CFAllocatorRef,
        chars: *mut UniChar,
        num_chars: CFIndex,
        capacity: CFIndex,
        external_characters_allocator: CFAllocatorRef,
    ) -> CFMutableStringRef;
);

extern_fn!(
    pub unsafe fn CFStringGetLength(the_string: CFStringRef) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringGetCharacterAtIndex(the_string: CFStringRef, idx: CFIndex) -> UniChar;
);

extern_fn!(
    pub unsafe fn CFStringGetCharacters(
        the_string: CFStringRef,
        range: CFRange,
        buffer: *mut UniChar,
    );
);

extern_fn!(
    pub unsafe fn CFStringGetPascalString(
        the_string: CFStringRef,
        buffer: StringPtr,
        buffer_size: CFIndex,
        encoding: CFStringEncoding,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetCString(
        the_string: CFStringRef,
        buffer: *mut c_char,
        buffer_size: CFIndex,
        encoding: CFStringEncoding,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetPascalStringPtr(
        the_string: CFStringRef,
        encoding: CFStringEncoding,
    ) -> ConstStringPtr;
);

extern_fn!(
    pub unsafe fn CFStringGetCStringPtr(
        the_string: CFStringRef,
        encoding: CFStringEncoding,
    ) -> *mut c_char;
);

extern_fn!(
    pub unsafe fn CFStringGetCharactersPtr(the_string: CFStringRef) -> *mut UniChar;
);

extern_fn!(
    pub unsafe fn CFStringGetBytes(
        the_string: CFStringRef,
        range: CFRange,
        encoding: CFStringEncoding,
        loss_byte: u8,
        is_external_representation: Boolean,
        buffer: *mut u8,
        max_buf_len: CFIndex,
        used_buf_len: *mut CFIndex,
    ) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringCreateFromExternalRepresentation(
        alloc: CFAllocatorRef,
        data: CFDataRef,
        encoding: CFStringEncoding,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateExternalRepresentation(
        alloc: CFAllocatorRef,
        the_string: CFStringRef,
        encoding: CFStringEncoding,
        loss_byte: u8,
    ) -> CFDataRef;
);

extern_fn!(
    pub unsafe fn CFStringGetSmallestEncoding(the_string: CFStringRef) -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringGetFastestEncoding(the_string: CFStringRef) -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringGetSystemEncoding() -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringGetMaximumSizeForEncoding(
        length: CFIndex,
        encoding: CFStringEncoding,
    ) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringGetFileSystemRepresentation(
        string: CFStringRef,
        buffer: *mut c_char,
        max_buf_len: CFIndex,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetMaximumSizeOfFileSystemRepresentation(string: CFStringRef) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringCreateWithFileSystemRepresentation(
        alloc: CFAllocatorRef,
        buffer: *mut c_char,
    ) -> CFStringRef;
);

ns_options!(
    #[underlying(CFOptionFlags)]
    pub enum CFStringCompareFlags {
        kCFCompareCaseInsensitive = 1,
        kCFCompareBackwards = 4,
        kCFCompareAnchored = 8,
        kCFCompareNonliteral = 16,
        kCFCompareLocalized = 32,
        kCFCompareNumerically = 64,
        kCFCompareDiacriticInsensitive = 128,
        kCFCompareWidthInsensitive = 256,
        kCFCompareForcedOrdering = 512,
    }
);

extern_fn!(
    pub unsafe fn CFStringCompareWithOptionsAndLocale(
        the_string1: CFStringRef,
        the_string2: CFStringRef,
        range_to_compare: CFRange,
        compare_options: CFStringCompareFlags,
        locale: CFLocaleRef,
    ) -> CFComparisonResult;
);

extern_fn!(
    pub unsafe fn CFStringCompareWithOptions(
        the_string1: CFStringRef,
        the_string2: CFStringRef,
        range_to_compare: CFRange,
        compare_options: CFStringCompareFlags,
    ) -> CFComparisonResult;
);

extern_fn!(
    pub unsafe fn CFStringCompare(
        the_string1: CFStringRef,
        the_string2: CFStringRef,
        compare_options: CFStringCompareFlags,
    ) -> CFComparisonResult;
);

extern_fn!(
    pub unsafe fn CFStringFindWithOptionsAndLocale(
        the_string: CFStringRef,
        string_to_find: CFStringRef,
        range_to_search: CFRange,
        search_options: CFStringCompareFlags,
        locale: CFLocaleRef,
        result: *mut CFRange,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringFindWithOptions(
        the_string: CFStringRef,
        string_to_find: CFStringRef,
        range_to_search: CFRange,
        search_options: CFStringCompareFlags,
        result: *mut CFRange,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringCreateArrayWithFindResults(
        alloc: CFAllocatorRef,
        the_string: CFStringRef,
        string_to_find: CFStringRef,
        range_to_search: CFRange,
        compare_options: CFStringCompareFlags,
    ) -> CFArrayRef;
);

extern_fn!(
    pub unsafe fn CFStringFind(
        the_string: CFStringRef,
        string_to_find: CFStringRef,
        compare_options: CFStringCompareFlags,
    ) -> CFRange;
);

extern_fn!(
    pub unsafe fn CFStringHasPrefix(the_string: CFStringRef, prefix: CFStringRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringHasSuffix(the_string: CFStringRef, suffix: CFStringRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetRangeOfComposedCharactersAtIndex(
        the_string: CFStringRef,
        the_index: CFIndex,
    ) -> CFRange;
);

extern_fn!(
    pub unsafe fn CFStringFindCharacterFromSet(
        the_string: CFStringRef,
        the_set: CFCharacterSetRef,
        range_to_search: CFRange,
        search_options: CFStringCompareFlags,
        result: *mut CFRange,
    ) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetLineBounds(
        the_string: CFStringRef,
        range: CFRange,
        line_begin_index: *mut CFIndex,
        line_end_index: *mut CFIndex,
        contents_end_index: *mut CFIndex,
    );
);

extern_fn!(
    pub unsafe fn CFStringGetParagraphBounds(
        string: CFStringRef,
        range: CFRange,
        par_begin_index: *mut CFIndex,
        par_end_index: *mut CFIndex,
        contents_end_index: *mut CFIndex,
    );
);

extern_fn!(
    pub unsafe fn CFStringGetHyphenationLocationBeforeIndex(
        string: CFStringRef,
        location: CFIndex,
        limit_range: CFRange,
        options: CFOptionFlags,
        locale: CFLocaleRef,
        character: *mut UTF32Char,
    ) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringIsHyphenationAvailableForLocale(locale: CFLocaleRef) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringCreateByCombiningStrings(
        alloc: CFAllocatorRef,
        the_array: CFArrayRef,
        separator_string: CFStringRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringCreateArrayBySeparatingStrings(
        alloc: CFAllocatorRef,
        the_string: CFStringRef,
        separator_string: CFStringRef,
    ) -> CFArrayRef;
);

extern_fn!(
    pub unsafe fn CFStringGetIntValue(str: CFStringRef) -> i32;
);

extern_fn!(
    pub unsafe fn CFStringGetDoubleValue(str: CFStringRef) -> c_double;
);

extern_fn!(
    pub unsafe fn CFStringAppend(the_string: CFMutableStringRef, appended_string: CFStringRef);
);

extern_fn!(
    pub unsafe fn CFStringAppendCharacters(
        the_string: CFMutableStringRef,
        chars: *mut UniChar,
        num_chars: CFIndex,
    );
);

extern_fn!(
    pub unsafe fn CFStringAppendPascalString(
        the_string: CFMutableStringRef,
        p_str: ConstStr255Param,
        encoding: CFStringEncoding,
    );
);

extern_fn!(
    pub unsafe fn CFStringAppendCString(
        the_string: CFMutableStringRef,
        c_str: *mut c_char,
        encoding: CFStringEncoding,
    );
);

extern_fn!(
    pub unsafe fn CFStringInsert(str: CFMutableStringRef, idx: CFIndex, inserted_str: CFStringRef);
);

extern_fn!(
    pub unsafe fn CFStringDelete(the_string: CFMutableStringRef, range: CFRange);
);

extern_fn!(
    pub unsafe fn CFStringReplace(
        the_string: CFMutableStringRef,
        range: CFRange,
        replacement: CFStringRef,
    );
);

extern_fn!(
    pub unsafe fn CFStringReplaceAll(the_string: CFMutableStringRef, replacement: CFStringRef);
);

extern_fn!(
    pub unsafe fn CFStringFindAndReplace(
        the_string: CFMutableStringRef,
        string_to_find: CFStringRef,
        replacement_string: CFStringRef,
        range_to_search: CFRange,
        compare_options: CFStringCompareFlags,
    ) -> CFIndex;
);

extern_fn!(
    pub unsafe fn CFStringSetExternalCharactersNoCopy(
        the_string: CFMutableStringRef,
        chars: *mut UniChar,
        length: CFIndex,
        capacity: CFIndex,
    );
);

extern_fn!(
    pub unsafe fn CFStringPad(
        the_string: CFMutableStringRef,
        pad_string: CFStringRef,
        length: CFIndex,
        index_into_pad: CFIndex,
    );
);

extern_fn!(
    pub unsafe fn CFStringTrim(the_string: CFMutableStringRef, trim_string: CFStringRef);
);

extern_fn!(
    pub unsafe fn CFStringTrimWhitespace(the_string: CFMutableStringRef);
);

extern_fn!(
    pub unsafe fn CFStringLowercase(the_string: CFMutableStringRef, locale: CFLocaleRef);
);

extern_fn!(
    pub unsafe fn CFStringUppercase(the_string: CFMutableStringRef, locale: CFLocaleRef);
);

extern_fn!(
    pub unsafe fn CFStringCapitalize(the_string: CFMutableStringRef, locale: CFLocaleRef);
);

ns_enum!(
    #[underlying(CFIndex)]
    pub enum CFStringNormalizationForm {
        kCFStringNormalizationFormD = 0,
        kCFStringNormalizationFormKD = 1,
        kCFStringNormalizationFormC = 2,
        kCFStringNormalizationFormKC = 3,
    }
);

extern_fn!(
    pub unsafe fn CFStringNormalize(
        the_string: CFMutableStringRef,
        the_form: CFStringNormalizationForm,
    );
);

extern_fn!(
    pub unsafe fn CFStringFold(
        the_string: CFMutableStringRef,
        the_flags: CFStringCompareFlags,
        the_locale: CFLocaleRef,
    );
);

extern_fn!(
    pub unsafe fn CFStringTransform(
        string: CFMutableStringRef,
        range: *mut CFRange,
        transform: CFStringRef,
        reverse: Boolean,
    ) -> Boolean;
);

extern_static!(kCFStringTransformStripCombiningMarks: CFStringRef);

extern_static!(kCFStringTransformToLatin: CFStringRef);

extern_static!(kCFStringTransformFullwidthHalfwidth: CFStringRef);

extern_static!(kCFStringTransformLatinKatakana: CFStringRef);

extern_static!(kCFStringTransformLatinHiragana: CFStringRef);

extern_static!(kCFStringTransformHiraganaKatakana: CFStringRef);

extern_static!(kCFStringTransformMandarinLatin: CFStringRef);

extern_static!(kCFStringTransformLatinHangul: CFStringRef);

extern_static!(kCFStringTransformLatinArabic: CFStringRef);

extern_static!(kCFStringTransformLatinHebrew: CFStringRef);

extern_static!(kCFStringTransformLatinThai: CFStringRef);

extern_static!(kCFStringTransformLatinCyrillic: CFStringRef);

extern_static!(kCFStringTransformLatinGreek: CFStringRef);

extern_static!(kCFStringTransformToXMLHex: CFStringRef);

extern_static!(kCFStringTransformToUnicodeName: CFStringRef);

extern_static!(kCFStringTransformStripDiacritics: CFStringRef);

extern_fn!(
    pub unsafe fn CFStringIsEncodingAvailable(encoding: CFStringEncoding) -> Boolean;
);

extern_fn!(
    pub unsafe fn CFStringGetListOfAvailableEncodings() -> *mut CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringGetNameOfEncoding(encoding: CFStringEncoding) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringConvertEncodingToNSStringEncoding(encoding: CFStringEncoding) -> c_ulong;
);

extern_fn!(
    pub unsafe fn CFStringConvertNSStringEncodingToEncoding(encoding: c_ulong) -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringConvertEncodingToWindowsCodepage(encoding: CFStringEncoding) -> u32;
);

extern_fn!(
    pub unsafe fn CFStringConvertWindowsCodepageToEncoding(codepage: u32) -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringConvertIANACharSetNameToEncoding(
        the_string: CFStringRef,
    ) -> CFStringEncoding;
);

extern_fn!(
    pub unsafe fn CFStringConvertEncodingToIANACharSetName(
        encoding: CFStringEncoding,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFStringGetMostCompatibleMacStringEncoding(
        encoding: CFStringEncoding,
    ) -> CFStringEncoding;
);

extern_struct!(
    #[encoding_name("?")]
    pub struct CFStringInlineBuffer {
        pub buffer: [UniChar; 64],
        pub theString: CFStringRef,
        pub directUniCharBuffer: *mut UniChar,
        pub directCStringBuffer: *mut c_char,
        pub rangeToBuffer: CFRange,
        pub bufferedRangeStart: CFIndex,
        pub bufferedRangeEnd: CFIndex,
    }
);

inline_fn!(
    pub unsafe fn CFStringInitInlineBuffer(
        str: CFStringRef,
        buf: *mut CFStringInlineBuffer,
        range: CFRange,
    ) {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFStringGetCharacterFromInlineBuffer(
        buf: *mut CFStringInlineBuffer,
        idx: CFIndex,
    ) -> UniChar {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFStringIsSurrogateHighCharacter(character: UniChar) -> Boolean {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFStringIsSurrogateLowCharacter(character: UniChar) -> Boolean {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFStringGetLongCharacterForSurrogatePair(
        surrogate_high: UniChar,
        surrogate_low: UniChar,
    ) -> UTF32Char {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFStringGetSurrogatePairForLongCharacter(
        character: UTF32Char,
        surrogates: *mut UniChar,
    ) -> Boolean {
        todo!()
    }
);

extern_fn!(
    pub unsafe fn CFShow(obj: CFTypeRef);
);

extern_fn!(
    pub unsafe fn CFShowStr(str: CFStringRef);
);

extern_fn!(
    pub unsafe fn __CFStringMakeConstantString(c_str: *mut c_char) -> CFStringRef;
);
