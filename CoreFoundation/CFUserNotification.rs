//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFUserNotificationRef = *mut c_void;

pub type CFUserNotificationCallBack =
    Option<unsafe extern "C" fn(CFUserNotificationRef, CFOptionFlags)>;

extern_fn!(
    pub unsafe fn CFUserNotificationGetTypeID() -> CFTypeID;
);

extern_fn!(
    pub unsafe fn CFUserNotificationCreate(
        allocator: CFAllocatorRef,
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        error: *mut i32,
        dictionary: CFDictionaryRef,
    ) -> CFUserNotificationRef;
);

extern_fn!(
    pub unsafe fn CFUserNotificationReceiveResponse(
        user_notification: CFUserNotificationRef,
        timeout: CFTimeInterval,
        response_flags: *mut CFOptionFlags,
    ) -> i32;
);

extern_fn!(
    pub unsafe fn CFUserNotificationGetResponseValue(
        user_notification: CFUserNotificationRef,
        key: CFStringRef,
        idx: CFIndex,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFUserNotificationGetResponseDictionary(
        user_notification: CFUserNotificationRef,
    ) -> CFDictionaryRef;
);

extern_fn!(
    pub unsafe fn CFUserNotificationUpdate(
        user_notification: CFUserNotificationRef,
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        dictionary: CFDictionaryRef,
    ) -> i32;
);

extern_fn!(
    pub unsafe fn CFUserNotificationCancel(user_notification: CFUserNotificationRef) -> i32;
);

extern_fn!(
    pub unsafe fn CFUserNotificationCreateRunLoopSource(
        allocator: CFAllocatorRef,
        user_notification: CFUserNotificationRef,
        callout: CFUserNotificationCallBack,
        order: CFIndex,
    ) -> CFRunLoopSourceRef;
);

extern_fn!(
    pub unsafe fn CFUserNotificationDisplayNotice(
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        icon_url: CFURLRef,
        sound_url: CFURLRef,
        localization_url: CFURLRef,
        alert_header: CFStringRef,
        alert_message: CFStringRef,
        default_button_title: CFStringRef,
    ) -> i32;
);

extern_fn!(
    pub unsafe fn CFUserNotificationDisplayAlert(
        timeout: CFTimeInterval,
        flags: CFOptionFlags,
        icon_url: CFURLRef,
        sound_url: CFURLRef,
        localization_url: CFURLRef,
        alert_header: CFStringRef,
        alert_message: CFStringRef,
        default_button_title: CFStringRef,
        alternate_button_title: CFStringRef,
        other_button_title: CFStringRef,
        response_flags: *mut CFOptionFlags,
    ) -> i32;
);

ns_enum!(
    #[underlying(CFOptionFlags)]
    pub enum __anonymous__ {
        kCFUserNotificationStopAlertLevel = 0,
        kCFUserNotificationNoteAlertLevel = 1,
        kCFUserNotificationCautionAlertLevel = 2,
        kCFUserNotificationPlainAlertLevel = 3,
    }
);

ns_enum!(
    #[underlying(CFOptionFlags)]
    pub enum __anonymous__ {
        kCFUserNotificationDefaultResponse = 0,
        kCFUserNotificationAlternateResponse = 1,
        kCFUserNotificationOtherResponse = 2,
        kCFUserNotificationCancelResponse = 3,
    }
);

ns_enum!(
    #[underlying(CFOptionFlags)]
    pub enum __anonymous__ {
        kCFUserNotificationNoDefaultButtonFlag = 1 << 5,
        kCFUserNotificationUseRadioButtonsFlag = 1 << 6,
    }
);

inline_fn!(
    pub unsafe fn CFUserNotificationCheckBoxChecked(i: CFIndex) -> CFOptionFlags {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFUserNotificationSecureTextField(i: CFIndex) -> CFOptionFlags {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn CFUserNotificationPopUpSelection(n: CFIndex) -> CFOptionFlags {
        todo!()
    }
);

extern_static!(kCFUserNotificationIconURLKey: CFStringRef);

extern_static!(kCFUserNotificationSoundURLKey: CFStringRef);

extern_static!(kCFUserNotificationLocalizationURLKey: CFStringRef);

extern_static!(kCFUserNotificationAlertHeaderKey: CFStringRef);

extern_static!(kCFUserNotificationAlertMessageKey: CFStringRef);

extern_static!(kCFUserNotificationDefaultButtonTitleKey: CFStringRef);

extern_static!(kCFUserNotificationAlternateButtonTitleKey: CFStringRef);

extern_static!(kCFUserNotificationOtherButtonTitleKey: CFStringRef);

extern_static!(kCFUserNotificationProgressIndicatorValueKey: CFStringRef);

extern_static!(kCFUserNotificationPopUpTitlesKey: CFStringRef);

extern_static!(kCFUserNotificationTextFieldTitlesKey: CFStringRef);

extern_static!(kCFUserNotificationCheckBoxTitlesKey: CFStringRef);

extern_static!(kCFUserNotificationTextFieldValuesKey: CFStringRef);

extern_static!(kCFUserNotificationPopUpSelectionKey: CFStringRef);

extern_static!(kCFUserNotificationAlertTopMostKey: CFStringRef);

extern_static!(kCFUserNotificationKeyboardTypesKey: CFStringRef);
