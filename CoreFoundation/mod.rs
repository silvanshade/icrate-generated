//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#![allow(unused_imports)]
#![allow(deprecated)]
#[path = "CFArray.rs"]
mod __CFArray;
#[path = "CFAttributedString.rs"]
mod __CFAttributedString;
#[path = "CFAvailability.rs"]
mod __CFAvailability;
#[path = "CFBag.rs"]
mod __CFBag;
#[path = "CFBase.rs"]
mod __CFBase;
#[path = "CFBinaryHeap.rs"]
mod __CFBinaryHeap;
#[path = "CFBitVector.rs"]
mod __CFBitVector;
#[path = "CFBundle.rs"]
mod __CFBundle;
#[path = "CFByteOrder.rs"]
mod __CFByteOrder;
#[path = "CFCGTypes.rs"]
mod __CFCGTypes;
#[path = "CFCalendar.rs"]
mod __CFCalendar;
#[path = "CFCharacterSet.rs"]
mod __CFCharacterSet;
#[path = "CFData.rs"]
mod __CFData;
#[path = "CFDate.rs"]
mod __CFDate;
#[path = "CFDateFormatter.rs"]
mod __CFDateFormatter;
#[path = "CFDictionary.rs"]
mod __CFDictionary;
#[path = "CFError.rs"]
mod __CFError;
#[path = "CFFileDescriptor.rs"]
mod __CFFileDescriptor;
#[path = "CFFileSecurity.rs"]
mod __CFFileSecurity;
#[path = "CFLocale.rs"]
mod __CFLocale;
#[path = "CFMachPort.rs"]
mod __CFMachPort;
#[path = "CFMessagePort.rs"]
mod __CFMessagePort;
#[path = "CFNotificationCenter.rs"]
mod __CFNotificationCenter;
#[path = "CFNumber.rs"]
mod __CFNumber;
#[path = "CFNumberFormatter.rs"]
mod __CFNumberFormatter;
#[path = "CFPlugIn.rs"]
mod __CFPlugIn;
#[path = "CFPreferences.rs"]
mod __CFPreferences;
#[path = "CFPropertyList.rs"]
mod __CFPropertyList;
#[path = "CFRunLoop.rs"]
mod __CFRunLoop;
#[path = "CFSet.rs"]
mod __CFSet;
#[path = "CFSocket.rs"]
mod __CFSocket;
#[path = "CFStream.rs"]
mod __CFStream;
#[path = "CFString.rs"]
mod __CFString;
#[path = "CFStringEncodingExt.rs"]
mod __CFStringEncodingExt;
#[path = "CFStringTokenizer.rs"]
mod __CFStringTokenizer;
#[path = "CFTimeZone.rs"]
mod __CFTimeZone;
#[path = "CFTree.rs"]
mod __CFTree;
#[path = "CFURL.rs"]
mod __CFURL;
#[path = "CFURLAccess.rs"]
mod __CFURLAccess;
#[path = "CFURLEnumerator.rs"]
mod __CFURLEnumerator;
#[path = "CFUUID.rs"]
mod __CFUUID;
#[path = "CFUserNotification.rs"]
mod __CFUserNotification;
#[path = "CFUtilities.rs"]
mod __CFUtilities;
#[path = "CFXMLNode.rs"]
mod __CFXMLNode;
#[path = "CFXMLParser.rs"]
mod __CFXMLParser;

pub use self::__CFArray::kCFTypeArrayCallBacks;
pub use self::__CFArray::CFArrayAppendArray;
pub use self::__CFArray::CFArrayAppendValue;
pub use self::__CFArray::CFArrayApplierFunction;
pub use self::__CFArray::CFArrayApplyFunction;
pub use self::__CFArray::CFArrayBSearchValues;
pub use self::__CFArray::CFArrayCallBacks;
pub use self::__CFArray::CFArrayContainsValue;
pub use self::__CFArray::CFArrayCopyDescriptionCallBack;
pub use self::__CFArray::CFArrayCreate;
pub use self::__CFArray::CFArrayCreateCopy;
pub use self::__CFArray::CFArrayCreateMutable;
pub use self::__CFArray::CFArrayCreateMutableCopy;
pub use self::__CFArray::CFArrayEqualCallBack;
pub use self::__CFArray::CFArrayExchangeValuesAtIndices;
pub use self::__CFArray::CFArrayGetCount;
pub use self::__CFArray::CFArrayGetCountOfValue;
pub use self::__CFArray::CFArrayGetFirstIndexOfValue;
pub use self::__CFArray::CFArrayGetLastIndexOfValue;
pub use self::__CFArray::CFArrayGetTypeID;
pub use self::__CFArray::CFArrayGetValueAtIndex;
pub use self::__CFArray::CFArrayGetValues;
pub use self::__CFArray::CFArrayInsertValueAtIndex;
pub use self::__CFArray::CFArrayRef;
pub use self::__CFArray::CFArrayReleaseCallBack;
pub use self::__CFArray::CFArrayRemoveAllValues;
pub use self::__CFArray::CFArrayRemoveValueAtIndex;
pub use self::__CFArray::CFArrayReplaceValues;
pub use self::__CFArray::CFArrayRetainCallBack;
pub use self::__CFArray::CFArraySetValueAtIndex;
pub use self::__CFArray::CFArraySortValues;
pub use self::__CFArray::CFMutableArrayRef;
pub use self::__CFAttributedString::CFAttributedStringBeginEditing;
pub use self::__CFAttributedString::CFAttributedStringCreate;
pub use self::__CFAttributedString::CFAttributedStringCreateCopy;
pub use self::__CFAttributedString::CFAttributedStringCreateMutable;
pub use self::__CFAttributedString::CFAttributedStringCreateMutableCopy;
pub use self::__CFAttributedString::CFAttributedStringCreateWithSubstring;
pub use self::__CFAttributedString::CFAttributedStringEndEditing;
pub use self::__CFAttributedString::CFAttributedStringGetAttribute;
pub use self::__CFAttributedString::CFAttributedStringGetAttributeAndLongestEffectiveRange;
pub use self::__CFAttributedString::CFAttributedStringGetAttributes;
pub use self::__CFAttributedString::CFAttributedStringGetAttributesAndLongestEffectiveRange;
pub use self::__CFAttributedString::CFAttributedStringGetLength;
pub use self::__CFAttributedString::CFAttributedStringGetMutableString;
pub use self::__CFAttributedString::CFAttributedStringGetString;
pub use self::__CFAttributedString::CFAttributedStringGetTypeID;
pub use self::__CFAttributedString::CFAttributedStringRef;
pub use self::__CFAttributedString::CFAttributedStringRemoveAttribute;
pub use self::__CFAttributedString::CFAttributedStringReplaceAttributedString;
pub use self::__CFAttributedString::CFAttributedStringReplaceString;
pub use self::__CFAttributedString::CFAttributedStringSetAttribute;
pub use self::__CFAttributedString::CFAttributedStringSetAttributes;
pub use self::__CFAttributedString::CFMutableAttributedStringRef;
pub use self::__CFBag::kCFCopyStringBagCallBacks;
pub use self::__CFBag::kCFTypeBagCallBacks;
pub use self::__CFBag::CFBagAddValue;
pub use self::__CFBag::CFBagApplierFunction;
pub use self::__CFBag::CFBagApplyFunction;
pub use self::__CFBag::CFBagCallBacks;
pub use self::__CFBag::CFBagContainsValue;
pub use self::__CFBag::CFBagCopyDescriptionCallBack;
pub use self::__CFBag::CFBagCreate;
pub use self::__CFBag::CFBagCreateCopy;
pub use self::__CFBag::CFBagCreateMutable;
pub use self::__CFBag::CFBagCreateMutableCopy;
pub use self::__CFBag::CFBagEqualCallBack;
pub use self::__CFBag::CFBagGetCount;
pub use self::__CFBag::CFBagGetCountOfValue;
pub use self::__CFBag::CFBagGetTypeID;
pub use self::__CFBag::CFBagGetValue;
pub use self::__CFBag::CFBagGetValueIfPresent;
pub use self::__CFBag::CFBagGetValues;
pub use self::__CFBag::CFBagHashCallBack;
pub use self::__CFBag::CFBagRef;
pub use self::__CFBag::CFBagReleaseCallBack;
pub use self::__CFBag::CFBagRemoveAllValues;
pub use self::__CFBag::CFBagRemoveValue;
pub use self::__CFBag::CFBagReplaceValue;
pub use self::__CFBag::CFBagRetainCallBack;
pub use self::__CFBag::CFBagSetValue;
pub use self::__CFBag::CFMutableBagRef;
pub use self::__CFBase::kCFAllocatorDefault;
pub use self::__CFBase::kCFAllocatorMalloc;
pub use self::__CFBase::kCFAllocatorMallocZone;
pub use self::__CFBase::kCFAllocatorNull;
pub use self::__CFBase::kCFAllocatorSystemDefault;
pub use self::__CFBase::kCFAllocatorUseContext;
pub use self::__CFBase::kCFCoreFoundationVersionNumber;
pub use self::__CFBase::kCFNotFound;
pub use self::__CFBase::kCFNull;
pub use self::__CFBase::CFAllocatorAllocate;
pub use self::__CFBase::CFAllocatorAllocateCallBack;
pub use self::__CFBase::CFAllocatorContext;
pub use self::__CFBase::CFAllocatorCopyDescriptionCallBack;
pub use self::__CFBase::CFAllocatorCreate;
pub use self::__CFBase::CFAllocatorDeallocate;
pub use self::__CFBase::CFAllocatorDeallocateCallBack;
pub use self::__CFBase::CFAllocatorGetContext;
pub use self::__CFBase::CFAllocatorGetDefault;
pub use self::__CFBase::CFAllocatorGetPreferredSizeForSize;
pub use self::__CFBase::CFAllocatorGetTypeID;
pub use self::__CFBase::CFAllocatorPreferredSizeCallBack;
pub use self::__CFBase::CFAllocatorReallocate;
pub use self::__CFBase::CFAllocatorReallocateCallBack;
pub use self::__CFBase::CFAllocatorRef;
pub use self::__CFBase::CFAllocatorReleaseCallBack;
pub use self::__CFBase::CFAllocatorRetainCallBack;
pub use self::__CFBase::CFAllocatorSetDefault;
pub use self::__CFBase::CFComparatorFunction;
pub use self::__CFBase::CFCopyDescription;
pub use self::__CFBase::CFCopyTypeIDDescription;
pub use self::__CFBase::CFEqual;
pub use self::__CFBase::CFGetAllocator;
pub use self::__CFBase::CFGetRetainCount;
pub use self::__CFBase::CFGetTypeID;
pub use self::__CFBase::CFHash;
pub use self::__CFBase::CFHashCode;
pub use self::__CFBase::CFMakeCollectable;
pub use self::__CFBase::CFMutableStringRef;
pub use self::__CFBase::CFNullGetTypeID;
pub use self::__CFBase::CFNullRef;
pub use self::__CFBase::CFOptionFlags;
pub use self::__CFBase::CFRange;
pub use self::__CFBase::CFRelease;
pub use self::__CFBase::CFRetain;
pub use self::__CFBase::CFStringRef;
pub use self::__CFBase::CFTypeID;
pub use self::__CFBase::__CFRangeMake;
pub use self::__CFBase::{
    kCFCompareEqualTo, kCFCompareGreaterThan, kCFCompareLessThan, CFComparisonResult,
};
pub use self::__CFBinaryHeap::kCFStringBinaryHeapCallBacks;
pub use self::__CFBinaryHeap::CFBinaryHeapAddValue;
pub use self::__CFBinaryHeap::CFBinaryHeapApplierFunction;
pub use self::__CFBinaryHeap::CFBinaryHeapApplyFunction;
pub use self::__CFBinaryHeap::CFBinaryHeapCallBacks;
pub use self::__CFBinaryHeap::CFBinaryHeapCompareContext;
pub use self::__CFBinaryHeap::CFBinaryHeapContainsValue;
pub use self::__CFBinaryHeap::CFBinaryHeapCreate;
pub use self::__CFBinaryHeap::CFBinaryHeapCreateCopy;
pub use self::__CFBinaryHeap::CFBinaryHeapGetCount;
pub use self::__CFBinaryHeap::CFBinaryHeapGetCountOfValue;
pub use self::__CFBinaryHeap::CFBinaryHeapGetMinimum;
pub use self::__CFBinaryHeap::CFBinaryHeapGetMinimumIfPresent;
pub use self::__CFBinaryHeap::CFBinaryHeapGetTypeID;
pub use self::__CFBinaryHeap::CFBinaryHeapGetValues;
pub use self::__CFBinaryHeap::CFBinaryHeapRef;
pub use self::__CFBinaryHeap::CFBinaryHeapRemoveAllValues;
pub use self::__CFBinaryHeap::CFBinaryHeapRemoveMinimumValue;
pub use self::__CFBitVector::CFBit;
pub use self::__CFBitVector::CFBitVectorContainsBit;
pub use self::__CFBitVector::CFBitVectorCreate;
pub use self::__CFBitVector::CFBitVectorCreateCopy;
pub use self::__CFBitVector::CFBitVectorCreateMutable;
pub use self::__CFBitVector::CFBitVectorCreateMutableCopy;
pub use self::__CFBitVector::CFBitVectorFlipBitAtIndex;
pub use self::__CFBitVector::CFBitVectorFlipBits;
pub use self::__CFBitVector::CFBitVectorGetBitAtIndex;
pub use self::__CFBitVector::CFBitVectorGetBits;
pub use self::__CFBitVector::CFBitVectorGetCount;
pub use self::__CFBitVector::CFBitVectorGetCountOfBit;
pub use self::__CFBitVector::CFBitVectorGetFirstIndexOfBit;
pub use self::__CFBitVector::CFBitVectorGetLastIndexOfBit;
pub use self::__CFBitVector::CFBitVectorGetTypeID;
pub use self::__CFBitVector::CFBitVectorRef;
pub use self::__CFBitVector::CFBitVectorSetAllBits;
pub use self::__CFBitVector::CFBitVectorSetBitAtIndex;
pub use self::__CFBitVector::CFBitVectorSetBits;
pub use self::__CFBitVector::CFBitVectorSetCount;
pub use self::__CFBitVector::CFMutableBitVectorRef;
pub use self::__CFBundle::kCFBundleDevelopmentRegionKey;
pub use self::__CFBundle::kCFBundleExecutableKey;
pub use self::__CFBundle::kCFBundleIdentifierKey;
pub use self::__CFBundle::kCFBundleInfoDictionaryVersionKey;
pub use self::__CFBundle::kCFBundleLocalizationsKey;
pub use self::__CFBundle::kCFBundleNameKey;
pub use self::__CFBundle::kCFBundleVersionKey;
pub use self::__CFBundle::CFBundleCloseBundleResourceMap;
pub use self::__CFBundle::CFBundleCopyAuxiliaryExecutableURL;
pub use self::__CFBundle::CFBundleCopyBuiltInPlugInsURL;
pub use self::__CFBundle::CFBundleCopyBundleLocalizations;
pub use self::__CFBundle::CFBundleCopyBundleURL;
pub use self::__CFBundle::CFBundleCopyExecutableArchitectures;
pub use self::__CFBundle::CFBundleCopyExecutableArchitecturesForURL;
pub use self::__CFBundle::CFBundleCopyExecutableURL;
pub use self::__CFBundle::CFBundleCopyInfoDictionaryForURL;
pub use self::__CFBundle::CFBundleCopyInfoDictionaryInDirectory;
pub use self::__CFBundle::CFBundleCopyLocalizationsForPreferences;
pub use self::__CFBundle::CFBundleCopyLocalizationsForURL;
pub use self::__CFBundle::CFBundleCopyLocalizedString;
pub use self::__CFBundle::CFBundleCopyPreferredLocalizationsFromArray;
pub use self::__CFBundle::CFBundleCopyPrivateFrameworksURL;
pub use self::__CFBundle::CFBundleCopyResourceURL;
pub use self::__CFBundle::CFBundleCopyResourceURLForLocalization;
pub use self::__CFBundle::CFBundleCopyResourceURLInDirectory;
pub use self::__CFBundle::CFBundleCopyResourceURLsOfType;
pub use self::__CFBundle::CFBundleCopyResourceURLsOfTypeForLocalization;
pub use self::__CFBundle::CFBundleCopyResourceURLsOfTypeInDirectory;
pub use self::__CFBundle::CFBundleCopyResourcesDirectoryURL;
pub use self::__CFBundle::CFBundleCopySharedFrameworksURL;
pub use self::__CFBundle::CFBundleCopySharedSupportURL;
pub use self::__CFBundle::CFBundleCopySupportFilesDirectoryURL;
pub use self::__CFBundle::CFBundleCreate;
pub use self::__CFBundle::CFBundleCreateBundlesFromDirectory;
pub use self::__CFBundle::CFBundleGetAllBundles;
pub use self::__CFBundle::CFBundleGetBundleWithIdentifier;
pub use self::__CFBundle::CFBundleGetDataPointerForName;
pub use self::__CFBundle::CFBundleGetDataPointersForNames;
pub use self::__CFBundle::CFBundleGetDevelopmentRegion;
pub use self::__CFBundle::CFBundleGetFunctionPointerForName;
pub use self::__CFBundle::CFBundleGetFunctionPointersForNames;
pub use self::__CFBundle::CFBundleGetIdentifier;
pub use self::__CFBundle::CFBundleGetInfoDictionary;
pub use self::__CFBundle::CFBundleGetLocalInfoDictionary;
pub use self::__CFBundle::CFBundleGetMainBundle;
pub use self::__CFBundle::CFBundleGetPackageInfo;
pub use self::__CFBundle::CFBundleGetPackageInfoInDirectory;
pub use self::__CFBundle::CFBundleGetPlugIn;
pub use self::__CFBundle::CFBundleGetTypeID;
pub use self::__CFBundle::CFBundleGetValueForInfoDictionaryKey;
pub use self::__CFBundle::CFBundleGetVersionNumber;
pub use self::__CFBundle::CFBundleIsArchitectureLoadable;
pub use self::__CFBundle::CFBundleIsExecutableLoadable;
pub use self::__CFBundle::CFBundleIsExecutableLoadableForURL;
pub use self::__CFBundle::CFBundleIsExecutableLoaded;
pub use self::__CFBundle::CFBundleLoadExecutable;
pub use self::__CFBundle::CFBundleLoadExecutableAndReturnError;
pub use self::__CFBundle::CFBundleOpenBundleResourceFiles;
pub use self::__CFBundle::CFBundleOpenBundleResourceMap;
pub use self::__CFBundle::CFBundlePreflightExecutable;
pub use self::__CFBundle::CFBundleRef;
pub use self::__CFBundle::CFBundleRefNum;
pub use self::__CFBundle::CFBundleUnloadExecutable;
pub use self::__CFBundle::CFPlugInRef;
pub use self::__CFBundle::{
    kCFBundleExecutableArchitectureARM64, kCFBundleExecutableArchitectureI386,
    kCFBundleExecutableArchitecturePPC, kCFBundleExecutableArchitecturePPC64,
    kCFBundleExecutableArchitectureX86_64,
};
pub use self::__CFByteOrder::CFSwappedFloat32;
pub use self::__CFByteOrder::CFSwappedFloat64;
pub use self::__CFCGTypes::CGAffineTransform;
pub use self::__CFCGTypes::CGAffineTransformComponents;
pub use self::__CFCGTypes::CGVector;
pub use self::__CFCalendar::kCFCalendarComponentsWrap;
pub use self::__CFCalendar::CFCalendarCopyCurrent;
pub use self::__CFCalendar::CFCalendarCopyLocale;
pub use self::__CFCalendar::CFCalendarCopyTimeZone;
pub use self::__CFCalendar::CFCalendarCreateWithIdentifier;
pub use self::__CFCalendar::CFCalendarGetFirstWeekday;
pub use self::__CFCalendar::CFCalendarGetIdentifier;
pub use self::__CFCalendar::CFCalendarGetMaximumRangeOfUnit;
pub use self::__CFCalendar::CFCalendarGetMinimumDaysInFirstWeek;
pub use self::__CFCalendar::CFCalendarGetMinimumRangeOfUnit;
pub use self::__CFCalendar::CFCalendarGetOrdinalityOfUnit;
pub use self::__CFCalendar::CFCalendarGetRangeOfUnit;
pub use self::__CFCalendar::CFCalendarGetTimeRangeOfUnit;
pub use self::__CFCalendar::CFCalendarGetTypeID;
pub use self::__CFCalendar::CFCalendarRef;
pub use self::__CFCalendar::CFCalendarSetFirstWeekday;
pub use self::__CFCalendar::CFCalendarSetLocale;
pub use self::__CFCalendar::CFCalendarSetMinimumDaysInFirstWeek;
pub use self::__CFCalendar::CFCalendarSetTimeZone;
pub use self::__CFCalendar::{
    kCFCalendarUnitDay, kCFCalendarUnitEra, kCFCalendarUnitHour, kCFCalendarUnitMinute,
    kCFCalendarUnitMonth, kCFCalendarUnitQuarter, kCFCalendarUnitSecond, kCFCalendarUnitWeek,
    kCFCalendarUnitWeekOfMonth, kCFCalendarUnitWeekOfYear, kCFCalendarUnitWeekday,
    kCFCalendarUnitWeekdayOrdinal, kCFCalendarUnitYear, kCFCalendarUnitYearForWeekOfYear,
    CFCalendarUnit,
};
pub use self::__CFCharacterSet::CFCharacterSetAddCharactersInRange;
pub use self::__CFCharacterSet::CFCharacterSetAddCharactersInString;
pub use self::__CFCharacterSet::CFCharacterSetCreateBitmapRepresentation;
pub use self::__CFCharacterSet::CFCharacterSetCreateCopy;
pub use self::__CFCharacterSet::CFCharacterSetCreateInvertedSet;
pub use self::__CFCharacterSet::CFCharacterSetCreateMutable;
pub use self::__CFCharacterSet::CFCharacterSetCreateMutableCopy;
pub use self::__CFCharacterSet::CFCharacterSetCreateWithBitmapRepresentation;
pub use self::__CFCharacterSet::CFCharacterSetCreateWithCharactersInRange;
pub use self::__CFCharacterSet::CFCharacterSetCreateWithCharactersInString;
pub use self::__CFCharacterSet::CFCharacterSetGetPredefined;
pub use self::__CFCharacterSet::CFCharacterSetGetTypeID;
pub use self::__CFCharacterSet::CFCharacterSetHasMemberInPlane;
pub use self::__CFCharacterSet::CFCharacterSetIntersect;
pub use self::__CFCharacterSet::CFCharacterSetInvert;
pub use self::__CFCharacterSet::CFCharacterSetIsCharacterMember;
pub use self::__CFCharacterSet::CFCharacterSetIsLongCharacterMember;
pub use self::__CFCharacterSet::CFCharacterSetIsSupersetOfSet;
pub use self::__CFCharacterSet::CFCharacterSetRef;
pub use self::__CFCharacterSet::CFCharacterSetRemoveCharactersInRange;
pub use self::__CFCharacterSet::CFCharacterSetRemoveCharactersInString;
pub use self::__CFCharacterSet::CFCharacterSetUnion;
pub use self::__CFCharacterSet::CFMutableCharacterSetRef;
pub use self::__CFCharacterSet::{
    kCFCharacterSetAlphaNumeric, kCFCharacterSetCapitalizedLetter, kCFCharacterSetControl,
    kCFCharacterSetDecimalDigit, kCFCharacterSetDecomposable, kCFCharacterSetIllegal,
    kCFCharacterSetLetter, kCFCharacterSetLowercaseLetter, kCFCharacterSetNewline,
    kCFCharacterSetNonBase, kCFCharacterSetPunctuation, kCFCharacterSetSymbol,
    kCFCharacterSetUppercaseLetter, kCFCharacterSetWhitespace, kCFCharacterSetWhitespaceAndNewline,
    CFCharacterSetPredefinedSet,
};
pub use self::__CFData::CFDataAppendBytes;
pub use self::__CFData::CFDataCreate;
pub use self::__CFData::CFDataCreateCopy;
pub use self::__CFData::CFDataCreateMutable;
pub use self::__CFData::CFDataCreateMutableCopy;
pub use self::__CFData::CFDataCreateWithBytesNoCopy;
pub use self::__CFData::CFDataDeleteBytes;
pub use self::__CFData::CFDataFind;
pub use self::__CFData::CFDataGetBytePtr;
pub use self::__CFData::CFDataGetBytes;
pub use self::__CFData::CFDataGetLength;
pub use self::__CFData::CFDataGetMutableBytePtr;
pub use self::__CFData::CFDataGetTypeID;
pub use self::__CFData::CFDataIncreaseLength;
pub use self::__CFData::CFDataRef;
pub use self::__CFData::CFDataReplaceBytes;
pub use self::__CFData::CFDataSetLength;
pub use self::__CFData::CFMutableDataRef;
pub use self::__CFData::{kCFDataSearchAnchored, kCFDataSearchBackwards, CFDataSearchFlags};
pub use self::__CFDate::kCFAbsoluteTimeIntervalSince1904;
pub use self::__CFDate::kCFAbsoluteTimeIntervalSince1970;
pub use self::__CFDate::CFAbsoluteTime;
pub use self::__CFDate::CFAbsoluteTimeAddGregorianUnits;
pub use self::__CFDate::CFAbsoluteTimeGetCurrent;
pub use self::__CFDate::CFAbsoluteTimeGetDayOfWeek;
pub use self::__CFDate::CFAbsoluteTimeGetDayOfYear;
pub use self::__CFDate::CFAbsoluteTimeGetDifferenceAsGregorianUnits;
pub use self::__CFDate::CFAbsoluteTimeGetGregorianDate;
pub use self::__CFDate::CFAbsoluteTimeGetWeekOfYear;
pub use self::__CFDate::CFDateCompare;
pub use self::__CFDate::CFDateCreate;
pub use self::__CFDate::CFDateGetAbsoluteTime;
pub use self::__CFDate::CFDateGetTimeIntervalSinceDate;
pub use self::__CFDate::CFDateGetTypeID;
pub use self::__CFDate::CFDateRef;
pub use self::__CFDate::CFGregorianDate;
pub use self::__CFDate::CFGregorianDateGetAbsoluteTime;
pub use self::__CFDate::CFGregorianDateIsValid;
pub use self::__CFDate::CFGregorianUnits;
pub use self::__CFDate::CFTimeInterval;
pub use self::__CFDate::CFTimeZoneRef;
pub use self::__CFDate::{
    kCFGregorianAllUnits, kCFGregorianUnitsDays, kCFGregorianUnitsHours, kCFGregorianUnitsMinutes,
    kCFGregorianUnitsMonths, kCFGregorianUnitsSeconds, kCFGregorianUnitsYears,
    CFGregorianUnitFlags,
};
pub use self::__CFDateFormatter::kCFDateFormatterAMSymbol;
pub use self::__CFDateFormatter::kCFDateFormatterCalendar;
pub use self::__CFDateFormatter::kCFDateFormatterCalendarName;
pub use self::__CFDateFormatter::kCFDateFormatterDefaultDate;
pub use self::__CFDateFormatter::kCFDateFormatterDefaultFormat;
pub use self::__CFDateFormatter::kCFDateFormatterDoesRelativeDateFormattingKey;
pub use self::__CFDateFormatter::kCFDateFormatterEraSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterGregorianStartDate;
pub use self::__CFDateFormatter::kCFDateFormatterIsLenient;
pub use self::__CFDateFormatter::kCFDateFormatterLongEraSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterPMSymbol;
pub use self::__CFDateFormatter::kCFDateFormatterQuarterSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortQuarterSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortStandaloneMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortStandaloneQuarterSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortStandaloneWeekdaySymbols;
pub use self::__CFDateFormatter::kCFDateFormatterShortWeekdaySymbols;
pub use self::__CFDateFormatter::kCFDateFormatterStandaloneMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterStandaloneQuarterSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterStandaloneWeekdaySymbols;
pub use self::__CFDateFormatter::kCFDateFormatterTimeZone;
pub use self::__CFDateFormatter::kCFDateFormatterTwoDigitStartDate;
pub use self::__CFDateFormatter::kCFDateFormatterVeryShortMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterVeryShortStandaloneMonthSymbols;
pub use self::__CFDateFormatter::kCFDateFormatterVeryShortStandaloneWeekdaySymbols;
pub use self::__CFDateFormatter::kCFDateFormatterVeryShortWeekdaySymbols;
pub use self::__CFDateFormatter::kCFDateFormatterWeekdaySymbols;
pub use self::__CFDateFormatter::CFDateFormatterCopyProperty;
pub use self::__CFDateFormatter::CFDateFormatterCreate;
pub use self::__CFDateFormatter::CFDateFormatterCreateDateFormatFromTemplate;
pub use self::__CFDateFormatter::CFDateFormatterCreateDateFromString;
pub use self::__CFDateFormatter::CFDateFormatterCreateISO8601Formatter;
pub use self::__CFDateFormatter::CFDateFormatterCreateStringWithAbsoluteTime;
pub use self::__CFDateFormatter::CFDateFormatterCreateStringWithDate;
pub use self::__CFDateFormatter::CFDateFormatterGetAbsoluteTimeFromString;
pub use self::__CFDateFormatter::CFDateFormatterGetDateStyle;
pub use self::__CFDateFormatter::CFDateFormatterGetFormat;
pub use self::__CFDateFormatter::CFDateFormatterGetLocale;
pub use self::__CFDateFormatter::CFDateFormatterGetTimeStyle;
pub use self::__CFDateFormatter::CFDateFormatterGetTypeID;
pub use self::__CFDateFormatter::CFDateFormatterKey;
pub use self::__CFDateFormatter::CFDateFormatterRef;
pub use self::__CFDateFormatter::CFDateFormatterSetFormat;
pub use self::__CFDateFormatter::CFDateFormatterSetProperty;
pub use self::__CFDateFormatter::{
    kCFDateFormatterFullStyle, kCFDateFormatterLongStyle, kCFDateFormatterMediumStyle,
    kCFDateFormatterNoStyle, kCFDateFormatterShortStyle, CFDateFormatterStyle,
};
pub use self::__CFDateFormatter::{
    kCFISO8601DateFormatWithColonSeparatorInTime, kCFISO8601DateFormatWithColonSeparatorInTimeZone,
    kCFISO8601DateFormatWithDashSeparatorInDate, kCFISO8601DateFormatWithDay,
    kCFISO8601DateFormatWithFractionalSeconds, kCFISO8601DateFormatWithFullDate,
    kCFISO8601DateFormatWithFullTime, kCFISO8601DateFormatWithInternetDateTime,
    kCFISO8601DateFormatWithMonth, kCFISO8601DateFormatWithSpaceBetweenDateAndTime,
    kCFISO8601DateFormatWithTime, kCFISO8601DateFormatWithTimeZone,
    kCFISO8601DateFormatWithWeekOfYear, kCFISO8601DateFormatWithYear, CFISO8601DateFormatOptions,
};
pub use self::__CFDictionary::kCFCopyStringDictionaryKeyCallBacks;
pub use self::__CFDictionary::kCFTypeDictionaryKeyCallBacks;
pub use self::__CFDictionary::kCFTypeDictionaryValueCallBacks;
pub use self::__CFDictionary::CFDictionaryAddValue;
pub use self::__CFDictionary::CFDictionaryApplierFunction;
pub use self::__CFDictionary::CFDictionaryApplyFunction;
pub use self::__CFDictionary::CFDictionaryContainsKey;
pub use self::__CFDictionary::CFDictionaryContainsValue;
pub use self::__CFDictionary::CFDictionaryCopyDescriptionCallBack;
pub use self::__CFDictionary::CFDictionaryCreate;
pub use self::__CFDictionary::CFDictionaryCreateCopy;
pub use self::__CFDictionary::CFDictionaryCreateMutable;
pub use self::__CFDictionary::CFDictionaryCreateMutableCopy;
pub use self::__CFDictionary::CFDictionaryEqualCallBack;
pub use self::__CFDictionary::CFDictionaryGetCount;
pub use self::__CFDictionary::CFDictionaryGetCountOfKey;
pub use self::__CFDictionary::CFDictionaryGetCountOfValue;
pub use self::__CFDictionary::CFDictionaryGetKeysAndValues;
pub use self::__CFDictionary::CFDictionaryGetTypeID;
pub use self::__CFDictionary::CFDictionaryGetValue;
pub use self::__CFDictionary::CFDictionaryGetValueIfPresent;
pub use self::__CFDictionary::CFDictionaryHashCallBack;
pub use self::__CFDictionary::CFDictionaryKeyCallBacks;
pub use self::__CFDictionary::CFDictionaryRef;
pub use self::__CFDictionary::CFDictionaryReleaseCallBack;
pub use self::__CFDictionary::CFDictionaryRemoveAllValues;
pub use self::__CFDictionary::CFDictionaryRemoveValue;
pub use self::__CFDictionary::CFDictionaryReplaceValue;
pub use self::__CFDictionary::CFDictionaryRetainCallBack;
pub use self::__CFDictionary::CFDictionarySetValue;
pub use self::__CFDictionary::CFDictionaryValueCallBacks;
pub use self::__CFDictionary::CFMutableDictionaryRef;
pub use self::__CFError::kCFErrorDescriptionKey;
pub use self::__CFError::kCFErrorDomainCocoa;
pub use self::__CFError::kCFErrorDomainMach;
pub use self::__CFError::kCFErrorDomainOSStatus;
pub use self::__CFError::kCFErrorDomainPOSIX;
pub use self::__CFError::kCFErrorFilePathKey;
pub use self::__CFError::kCFErrorLocalizedDescriptionKey;
pub use self::__CFError::kCFErrorLocalizedFailureKey;
pub use self::__CFError::kCFErrorLocalizedFailureReasonKey;
pub use self::__CFError::kCFErrorLocalizedRecoverySuggestionKey;
pub use self::__CFError::kCFErrorURLKey;
pub use self::__CFError::kCFErrorUnderlyingErrorKey;
pub use self::__CFError::CFErrorCopyDescription;
pub use self::__CFError::CFErrorCopyFailureReason;
pub use self::__CFError::CFErrorCopyRecoverySuggestion;
pub use self::__CFError::CFErrorCopyUserInfo;
pub use self::__CFError::CFErrorCreate;
pub use self::__CFError::CFErrorCreateWithUserInfoKeysAndValues;
pub use self::__CFError::CFErrorDomain;
pub use self::__CFError::CFErrorGetCode;
pub use self::__CFError::CFErrorGetDomain;
pub use self::__CFError::CFErrorGetTypeID;
pub use self::__CFError::CFErrorRef;
pub use self::__CFFileDescriptor::CFFileDescriptorCallBack;
pub use self::__CFFileDescriptor::CFFileDescriptorContext;
pub use self::__CFFileDescriptor::CFFileDescriptorCreate;
pub use self::__CFFileDescriptor::CFFileDescriptorCreateRunLoopSource;
pub use self::__CFFileDescriptor::CFFileDescriptorDisableCallBacks;
pub use self::__CFFileDescriptor::CFFileDescriptorEnableCallBacks;
pub use self::__CFFileDescriptor::CFFileDescriptorGetContext;
pub use self::__CFFileDescriptor::CFFileDescriptorGetNativeDescriptor;
pub use self::__CFFileDescriptor::CFFileDescriptorGetTypeID;
pub use self::__CFFileDescriptor::CFFileDescriptorInvalidate;
pub use self::__CFFileDescriptor::CFFileDescriptorIsValid;
pub use self::__CFFileDescriptor::CFFileDescriptorNativeDescriptor;
pub use self::__CFFileDescriptor::CFFileDescriptorRef;
pub use self::__CFFileDescriptor::{kCFFileDescriptorReadCallBack, kCFFileDescriptorWriteCallBack};
pub use self::__CFFileSecurity::CFFileSecurityClearProperties;
pub use self::__CFFileSecurity::CFFileSecurityCopyGroupUUID;
pub use self::__CFFileSecurity::CFFileSecurityCopyOwnerUUID;
pub use self::__CFFileSecurity::CFFileSecurityCreate;
pub use self::__CFFileSecurity::CFFileSecurityCreateCopy;
pub use self::__CFFileSecurity::CFFileSecurityGetGroup;
pub use self::__CFFileSecurity::CFFileSecurityGetMode;
pub use self::__CFFileSecurity::CFFileSecurityGetOwner;
pub use self::__CFFileSecurity::CFFileSecurityGetTypeID;
pub use self::__CFFileSecurity::CFFileSecurityRef;
pub use self::__CFFileSecurity::CFFileSecuritySetGroup;
pub use self::__CFFileSecurity::CFFileSecuritySetGroupUUID;
pub use self::__CFFileSecurity::CFFileSecuritySetMode;
pub use self::__CFFileSecurity::CFFileSecuritySetOwner;
pub use self::__CFFileSecurity::CFFileSecuritySetOwnerUUID;
pub use self::__CFFileSecurity::{
    kCFFileSecurityClearAccessControlList, kCFFileSecurityClearGroup,
    kCFFileSecurityClearGroupUUID, kCFFileSecurityClearMode, kCFFileSecurityClearOwner,
    kCFFileSecurityClearOwnerUUID, CFFileSecurityClearOptions,
};
pub use self::__CFLocale::kCFBuddhistCalendar;
pub use self::__CFLocale::kCFChineseCalendar;
pub use self::__CFLocale::kCFGregorianCalendar;
pub use self::__CFLocale::kCFHebrewCalendar;
pub use self::__CFLocale::kCFISO8601Calendar;
pub use self::__CFLocale::kCFIndianCalendar;
pub use self::__CFLocale::kCFIslamicCalendar;
pub use self::__CFLocale::kCFIslamicCivilCalendar;
pub use self::__CFLocale::kCFIslamicTabularCalendar;
pub use self::__CFLocale::kCFIslamicUmmAlQuraCalendar;
pub use self::__CFLocale::kCFJapaneseCalendar;
pub use self::__CFLocale::kCFLocaleAlternateQuotationBeginDelimiterKey;
pub use self::__CFLocale::kCFLocaleAlternateQuotationEndDelimiterKey;
pub use self::__CFLocale::kCFLocaleCalendar;
pub use self::__CFLocale::kCFLocaleCalendarIdentifier;
pub use self::__CFLocale::kCFLocaleCollationIdentifier;
pub use self::__CFLocale::kCFLocaleCollatorIdentifier;
pub use self::__CFLocale::kCFLocaleCountryCode;
pub use self::__CFLocale::kCFLocaleCurrencyCode;
pub use self::__CFLocale::kCFLocaleCurrencySymbol;
pub use self::__CFLocale::kCFLocaleCurrentLocaleDidChangeNotification;
pub use self::__CFLocale::kCFLocaleDecimalSeparator;
pub use self::__CFLocale::kCFLocaleExemplarCharacterSet;
pub use self::__CFLocale::kCFLocaleGroupingSeparator;
pub use self::__CFLocale::kCFLocaleIdentifier;
pub use self::__CFLocale::kCFLocaleLanguageCode;
pub use self::__CFLocale::kCFLocaleMeasurementSystem;
pub use self::__CFLocale::kCFLocaleQuotationBeginDelimiterKey;
pub use self::__CFLocale::kCFLocaleQuotationEndDelimiterKey;
pub use self::__CFLocale::kCFLocaleScriptCode;
pub use self::__CFLocale::kCFLocaleUsesMetricSystem;
pub use self::__CFLocale::kCFLocaleVariantCode;
pub use self::__CFLocale::kCFPersianCalendar;
pub use self::__CFLocale::kCFRepublicOfChinaCalendar;
pub use self::__CFLocale::CFCalendarIdentifier;
pub use self::__CFLocale::CFLocaleCopyAvailableLocaleIdentifiers;
pub use self::__CFLocale::CFLocaleCopyCommonISOCurrencyCodes;
pub use self::__CFLocale::CFLocaleCopyCurrent;
pub use self::__CFLocale::CFLocaleCopyDisplayNameForPropertyValue;
pub use self::__CFLocale::CFLocaleCopyISOCountryCodes;
pub use self::__CFLocale::CFLocaleCopyISOCurrencyCodes;
pub use self::__CFLocale::CFLocaleCopyISOLanguageCodes;
pub use self::__CFLocale::CFLocaleCopyPreferredLanguages;
pub use self::__CFLocale::CFLocaleCreate;
pub use self::__CFLocale::CFLocaleCreateCanonicalLanguageIdentifierFromString;
pub use self::__CFLocale::CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes;
pub use self::__CFLocale::CFLocaleCreateCanonicalLocaleIdentifierFromString;
pub use self::__CFLocale::CFLocaleCreateComponentsFromLocaleIdentifier;
pub use self::__CFLocale::CFLocaleCreateCopy;
pub use self::__CFLocale::CFLocaleCreateLocaleIdentifierFromComponents;
pub use self::__CFLocale::CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode;
pub use self::__CFLocale::CFLocaleGetIdentifier;
pub use self::__CFLocale::CFLocaleGetLanguageCharacterDirection;
pub use self::__CFLocale::CFLocaleGetLanguageLineDirection;
pub use self::__CFLocale::CFLocaleGetSystem;
pub use self::__CFLocale::CFLocaleGetTypeID;
pub use self::__CFLocale::CFLocaleGetValue;
pub use self::__CFLocale::CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier;
pub use self::__CFLocale::CFLocaleIdentifier;
pub use self::__CFLocale::CFLocaleKey;
pub use self::__CFLocale::CFLocaleRef;
pub use self::__CFLocale::{
    kCFLocaleLanguageDirectionBottomToTop, kCFLocaleLanguageDirectionLeftToRight,
    kCFLocaleLanguageDirectionRightToLeft, kCFLocaleLanguageDirectionTopToBottom,
    kCFLocaleLanguageDirectionUnknown, CFLocaleLanguageDirection,
};
pub use self::__CFMachPort::CFMachPortCallBack;
pub use self::__CFMachPort::CFMachPortContext;
pub use self::__CFMachPort::CFMachPortCreate;
pub use self::__CFMachPort::CFMachPortCreateRunLoopSource;
pub use self::__CFMachPort::CFMachPortGetContext;
pub use self::__CFMachPort::CFMachPortGetInvalidationCallBack;
pub use self::__CFMachPort::CFMachPortGetTypeID;
pub use self::__CFMachPort::CFMachPortInvalidate;
pub use self::__CFMachPort::CFMachPortInvalidationCallBack;
pub use self::__CFMachPort::CFMachPortIsValid;
pub use self::__CFMachPort::CFMachPortRef;
pub use self::__CFMachPort::CFMachPortSetInvalidationCallBack;
pub use self::__CFMessagePort::CFMessagePortCallBack;
pub use self::__CFMessagePort::CFMessagePortContext;
pub use self::__CFMessagePort::CFMessagePortCreateLocal;
pub use self::__CFMessagePort::CFMessagePortCreateRemote;
pub use self::__CFMessagePort::CFMessagePortCreateRunLoopSource;
pub use self::__CFMessagePort::CFMessagePortGetContext;
pub use self::__CFMessagePort::CFMessagePortGetInvalidationCallBack;
pub use self::__CFMessagePort::CFMessagePortGetName;
pub use self::__CFMessagePort::CFMessagePortGetTypeID;
pub use self::__CFMessagePort::CFMessagePortInvalidate;
pub use self::__CFMessagePort::CFMessagePortInvalidationCallBack;
pub use self::__CFMessagePort::CFMessagePortIsRemote;
pub use self::__CFMessagePort::CFMessagePortIsValid;
pub use self::__CFMessagePort::CFMessagePortRef;
pub use self::__CFMessagePort::CFMessagePortSendRequest;
pub use self::__CFMessagePort::CFMessagePortSetInvalidationCallBack;
pub use self::__CFMessagePort::CFMessagePortSetName;
pub use self::__CFMessagePort::{
    kCFMessagePortBecameInvalidError, kCFMessagePortIsInvalid, kCFMessagePortReceiveTimeout,
    kCFMessagePortSendTimeout, kCFMessagePortSuccess, kCFMessagePortTransportError,
};
pub use self::__CFNotificationCenter::CFNotificationCallback;
pub use self::__CFNotificationCenter::CFNotificationCenterAddObserver;
pub use self::__CFNotificationCenter::CFNotificationCenterGetDarwinNotifyCenter;
pub use self::__CFNotificationCenter::CFNotificationCenterGetDistributedCenter;
pub use self::__CFNotificationCenter::CFNotificationCenterGetLocalCenter;
pub use self::__CFNotificationCenter::CFNotificationCenterGetTypeID;
pub use self::__CFNotificationCenter::CFNotificationCenterPostNotification;
pub use self::__CFNotificationCenter::CFNotificationCenterPostNotificationWithOptions;
pub use self::__CFNotificationCenter::CFNotificationCenterRef;
pub use self::__CFNotificationCenter::CFNotificationCenterRemoveEveryObserver;
pub use self::__CFNotificationCenter::CFNotificationCenterRemoveObserver;
pub use self::__CFNotificationCenter::CFNotificationName;
pub use self::__CFNotificationCenter::{
    kCFNotificationDeliverImmediately, kCFNotificationPostToAllSessions,
};
pub use self::__CFNotificationCenter::{
    CFNotificationSuspensionBehavior, CFNotificationSuspensionBehaviorCoalesce,
    CFNotificationSuspensionBehaviorDeliverImmediately, CFNotificationSuspensionBehaviorDrop,
    CFNotificationSuspensionBehaviorHold,
};
pub use self::__CFNumber::kCFBooleanFalse;
pub use self::__CFNumber::kCFBooleanTrue;
pub use self::__CFNumber::kCFNumberNaN;
pub use self::__CFNumber::kCFNumberNegativeInfinity;
pub use self::__CFNumber::kCFNumberPositiveInfinity;
pub use self::__CFNumber::CFBooleanGetTypeID;
pub use self::__CFNumber::CFBooleanGetValue;
pub use self::__CFNumber::CFBooleanRef;
pub use self::__CFNumber::CFNumberCompare;
pub use self::__CFNumber::CFNumberCreate;
pub use self::__CFNumber::CFNumberGetByteSize;
pub use self::__CFNumber::CFNumberGetType;
pub use self::__CFNumber::CFNumberGetTypeID;
pub use self::__CFNumber::CFNumberGetValue;
pub use self::__CFNumber::CFNumberIsFloatType;
pub use self::__CFNumber::CFNumberRef;
pub use self::__CFNumber::{
    kCFNumberCFIndexType, kCFNumberCGFloatType, kCFNumberCharType, kCFNumberDoubleType,
    kCFNumberFloat32Type, kCFNumberFloat64Type, kCFNumberFloatType, kCFNumberIntType,
    kCFNumberLongLongType, kCFNumberLongType, kCFNumberMaxType, kCFNumberNSIntegerType,
    kCFNumberSInt16Type, kCFNumberSInt32Type, kCFNumberSInt64Type, kCFNumberSInt8Type,
    kCFNumberShortType, CFNumberType,
};
pub use self::__CFNumberFormatter::kCFNumberFormatterAlwaysShowDecimalSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterCurrencyCode;
pub use self::__CFNumberFormatter::kCFNumberFormatterCurrencyDecimalSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterCurrencyGroupingSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterCurrencySymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterDecimalSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterDefaultFormat;
pub use self::__CFNumberFormatter::kCFNumberFormatterExponentSymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterFormatWidth;
pub use self::__CFNumberFormatter::kCFNumberFormatterGroupingSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterGroupingSize;
pub use self::__CFNumberFormatter::kCFNumberFormatterInfinitySymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterInternationalCurrencySymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterIsLenient;
pub use self::__CFNumberFormatter::kCFNumberFormatterMaxFractionDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMaxIntegerDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMaxSignificantDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMinFractionDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMinIntegerDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMinSignificantDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterMinusSign;
pub use self::__CFNumberFormatter::kCFNumberFormatterMultiplier;
pub use self::__CFNumberFormatter::kCFNumberFormatterNaNSymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterNegativePrefix;
pub use self::__CFNumberFormatter::kCFNumberFormatterNegativeSuffix;
pub use self::__CFNumberFormatter::kCFNumberFormatterPaddingCharacter;
pub use self::__CFNumberFormatter::kCFNumberFormatterPaddingPosition;
pub use self::__CFNumberFormatter::kCFNumberFormatterPerMillSymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterPercentSymbol;
pub use self::__CFNumberFormatter::kCFNumberFormatterPlusSign;
pub use self::__CFNumberFormatter::kCFNumberFormatterPositivePrefix;
pub use self::__CFNumberFormatter::kCFNumberFormatterPositiveSuffix;
pub use self::__CFNumberFormatter::kCFNumberFormatterRoundingIncrement;
pub use self::__CFNumberFormatter::kCFNumberFormatterRoundingMode;
pub use self::__CFNumberFormatter::kCFNumberFormatterSecondaryGroupingSize;
pub use self::__CFNumberFormatter::kCFNumberFormatterUseGroupingSeparator;
pub use self::__CFNumberFormatter::kCFNumberFormatterUseSignificantDigits;
pub use self::__CFNumberFormatter::kCFNumberFormatterZeroSymbol;
pub use self::__CFNumberFormatter::CFNumberFormatterCopyProperty;
pub use self::__CFNumberFormatter::CFNumberFormatterCreate;
pub use self::__CFNumberFormatter::CFNumberFormatterCreateNumberFromString;
pub use self::__CFNumberFormatter::CFNumberFormatterCreateStringWithNumber;
pub use self::__CFNumberFormatter::CFNumberFormatterCreateStringWithValue;
pub use self::__CFNumberFormatter::CFNumberFormatterGetDecimalInfoForCurrencyCode;
pub use self::__CFNumberFormatter::CFNumberFormatterGetFormat;
pub use self::__CFNumberFormatter::CFNumberFormatterGetLocale;
pub use self::__CFNumberFormatter::CFNumberFormatterGetStyle;
pub use self::__CFNumberFormatter::CFNumberFormatterGetTypeID;
pub use self::__CFNumberFormatter::CFNumberFormatterGetValueFromString;
pub use self::__CFNumberFormatter::CFNumberFormatterKey;
pub use self::__CFNumberFormatter::CFNumberFormatterRef;
pub use self::__CFNumberFormatter::CFNumberFormatterSetFormat;
pub use self::__CFNumberFormatter::CFNumberFormatterSetProperty;
pub use self::__CFNumberFormatter::{
    kCFNumberFormatterCurrencyAccountingStyle, kCFNumberFormatterCurrencyISOCodeStyle,
    kCFNumberFormatterCurrencyPluralStyle, kCFNumberFormatterCurrencyStyle,
    kCFNumberFormatterDecimalStyle, kCFNumberFormatterNoStyle, kCFNumberFormatterOrdinalStyle,
    kCFNumberFormatterPercentStyle, kCFNumberFormatterScientificStyle,
    kCFNumberFormatterSpellOutStyle, CFNumberFormatterStyle,
};
pub use self::__CFNumberFormatter::{
    kCFNumberFormatterPadAfterPrefix, kCFNumberFormatterPadAfterSuffix,
    kCFNumberFormatterPadBeforePrefix, kCFNumberFormatterPadBeforeSuffix,
    CFNumberFormatterPadPosition,
};
pub use self::__CFNumberFormatter::{
    kCFNumberFormatterParseIntegersOnly, CFNumberFormatterOptionFlags,
};
pub use self::__CFNumberFormatter::{
    kCFNumberFormatterRoundCeiling, kCFNumberFormatterRoundDown, kCFNumberFormatterRoundFloor,
    kCFNumberFormatterRoundHalfDown, kCFNumberFormatterRoundHalfEven,
    kCFNumberFormatterRoundHalfUp, kCFNumberFormatterRoundUp, CFNumberFormatterRoundingMode,
};
pub use self::__CFPlugIn::kCFPlugInDynamicRegisterFunctionKey;
pub use self::__CFPlugIn::kCFPlugInDynamicRegistrationKey;
pub use self::__CFPlugIn::kCFPlugInFactoriesKey;
pub use self::__CFPlugIn::kCFPlugInTypesKey;
pub use self::__CFPlugIn::kCFPlugInUnloadFunctionKey;
pub use self::__CFPlugIn::CFPlugInAddInstanceForFactory;
pub use self::__CFPlugIn::CFPlugInCreate;
pub use self::__CFPlugIn::CFPlugInDynamicRegisterFunction;
pub use self::__CFPlugIn::CFPlugInFactoryFunction;
pub use self::__CFPlugIn::CFPlugInFindFactoriesForPlugInType;
pub use self::__CFPlugIn::CFPlugInFindFactoriesForPlugInTypeInPlugIn;
pub use self::__CFPlugIn::CFPlugInGetBundle;
pub use self::__CFPlugIn::CFPlugInGetTypeID;
pub use self::__CFPlugIn::CFPlugInInstanceCreate;
pub use self::__CFPlugIn::CFPlugInInstanceCreateWithInstanceDataSize;
pub use self::__CFPlugIn::CFPlugInInstanceDeallocateInstanceDataFunction;
pub use self::__CFPlugIn::CFPlugInInstanceGetFactoryName;
pub use self::__CFPlugIn::CFPlugInInstanceGetInstanceData;
pub use self::__CFPlugIn::CFPlugInInstanceGetInterfaceFunction;
pub use self::__CFPlugIn::CFPlugInInstanceGetInterfaceFunctionTable;
pub use self::__CFPlugIn::CFPlugInInstanceGetTypeID;
pub use self::__CFPlugIn::CFPlugInInstanceRef;
pub use self::__CFPlugIn::CFPlugInIsLoadOnDemand;
pub use self::__CFPlugIn::CFPlugInRegisterFactoryFunction;
pub use self::__CFPlugIn::CFPlugInRegisterFactoryFunctionByName;
pub use self::__CFPlugIn::CFPlugInRegisterPlugInType;
pub use self::__CFPlugIn::CFPlugInRemoveInstanceForFactory;
pub use self::__CFPlugIn::CFPlugInSetLoadOnDemand;
pub use self::__CFPlugIn::CFPlugInUnloadFunction;
pub use self::__CFPlugIn::CFPlugInUnregisterFactory;
pub use self::__CFPlugIn::CFPlugInUnregisterPlugInType;
pub use self::__CFPreferences::kCFPreferencesAnyApplication;
pub use self::__CFPreferences::kCFPreferencesAnyHost;
pub use self::__CFPreferences::kCFPreferencesAnyUser;
pub use self::__CFPreferences::kCFPreferencesCurrentApplication;
pub use self::__CFPreferences::kCFPreferencesCurrentHost;
pub use self::__CFPreferences::kCFPreferencesCurrentUser;
pub use self::__CFPreferences::CFPreferencesAddSuitePreferencesToApp;
pub use self::__CFPreferences::CFPreferencesAppSynchronize;
pub use self::__CFPreferences::CFPreferencesAppValueIsForced;
pub use self::__CFPreferences::CFPreferencesCopyAppValue;
pub use self::__CFPreferences::CFPreferencesCopyApplicationList;
pub use self::__CFPreferences::CFPreferencesCopyKeyList;
pub use self::__CFPreferences::CFPreferencesCopyMultiple;
pub use self::__CFPreferences::CFPreferencesCopyValue;
pub use self::__CFPreferences::CFPreferencesGetAppBooleanValue;
pub use self::__CFPreferences::CFPreferencesGetAppIntegerValue;
pub use self::__CFPreferences::CFPreferencesRemoveSuitePreferencesFromApp;
pub use self::__CFPreferences::CFPreferencesSetAppValue;
pub use self::__CFPreferences::CFPreferencesSetMultiple;
pub use self::__CFPreferences::CFPreferencesSetValue;
pub use self::__CFPreferences::CFPreferencesSynchronize;
pub use self::__CFPropertyList::CFPropertyListCreateData;
pub use self::__CFPropertyList::CFPropertyListCreateDeepCopy;
pub use self::__CFPropertyList::CFPropertyListCreateFromStream;
pub use self::__CFPropertyList::CFPropertyListCreateFromXMLData;
pub use self::__CFPropertyList::CFPropertyListCreateWithData;
pub use self::__CFPropertyList::CFPropertyListCreateWithStream;
pub use self::__CFPropertyList::CFPropertyListCreateXMLData;
pub use self::__CFPropertyList::CFPropertyListIsValid;
pub use self::__CFPropertyList::CFPropertyListWrite;
pub use self::__CFPropertyList::CFPropertyListWriteToStream;
pub use self::__CFPropertyList::{
    kCFPropertyListBinaryFormat_v1_0, kCFPropertyListOpenStepFormat, kCFPropertyListXMLFormat_v1_0,
    CFPropertyListFormat,
};
pub use self::__CFPropertyList::{
    kCFPropertyListImmutable, kCFPropertyListMutableContainers,
    kCFPropertyListMutableContainersAndLeaves, CFPropertyListMutabilityOptions,
};
pub use self::__CFPropertyList::{
    kCFPropertyListReadCorruptError, kCFPropertyListReadStreamError,
    kCFPropertyListReadUnknownVersionError, kCFPropertyListWriteStreamError,
};
pub use self::__CFRunLoop::kCFRunLoopCommonModes;
pub use self::__CFRunLoop::kCFRunLoopDefaultMode;
pub use self::__CFRunLoop::CFRunLoopAddCommonMode;
pub use self::__CFRunLoop::CFRunLoopAddObserver;
pub use self::__CFRunLoop::CFRunLoopAddSource;
pub use self::__CFRunLoop::CFRunLoopAddTimer;
pub use self::__CFRunLoop::CFRunLoopContainsObserver;
pub use self::__CFRunLoop::CFRunLoopContainsSource;
pub use self::__CFRunLoop::CFRunLoopContainsTimer;
pub use self::__CFRunLoop::CFRunLoopCopyAllModes;
pub use self::__CFRunLoop::CFRunLoopCopyCurrentMode;
pub use self::__CFRunLoop::CFRunLoopGetCurrent;
pub use self::__CFRunLoop::CFRunLoopGetMain;
pub use self::__CFRunLoop::CFRunLoopGetNextTimerFireDate;
pub use self::__CFRunLoop::CFRunLoopGetTypeID;
pub use self::__CFRunLoop::CFRunLoopIsWaiting;
pub use self::__CFRunLoop::CFRunLoopMode;
pub use self::__CFRunLoop::CFRunLoopObserverCallBack;
pub use self::__CFRunLoop::CFRunLoopObserverContext;
pub use self::__CFRunLoop::CFRunLoopObserverCreate;
pub use self::__CFRunLoop::CFRunLoopObserverCreateWithHandler;
pub use self::__CFRunLoop::CFRunLoopObserverDoesRepeat;
pub use self::__CFRunLoop::CFRunLoopObserverGetActivities;
pub use self::__CFRunLoop::CFRunLoopObserverGetContext;
pub use self::__CFRunLoop::CFRunLoopObserverGetOrder;
pub use self::__CFRunLoop::CFRunLoopObserverGetTypeID;
pub use self::__CFRunLoop::CFRunLoopObserverInvalidate;
pub use self::__CFRunLoop::CFRunLoopObserverIsValid;
pub use self::__CFRunLoop::CFRunLoopObserverRef;
pub use self::__CFRunLoop::CFRunLoopPerformBlock;
pub use self::__CFRunLoop::CFRunLoopRef;
pub use self::__CFRunLoop::CFRunLoopRemoveObserver;
pub use self::__CFRunLoop::CFRunLoopRemoveSource;
pub use self::__CFRunLoop::CFRunLoopRemoveTimer;
pub use self::__CFRunLoop::CFRunLoopRun;
pub use self::__CFRunLoop::CFRunLoopRunInMode;
pub use self::__CFRunLoop::CFRunLoopSourceContext;
pub use self::__CFRunLoop::CFRunLoopSourceCreate;
pub use self::__CFRunLoop::CFRunLoopSourceGetContext;
pub use self::__CFRunLoop::CFRunLoopSourceGetOrder;
pub use self::__CFRunLoop::CFRunLoopSourceGetTypeID;
pub use self::__CFRunLoop::CFRunLoopSourceInvalidate;
pub use self::__CFRunLoop::CFRunLoopSourceIsValid;
pub use self::__CFRunLoop::CFRunLoopSourceRef;
pub use self::__CFRunLoop::CFRunLoopSourceSignal;
pub use self::__CFRunLoop::CFRunLoopStop;
pub use self::__CFRunLoop::CFRunLoopTimerCallBack;
pub use self::__CFRunLoop::CFRunLoopTimerContext;
pub use self::__CFRunLoop::CFRunLoopTimerCreate;
pub use self::__CFRunLoop::CFRunLoopTimerCreateWithHandler;
pub use self::__CFRunLoop::CFRunLoopTimerDoesRepeat;
pub use self::__CFRunLoop::CFRunLoopTimerGetContext;
pub use self::__CFRunLoop::CFRunLoopTimerGetInterval;
pub use self::__CFRunLoop::CFRunLoopTimerGetNextFireDate;
pub use self::__CFRunLoop::CFRunLoopTimerGetOrder;
pub use self::__CFRunLoop::CFRunLoopTimerGetTolerance;
pub use self::__CFRunLoop::CFRunLoopTimerGetTypeID;
pub use self::__CFRunLoop::CFRunLoopTimerInvalidate;
pub use self::__CFRunLoop::CFRunLoopTimerIsValid;
pub use self::__CFRunLoop::CFRunLoopTimerRef;
pub use self::__CFRunLoop::CFRunLoopTimerSetNextFireDate;
pub use self::__CFRunLoop::CFRunLoopTimerSetTolerance;
pub use self::__CFRunLoop::CFRunLoopWakeUp;
pub use self::__CFRunLoop::{
    kCFRunLoopAfterWaiting, kCFRunLoopAllActivities, kCFRunLoopBeforeSources,
    kCFRunLoopBeforeTimers, kCFRunLoopBeforeWaiting, kCFRunLoopEntry, kCFRunLoopExit,
    CFRunLoopActivity,
};
pub use self::__CFRunLoop::{
    kCFRunLoopRunFinished, kCFRunLoopRunHandledSource, kCFRunLoopRunStopped, kCFRunLoopRunTimedOut,
    CFRunLoopRunResult,
};
pub use self::__CFSet::kCFCopyStringSetCallBacks;
pub use self::__CFSet::kCFTypeSetCallBacks;
pub use self::__CFSet::CFMutableSetRef;
pub use self::__CFSet::CFSetAddValue;
pub use self::__CFSet::CFSetApplierFunction;
pub use self::__CFSet::CFSetApplyFunction;
pub use self::__CFSet::CFSetCallBacks;
pub use self::__CFSet::CFSetContainsValue;
pub use self::__CFSet::CFSetCopyDescriptionCallBack;
pub use self::__CFSet::CFSetCreate;
pub use self::__CFSet::CFSetCreateCopy;
pub use self::__CFSet::CFSetCreateMutable;
pub use self::__CFSet::CFSetCreateMutableCopy;
pub use self::__CFSet::CFSetEqualCallBack;
pub use self::__CFSet::CFSetGetCount;
pub use self::__CFSet::CFSetGetCountOfValue;
pub use self::__CFSet::CFSetGetTypeID;
pub use self::__CFSet::CFSetGetValue;
pub use self::__CFSet::CFSetGetValueIfPresent;
pub use self::__CFSet::CFSetGetValues;
pub use self::__CFSet::CFSetHashCallBack;
pub use self::__CFSet::CFSetRef;
pub use self::__CFSet::CFSetReleaseCallBack;
pub use self::__CFSet::CFSetRemoveAllValues;
pub use self::__CFSet::CFSetRemoveValue;
pub use self::__CFSet::CFSetReplaceValue;
pub use self::__CFSet::CFSetRetainCallBack;
pub use self::__CFSet::CFSetSetValue;
pub use self::__CFSocket::kCFSocketCommandKey;
pub use self::__CFSocket::kCFSocketErrorKey;
pub use self::__CFSocket::kCFSocketNameKey;
pub use self::__CFSocket::kCFSocketRegisterCommand;
pub use self::__CFSocket::kCFSocketResultKey;
pub use self::__CFSocket::kCFSocketRetrieveCommand;
pub use self::__CFSocket::kCFSocketValueKey;
pub use self::__CFSocket::CFSocketCallBack;
pub use self::__CFSocket::CFSocketConnectToAddress;
pub use self::__CFSocket::CFSocketContext;
pub use self::__CFSocket::CFSocketCopyAddress;
pub use self::__CFSocket::CFSocketCopyPeerAddress;
pub use self::__CFSocket::CFSocketCopyRegisteredSocketSignature;
pub use self::__CFSocket::CFSocketCopyRegisteredValue;
pub use self::__CFSocket::CFSocketCreate;
pub use self::__CFSocket::CFSocketCreateConnectedToSocketSignature;
pub use self::__CFSocket::CFSocketCreateRunLoopSource;
pub use self::__CFSocket::CFSocketCreateWithNative;
pub use self::__CFSocket::CFSocketCreateWithSocketSignature;
pub use self::__CFSocket::CFSocketDisableCallBacks;
pub use self::__CFSocket::CFSocketEnableCallBacks;
pub use self::__CFSocket::CFSocketGetContext;
pub use self::__CFSocket::CFSocketGetDefaultNameRegistryPortNumber;
pub use self::__CFSocket::CFSocketGetNative;
pub use self::__CFSocket::CFSocketGetSocketFlags;
pub use self::__CFSocket::CFSocketGetTypeID;
pub use self::__CFSocket::CFSocketInvalidate;
pub use self::__CFSocket::CFSocketIsValid;
pub use self::__CFSocket::CFSocketNativeHandle;
pub use self::__CFSocket::CFSocketRef;
pub use self::__CFSocket::CFSocketRegisterSocketSignature;
pub use self::__CFSocket::CFSocketRegisterValue;
pub use self::__CFSocket::CFSocketSendData;
pub use self::__CFSocket::CFSocketSetAddress;
pub use self::__CFSocket::CFSocketSetDefaultNameRegistryPortNumber;
pub use self::__CFSocket::CFSocketSetSocketFlags;
pub use self::__CFSocket::CFSocketSignature;
pub use self::__CFSocket::CFSocketUnregister;
pub use self::__CFSocket::{
    kCFSocketAcceptCallBack, kCFSocketConnectCallBack, kCFSocketDataCallBack, kCFSocketNoCallBack,
    kCFSocketReadCallBack, kCFSocketWriteCallBack, CFSocketCallBackType,
};
pub use self::__CFSocket::{
    kCFSocketAutomaticallyReenableAcceptCallBack, kCFSocketAutomaticallyReenableDataCallBack,
    kCFSocketAutomaticallyReenableReadCallBack, kCFSocketAutomaticallyReenableWriteCallBack,
    kCFSocketCloseOnInvalidate, kCFSocketLeaveErrors,
};
pub use self::__CFSocket::{kCFSocketError, kCFSocketSuccess, kCFSocketTimeout, CFSocketError};
pub use self::__CFStream::kCFStreamErrorDomainSOCKS;
pub use self::__CFStream::kCFStreamErrorDomainSSL;
pub use self::__CFStream::kCFStreamPropertyAppendToFile;
pub use self::__CFStream::kCFStreamPropertyDataWritten;
pub use self::__CFStream::kCFStreamPropertyFileCurrentOffset;
pub use self::__CFStream::kCFStreamPropertySOCKSPassword;
pub use self::__CFStream::kCFStreamPropertySOCKSProxy;
pub use self::__CFStream::kCFStreamPropertySOCKSProxyHost;
pub use self::__CFStream::kCFStreamPropertySOCKSProxyPort;
pub use self::__CFStream::kCFStreamPropertySOCKSUser;
pub use self::__CFStream::kCFStreamPropertySOCKSVersion;
pub use self::__CFStream::kCFStreamPropertyShouldCloseNativeSocket;
pub use self::__CFStream::kCFStreamPropertySocketNativeHandle;
pub use self::__CFStream::kCFStreamPropertySocketRemoteHostName;
pub use self::__CFStream::kCFStreamPropertySocketRemotePortNumber;
pub use self::__CFStream::kCFStreamPropertySocketSecurityLevel;
pub use self::__CFStream::kCFStreamSocketSOCKSVersion4;
pub use self::__CFStream::kCFStreamSocketSOCKSVersion5;
pub use self::__CFStream::kCFStreamSocketSecurityLevelNegotiatedSSL;
pub use self::__CFStream::kCFStreamSocketSecurityLevelNone;
pub use self::__CFStream::kCFStreamSocketSecurityLevelSSLv2;
pub use self::__CFStream::kCFStreamSocketSecurityLevelSSLv3;
pub use self::__CFStream::kCFStreamSocketSecurityLevelTLSv1;
pub use self::__CFStream::CFReadStreamClientCallBack;
pub use self::__CFStream::CFReadStreamClose;
pub use self::__CFStream::CFReadStreamCopyError;
pub use self::__CFStream::CFReadStreamCopyProperty;
pub use self::__CFStream::CFReadStreamCreateWithBytesNoCopy;
pub use self::__CFStream::CFReadStreamCreateWithFile;
pub use self::__CFStream::CFReadStreamGetBuffer;
pub use self::__CFStream::CFReadStreamGetError;
pub use self::__CFStream::CFReadStreamGetStatus;
pub use self::__CFStream::CFReadStreamGetTypeID;
pub use self::__CFStream::CFReadStreamHasBytesAvailable;
pub use self::__CFStream::CFReadStreamOpen;
pub use self::__CFStream::CFReadStreamRead;
pub use self::__CFStream::CFReadStreamRef;
pub use self::__CFStream::CFReadStreamScheduleWithRunLoop;
pub use self::__CFStream::CFReadStreamSetClient;
pub use self::__CFStream::CFReadStreamSetProperty;
pub use self::__CFStream::CFReadStreamUnscheduleFromRunLoop;
pub use self::__CFStream::CFStreamClientContext;
pub use self::__CFStream::CFStreamCreateBoundPair;
pub use self::__CFStream::CFStreamCreatePairWithPeerSocketSignature;
pub use self::__CFStream::CFStreamCreatePairWithSocket;
pub use self::__CFStream::CFStreamCreatePairWithSocketToHost;
pub use self::__CFStream::CFStreamError;
pub use self::__CFStream::CFStreamPropertyKey;
pub use self::__CFStream::CFWriteStreamCanAcceptBytes;
pub use self::__CFStream::CFWriteStreamClientCallBack;
pub use self::__CFStream::CFWriteStreamClose;
pub use self::__CFStream::CFWriteStreamCopyError;
pub use self::__CFStream::CFWriteStreamCopyProperty;
pub use self::__CFStream::CFWriteStreamCreateWithAllocatedBuffers;
pub use self::__CFStream::CFWriteStreamCreateWithBuffer;
pub use self::__CFStream::CFWriteStreamCreateWithFile;
pub use self::__CFStream::CFWriteStreamGetError;
pub use self::__CFStream::CFWriteStreamGetStatus;
pub use self::__CFStream::CFWriteStreamGetTypeID;
pub use self::__CFStream::CFWriteStreamOpen;
pub use self::__CFStream::CFWriteStreamRef;
pub use self::__CFStream::CFWriteStreamScheduleWithRunLoop;
pub use self::__CFStream::CFWriteStreamSetClient;
pub use self::__CFStream::CFWriteStreamSetProperty;
pub use self::__CFStream::CFWriteStreamUnscheduleFromRunLoop;
pub use self::__CFStream::CFWriteStreamWrite;
pub use self::__CFStream::{
    kCFStreamErrorDomainCustom, kCFStreamErrorDomainMacOSStatus, kCFStreamErrorDomainPOSIX,
    CFStreamErrorDomain,
};
pub use self::__CFStream::{
    kCFStreamEventCanAcceptBytes, kCFStreamEventEndEncountered, kCFStreamEventErrorOccurred,
    kCFStreamEventHasBytesAvailable, kCFStreamEventNone, kCFStreamEventOpenCompleted,
    CFStreamEventType,
};
pub use self::__CFStream::{
    kCFStreamStatusAtEnd, kCFStreamStatusClosed, kCFStreamStatusError, kCFStreamStatusNotOpen,
    kCFStreamStatusOpen, kCFStreamStatusOpening, kCFStreamStatusReading, kCFStreamStatusWriting,
    CFStreamStatus,
};
pub use self::__CFString::kCFStringTransformFullwidthHalfwidth;
pub use self::__CFString::kCFStringTransformHiraganaKatakana;
pub use self::__CFString::kCFStringTransformLatinArabic;
pub use self::__CFString::kCFStringTransformLatinCyrillic;
pub use self::__CFString::kCFStringTransformLatinGreek;
pub use self::__CFString::kCFStringTransformLatinHangul;
pub use self::__CFString::kCFStringTransformLatinHebrew;
pub use self::__CFString::kCFStringTransformLatinHiragana;
pub use self::__CFString::kCFStringTransformLatinKatakana;
pub use self::__CFString::kCFStringTransformLatinThai;
pub use self::__CFString::kCFStringTransformMandarinLatin;
pub use self::__CFString::kCFStringTransformStripCombiningMarks;
pub use self::__CFString::kCFStringTransformStripDiacritics;
pub use self::__CFString::kCFStringTransformToLatin;
pub use self::__CFString::kCFStringTransformToUnicodeName;
pub use self::__CFString::kCFStringTransformToXMLHex;
pub use self::__CFString::CFShow;
pub use self::__CFString::CFShowStr;
pub use self::__CFString::CFStringAppend;
pub use self::__CFString::CFStringAppendCString;
pub use self::__CFString::CFStringAppendCharacters;
pub use self::__CFString::CFStringAppendPascalString;
pub use self::__CFString::CFStringCapitalize;
pub use self::__CFString::CFStringCompare;
pub use self::__CFString::CFStringCompareWithOptions;
pub use self::__CFString::CFStringCompareWithOptionsAndLocale;
pub use self::__CFString::CFStringConvertEncodingToIANACharSetName;
pub use self::__CFString::CFStringConvertEncodingToNSStringEncoding;
pub use self::__CFString::CFStringConvertEncodingToWindowsCodepage;
pub use self::__CFString::CFStringConvertIANACharSetNameToEncoding;
pub use self::__CFString::CFStringConvertNSStringEncodingToEncoding;
pub use self::__CFString::CFStringConvertWindowsCodepageToEncoding;
pub use self::__CFString::CFStringCreateArrayBySeparatingStrings;
pub use self::__CFString::CFStringCreateArrayWithFindResults;
pub use self::__CFString::CFStringCreateByCombiningStrings;
pub use self::__CFString::CFStringCreateCopy;
pub use self::__CFString::CFStringCreateExternalRepresentation;
pub use self::__CFString::CFStringCreateFromExternalRepresentation;
pub use self::__CFString::CFStringCreateMutable;
pub use self::__CFString::CFStringCreateMutableCopy;
pub use self::__CFString::CFStringCreateMutableWithExternalCharactersNoCopy;
pub use self::__CFString::CFStringCreateWithBytes;
pub use self::__CFString::CFStringCreateWithBytesNoCopy;
pub use self::__CFString::CFStringCreateWithCString;
pub use self::__CFString::CFStringCreateWithCStringNoCopy;
pub use self::__CFString::CFStringCreateWithCharacters;
pub use self::__CFString::CFStringCreateWithCharactersNoCopy;
pub use self::__CFString::CFStringCreateWithFileSystemRepresentation;
pub use self::__CFString::CFStringCreateWithPascalString;
pub use self::__CFString::CFStringCreateWithPascalStringNoCopy;
pub use self::__CFString::CFStringCreateWithSubstring;
pub use self::__CFString::CFStringDelete;
pub use self::__CFString::CFStringFind;
pub use self::__CFString::CFStringFindAndReplace;
pub use self::__CFString::CFStringFindCharacterFromSet;
pub use self::__CFString::CFStringFindWithOptions;
pub use self::__CFString::CFStringFindWithOptionsAndLocale;
pub use self::__CFString::CFStringFold;
pub use self::__CFString::CFStringGetBytes;
pub use self::__CFString::CFStringGetCString;
pub use self::__CFString::CFStringGetCStringPtr;
pub use self::__CFString::CFStringGetCharacterAtIndex;
pub use self::__CFString::CFStringGetCharacters;
pub use self::__CFString::CFStringGetCharactersPtr;
pub use self::__CFString::CFStringGetDoubleValue;
pub use self::__CFString::CFStringGetFastestEncoding;
pub use self::__CFString::CFStringGetFileSystemRepresentation;
pub use self::__CFString::CFStringGetHyphenationLocationBeforeIndex;
pub use self::__CFString::CFStringGetIntValue;
pub use self::__CFString::CFStringGetLength;
pub use self::__CFString::CFStringGetLineBounds;
pub use self::__CFString::CFStringGetListOfAvailableEncodings;
pub use self::__CFString::CFStringGetMaximumSizeForEncoding;
pub use self::__CFString::CFStringGetMaximumSizeOfFileSystemRepresentation;
pub use self::__CFString::CFStringGetMostCompatibleMacStringEncoding;
pub use self::__CFString::CFStringGetNameOfEncoding;
pub use self::__CFString::CFStringGetParagraphBounds;
pub use self::__CFString::CFStringGetPascalString;
pub use self::__CFString::CFStringGetPascalStringPtr;
pub use self::__CFString::CFStringGetRangeOfComposedCharactersAtIndex;
pub use self::__CFString::CFStringGetSmallestEncoding;
pub use self::__CFString::CFStringGetSystemEncoding;
pub use self::__CFString::CFStringGetTypeID;
pub use self::__CFString::CFStringHasPrefix;
pub use self::__CFString::CFStringHasSuffix;
pub use self::__CFString::CFStringInlineBuffer;
pub use self::__CFString::CFStringInsert;
pub use self::__CFString::CFStringIsEncodingAvailable;
pub use self::__CFString::CFStringIsHyphenationAvailableForLocale;
pub use self::__CFString::CFStringLowercase;
pub use self::__CFString::CFStringNormalize;
pub use self::__CFString::CFStringPad;
pub use self::__CFString::CFStringReplace;
pub use self::__CFString::CFStringReplaceAll;
pub use self::__CFString::CFStringSetExternalCharactersNoCopy;
pub use self::__CFString::CFStringTransform;
pub use self::__CFString::CFStringTrim;
pub use self::__CFString::CFStringTrimWhitespace;
pub use self::__CFString::CFStringUppercase;
pub use self::__CFString::__CFStringMakeConstantString;
pub use self::__CFString::{
    kCFCompareAnchored, kCFCompareBackwards, kCFCompareCaseInsensitive,
    kCFCompareDiacriticInsensitive, kCFCompareForcedOrdering, kCFCompareLocalized,
    kCFCompareNonliteral, kCFCompareNumerically, kCFCompareWidthInsensitive, CFStringCompareFlags,
};
pub use self::__CFString::{
    kCFStringEncodingASCII, kCFStringEncodingISOLatin1, kCFStringEncodingMacRoman,
    kCFStringEncodingNextStepLatin, kCFStringEncodingNonLossyASCII, kCFStringEncodingUTF16,
    kCFStringEncodingUTF16BE, kCFStringEncodingUTF16LE, kCFStringEncodingUTF32,
    kCFStringEncodingUTF32BE, kCFStringEncodingUTF32LE, kCFStringEncodingUTF8,
    kCFStringEncodingUnicode, kCFStringEncodingWindowsLatin1, CFStringEncoding,
};
pub use self::__CFString::{
    kCFStringNormalizationFormC, kCFStringNormalizationFormD, kCFStringNormalizationFormKC,
    kCFStringNormalizationFormKD, CFStringNormalizationForm,
};
pub use self::__CFStringEncodingExt::{
    kCFStringEncodingANSEL, kCFStringEncodingBig5, kCFStringEncodingBig5_E,
    kCFStringEncodingBig5_HKSCS_1999, kCFStringEncodingCNS_11643_92_P1,
    kCFStringEncodingCNS_11643_92_P2, kCFStringEncodingCNS_11643_92_P3, kCFStringEncodingDOSArabic,
    kCFStringEncodingDOSBalticRim, kCFStringEncodingDOSCanadianFrench,
    kCFStringEncodingDOSChineseSimplif, kCFStringEncodingDOSChineseTrad,
    kCFStringEncodingDOSCyrillic, kCFStringEncodingDOSGreek, kCFStringEncodingDOSGreek1,
    kCFStringEncodingDOSGreek2, kCFStringEncodingDOSHebrew, kCFStringEncodingDOSIcelandic,
    kCFStringEncodingDOSJapanese, kCFStringEncodingDOSKorean, kCFStringEncodingDOSLatin1,
    kCFStringEncodingDOSLatin2, kCFStringEncodingDOSLatinUS, kCFStringEncodingDOSNordic,
    kCFStringEncodingDOSPortuguese, kCFStringEncodingDOSRussian, kCFStringEncodingDOSThai,
    kCFStringEncodingDOSTurkish, kCFStringEncodingEBCDIC_CP037, kCFStringEncodingEBCDIC_US,
    kCFStringEncodingEUC_CN, kCFStringEncodingEUC_JP, kCFStringEncodingEUC_KR,
    kCFStringEncodingEUC_TW, kCFStringEncodingGBK_95, kCFStringEncodingGB_18030_2000,
    kCFStringEncodingGB_2312_80, kCFStringEncodingHZ_GB_2312, kCFStringEncodingISOLatin10,
    kCFStringEncodingISOLatin2, kCFStringEncodingISOLatin3, kCFStringEncodingISOLatin4,
    kCFStringEncodingISOLatin5, kCFStringEncodingISOLatin6, kCFStringEncodingISOLatin7,
    kCFStringEncodingISOLatin8, kCFStringEncodingISOLatin9, kCFStringEncodingISOLatinArabic,
    kCFStringEncodingISOLatinCyrillic, kCFStringEncodingISOLatinGreek,
    kCFStringEncodingISOLatinHebrew, kCFStringEncodingISOLatinThai, kCFStringEncodingISO_2022_CN,
    kCFStringEncodingISO_2022_CN_EXT, kCFStringEncodingISO_2022_JP, kCFStringEncodingISO_2022_JP_1,
    kCFStringEncodingISO_2022_JP_2, kCFStringEncodingISO_2022_JP_3, kCFStringEncodingISO_2022_KR,
    kCFStringEncodingJIS_C6226_78, kCFStringEncodingJIS_X0201_76, kCFStringEncodingJIS_X0208_83,
    kCFStringEncodingJIS_X0208_90, kCFStringEncodingJIS_X0212_90, kCFStringEncodingKOI8_R,
    kCFStringEncodingKOI8_U, kCFStringEncodingKSC_5601_87, kCFStringEncodingKSC_5601_92_Johab,
    kCFStringEncodingMacArabic, kCFStringEncodingMacArmenian, kCFStringEncodingMacBengali,
    kCFStringEncodingMacBurmese, kCFStringEncodingMacCeltic, kCFStringEncodingMacCentralEurRoman,
    kCFStringEncodingMacChineseSimp, kCFStringEncodingMacChineseTrad, kCFStringEncodingMacCroatian,
    kCFStringEncodingMacCyrillic, kCFStringEncodingMacDevanagari, kCFStringEncodingMacDingbats,
    kCFStringEncodingMacEthiopic, kCFStringEncodingMacExtArabic, kCFStringEncodingMacFarsi,
    kCFStringEncodingMacGaelic, kCFStringEncodingMacGeorgian, kCFStringEncodingMacGreek,
    kCFStringEncodingMacGujarati, kCFStringEncodingMacGurmukhi, kCFStringEncodingMacHFS,
    kCFStringEncodingMacHebrew, kCFStringEncodingMacIcelandic, kCFStringEncodingMacInuit,
    kCFStringEncodingMacJapanese, kCFStringEncodingMacKannada, kCFStringEncodingMacKhmer,
    kCFStringEncodingMacKorean, kCFStringEncodingMacLaotian, kCFStringEncodingMacMalayalam,
    kCFStringEncodingMacMongolian, kCFStringEncodingMacOriya, kCFStringEncodingMacRomanLatin1,
    kCFStringEncodingMacRomanian, kCFStringEncodingMacSinhalese, kCFStringEncodingMacSymbol,
    kCFStringEncodingMacTamil, kCFStringEncodingMacTelugu, kCFStringEncodingMacThai,
    kCFStringEncodingMacTibetan, kCFStringEncodingMacTurkish, kCFStringEncodingMacUkrainian,
    kCFStringEncodingMacVT100, kCFStringEncodingMacVietnamese, kCFStringEncodingNextStepJapanese,
    kCFStringEncodingShiftJIS, kCFStringEncodingShiftJIS_X0213, kCFStringEncodingShiftJIS_X0213_00,
    kCFStringEncodingShiftJIS_X0213_MenKuTen, kCFStringEncodingUTF7, kCFStringEncodingUTF7_IMAP,
    kCFStringEncodingVISCII, kCFStringEncodingWindowsArabic, kCFStringEncodingWindowsBalticRim,
    kCFStringEncodingWindowsCyrillic, kCFStringEncodingWindowsGreek,
    kCFStringEncodingWindowsHebrew, kCFStringEncodingWindowsKoreanJohab,
    kCFStringEncodingWindowsLatin2, kCFStringEncodingWindowsLatin5,
    kCFStringEncodingWindowsVietnamese, CFStringEncodings,
};
pub use self::__CFStringTokenizer::CFStringTokenizerAdvanceToNextToken;
pub use self::__CFStringTokenizer::CFStringTokenizerCopyBestStringLanguage;
pub use self::__CFStringTokenizer::CFStringTokenizerCopyCurrentTokenAttribute;
pub use self::__CFStringTokenizer::CFStringTokenizerCreate;
pub use self::__CFStringTokenizer::CFStringTokenizerGetCurrentSubTokens;
pub use self::__CFStringTokenizer::CFStringTokenizerGetCurrentTokenRange;
pub use self::__CFStringTokenizer::CFStringTokenizerGetTypeID;
pub use self::__CFStringTokenizer::CFStringTokenizerGoToTokenAtIndex;
pub use self::__CFStringTokenizer::CFStringTokenizerRef;
pub use self::__CFStringTokenizer::CFStringTokenizerSetString;
pub use self::__CFStringTokenizer::{
    kCFStringTokenizerAttributeLanguage, kCFStringTokenizerAttributeLatinTranscription,
    kCFStringTokenizerUnitLineBreak, kCFStringTokenizerUnitParagraph,
    kCFStringTokenizerUnitSentence, kCFStringTokenizerUnitWord, kCFStringTokenizerUnitWordBoundary,
};
pub use self::__CFStringTokenizer::{
    kCFStringTokenizerTokenHasDerivedSubTokensMask, kCFStringTokenizerTokenHasHasNumbersMask,
    kCFStringTokenizerTokenHasNonLettersMask, kCFStringTokenizerTokenHasSubTokensMask,
    kCFStringTokenizerTokenIsCJWordMask, kCFStringTokenizerTokenNone,
    kCFStringTokenizerTokenNormal, CFStringTokenizerTokenType,
};
pub use self::__CFTimeZone::kCFTimeZoneSystemTimeZoneDidChangeNotification;
pub use self::__CFTimeZone::CFTimeZoneCopyAbbreviation;
pub use self::__CFTimeZone::CFTimeZoneCopyAbbreviationDictionary;
pub use self::__CFTimeZone::CFTimeZoneCopyDefault;
pub use self::__CFTimeZone::CFTimeZoneCopyKnownNames;
pub use self::__CFTimeZone::CFTimeZoneCopyLocalizedName;
pub use self::__CFTimeZone::CFTimeZoneCopySystem;
pub use self::__CFTimeZone::CFTimeZoneCreate;
pub use self::__CFTimeZone::CFTimeZoneCreateWithName;
pub use self::__CFTimeZone::CFTimeZoneCreateWithTimeIntervalFromGMT;
pub use self::__CFTimeZone::CFTimeZoneGetData;
pub use self::__CFTimeZone::CFTimeZoneGetDaylightSavingTimeOffset;
pub use self::__CFTimeZone::CFTimeZoneGetName;
pub use self::__CFTimeZone::CFTimeZoneGetNextDaylightSavingTimeTransition;
pub use self::__CFTimeZone::CFTimeZoneGetSecondsFromGMT;
pub use self::__CFTimeZone::CFTimeZoneGetTypeID;
pub use self::__CFTimeZone::CFTimeZoneIsDaylightSavingTime;
pub use self::__CFTimeZone::CFTimeZoneResetSystem;
pub use self::__CFTimeZone::CFTimeZoneSetAbbreviationDictionary;
pub use self::__CFTimeZone::CFTimeZoneSetDefault;
pub use self::__CFTimeZone::{
    kCFTimeZoneNameStyleDaylightSaving, kCFTimeZoneNameStyleGeneric,
    kCFTimeZoneNameStyleShortDaylightSaving, kCFTimeZoneNameStyleShortGeneric,
    kCFTimeZoneNameStyleShortStandard, kCFTimeZoneNameStyleStandard, CFTimeZoneNameStyle,
};
pub use self::__CFTree::CFTreeAppendChild;
pub use self::__CFTree::CFTreeApplierFunction;
pub use self::__CFTree::CFTreeApplyFunctionToChildren;
pub use self::__CFTree::CFTreeContext;
pub use self::__CFTree::CFTreeCopyDescriptionCallBack;
pub use self::__CFTree::CFTreeCreate;
pub use self::__CFTree::CFTreeFindRoot;
pub use self::__CFTree::CFTreeGetChildAtIndex;
pub use self::__CFTree::CFTreeGetChildCount;
pub use self::__CFTree::CFTreeGetChildren;
pub use self::__CFTree::CFTreeGetContext;
pub use self::__CFTree::CFTreeGetFirstChild;
pub use self::__CFTree::CFTreeGetNextSibling;
pub use self::__CFTree::CFTreeGetParent;
pub use self::__CFTree::CFTreeGetTypeID;
pub use self::__CFTree::CFTreeInsertSibling;
pub use self::__CFTree::CFTreePrependChild;
pub use self::__CFTree::CFTreeRef;
pub use self::__CFTree::CFTreeReleaseCallBack;
pub use self::__CFTree::CFTreeRemove;
pub use self::__CFTree::CFTreeRemoveAllChildren;
pub use self::__CFTree::CFTreeRetainCallBack;
pub use self::__CFTree::CFTreeSetContext;
pub use self::__CFTree::CFTreeSortChildren;
pub use self::__CFURLAccess::kCFURLFileDirectoryContents;
pub use self::__CFURLAccess::kCFURLFileExists;
pub use self::__CFURLAccess::kCFURLFileLastModificationTime;
pub use self::__CFURLAccess::kCFURLFileLength;
pub use self::__CFURLAccess::kCFURLFileOwnerID;
pub use self::__CFURLAccess::kCFURLFilePOSIXMode;
pub use self::__CFURLAccess::kCFURLHTTPStatusCode;
pub use self::__CFURLAccess::kCFURLHTTPStatusLine;
pub use self::__CFURLAccess::CFURLCreateDataAndPropertiesFromResource;
pub use self::__CFURLAccess::CFURLCreatePropertyFromResource;
pub use self::__CFURLAccess::CFURLDestroyResource;
pub use self::__CFURLAccess::CFURLWriteDataAndPropertiesToResource;
pub use self::__CFURLAccess::{
    kCFURLImproperArgumentsError, kCFURLPropertyKeyUnavailableError,
    kCFURLRemoteHostUnavailableError, kCFURLResourceAccessViolationError,
    kCFURLResourceNotFoundError, kCFURLTimeoutError, kCFURLUnknownError,
    kCFURLUnknownPropertyKeyError, kCFURLUnknownSchemeError, CFURLError,
};
pub use self::__CFURLEnumerator::CFURLEnumeratorCreateForDirectoryURL;
pub use self::__CFURLEnumerator::CFURLEnumeratorCreateForMountedVolumes;
pub use self::__CFURLEnumerator::CFURLEnumeratorGetDescendentLevel;
pub use self::__CFURLEnumerator::CFURLEnumeratorGetNextURL;
pub use self::__CFURLEnumerator::CFURLEnumeratorGetSourceDidChange;
pub use self::__CFURLEnumerator::CFURLEnumeratorGetTypeID;
pub use self::__CFURLEnumerator::CFURLEnumeratorRef;
pub use self::__CFURLEnumerator::CFURLEnumeratorSkipDescendents;
pub use self::__CFURLEnumerator::{
    kCFURLEnumeratorDefaultBehavior, kCFURLEnumeratorDescendRecursively,
    kCFURLEnumeratorGenerateFileReferenceURLs, kCFURLEnumeratorGenerateRelativePathURLs,
    kCFURLEnumeratorIncludeDirectoriesPostOrder, kCFURLEnumeratorIncludeDirectoriesPreOrder,
    kCFURLEnumeratorSkipInvisibles, kCFURLEnumeratorSkipPackageContents, CFURLEnumeratorOptions,
};
pub use self::__CFURLEnumerator::{
    kCFURLEnumeratorDirectoryPostOrderSuccess, kCFURLEnumeratorEnd, kCFURLEnumeratorError,
    kCFURLEnumeratorSuccess, CFURLEnumeratorResult,
};
pub use self::__CFUserNotification::kCFUserNotificationAlertHeaderKey;
pub use self::__CFUserNotification::kCFUserNotificationAlertMessageKey;
pub use self::__CFUserNotification::kCFUserNotificationAlertTopMostKey;
pub use self::__CFUserNotification::kCFUserNotificationAlternateButtonTitleKey;
pub use self::__CFUserNotification::kCFUserNotificationCheckBoxTitlesKey;
pub use self::__CFUserNotification::kCFUserNotificationDefaultButtonTitleKey;
pub use self::__CFUserNotification::kCFUserNotificationIconURLKey;
pub use self::__CFUserNotification::kCFUserNotificationKeyboardTypesKey;
pub use self::__CFUserNotification::kCFUserNotificationLocalizationURLKey;
pub use self::__CFUserNotification::kCFUserNotificationOtherButtonTitleKey;
pub use self::__CFUserNotification::kCFUserNotificationPopUpSelectionKey;
pub use self::__CFUserNotification::kCFUserNotificationPopUpTitlesKey;
pub use self::__CFUserNotification::kCFUserNotificationProgressIndicatorValueKey;
pub use self::__CFUserNotification::kCFUserNotificationSoundURLKey;
pub use self::__CFUserNotification::kCFUserNotificationTextFieldTitlesKey;
pub use self::__CFUserNotification::kCFUserNotificationTextFieldValuesKey;
pub use self::__CFUserNotification::CFUserNotificationCallBack;
pub use self::__CFUserNotification::CFUserNotificationCancel;
pub use self::__CFUserNotification::CFUserNotificationCreate;
pub use self::__CFUserNotification::CFUserNotificationCreateRunLoopSource;
pub use self::__CFUserNotification::CFUserNotificationDisplayAlert;
pub use self::__CFUserNotification::CFUserNotificationDisplayNotice;
pub use self::__CFUserNotification::CFUserNotificationGetResponseDictionary;
pub use self::__CFUserNotification::CFUserNotificationGetResponseValue;
pub use self::__CFUserNotification::CFUserNotificationGetTypeID;
pub use self::__CFUserNotification::CFUserNotificationReceiveResponse;
pub use self::__CFUserNotification::CFUserNotificationRef;
pub use self::__CFUserNotification::CFUserNotificationUpdate;
pub use self::__CFUserNotification::{
    kCFUserNotificationAlternateResponse, kCFUserNotificationCancelResponse,
    kCFUserNotificationDefaultResponse, kCFUserNotificationOtherResponse,
};
pub use self::__CFUserNotification::{
    kCFUserNotificationCautionAlertLevel, kCFUserNotificationNoteAlertLevel,
    kCFUserNotificationPlainAlertLevel, kCFUserNotificationStopAlertLevel,
};
pub use self::__CFUserNotification::{
    kCFUserNotificationNoDefaultButtonFlag, kCFUserNotificationUseRadioButtonsFlag,
};
pub use self::__CFUtilities::CFCopyHomeDirectoryURL;
pub use self::__CFXMLNode::kCFXMLNodeCurrentVersion;
pub use self::__CFXMLNode::CFXMLAttributeDeclarationInfo;
pub use self::__CFXMLNode::CFXMLAttributeListDeclarationInfo;
pub use self::__CFXMLNode::CFXMLDocumentInfo;
pub use self::__CFXMLNode::CFXMLDocumentTypeInfo;
pub use self::__CFXMLNode::CFXMLElementInfo;
pub use self::__CFXMLNode::CFXMLElementTypeDeclarationInfo;
pub use self::__CFXMLNode::CFXMLEntityInfo;
pub use self::__CFXMLNode::CFXMLEntityReferenceInfo;
pub use self::__CFXMLNode::CFXMLExternalID;
pub use self::__CFXMLNode::CFXMLNodeCreate;
pub use self::__CFXMLNode::CFXMLNodeCreateCopy;
pub use self::__CFXMLNode::CFXMLNodeGetInfoPtr;
pub use self::__CFXMLNode::CFXMLNodeGetString;
pub use self::__CFXMLNode::CFXMLNodeGetTypeCode;
pub use self::__CFXMLNode::CFXMLNodeGetTypeID;
pub use self::__CFXMLNode::CFXMLNodeGetVersion;
pub use self::__CFXMLNode::CFXMLNodeRef;
pub use self::__CFXMLNode::CFXMLNotationInfo;
pub use self::__CFXMLNode::CFXMLProcessingInstructionInfo;
pub use self::__CFXMLNode::CFXMLTreeCreateWithNode;
pub use self::__CFXMLNode::CFXMLTreeGetNode;
pub use self::__CFXMLNode::CFXMLTreeRef;
pub use self::__CFXMLNode::{
    kCFXMLEntityTypeCharacter, kCFXMLEntityTypeParameter, kCFXMLEntityTypeParsedExternal,
    kCFXMLEntityTypeParsedInternal, kCFXMLEntityTypeUnparsed, CFXMLEntityTypeCode,
};
pub use self::__CFXMLNode::{
    kCFXMLNodeTypeAttribute, kCFXMLNodeTypeAttributeListDeclaration, kCFXMLNodeTypeCDATASection,
    kCFXMLNodeTypeComment, kCFXMLNodeTypeDocument, kCFXMLNodeTypeDocumentFragment,
    kCFXMLNodeTypeDocumentType, kCFXMLNodeTypeElement, kCFXMLNodeTypeElementTypeDeclaration,
    kCFXMLNodeTypeEntity, kCFXMLNodeTypeEntityReference, kCFXMLNodeTypeNotation,
    kCFXMLNodeTypeProcessingInstruction, kCFXMLNodeTypeText, kCFXMLNodeTypeWhitespace,
    CFXMLNodeTypeCode,
};
pub use self::__CFXMLParser::kCFXMLTreeErrorDescription;
pub use self::__CFXMLParser::kCFXMLTreeErrorLineNumber;
pub use self::__CFXMLParser::kCFXMLTreeErrorLocation;
pub use self::__CFXMLParser::kCFXMLTreeErrorStatusCode;
pub use self::__CFXMLParser::CFXMLCreateStringByEscapingEntities;
pub use self::__CFXMLParser::CFXMLCreateStringByUnescapingEntities;
pub use self::__CFXMLParser::CFXMLParserAbort;
pub use self::__CFXMLParser::CFXMLParserAddChildCallBack;
pub use self::__CFXMLParser::CFXMLParserCallBacks;
pub use self::__CFXMLParser::CFXMLParserContext;
pub use self::__CFXMLParser::CFXMLParserCopyDescriptionCallBack;
pub use self::__CFXMLParser::CFXMLParserCopyErrorDescription;
pub use self::__CFXMLParser::CFXMLParserCreate;
pub use self::__CFXMLParser::CFXMLParserCreateWithDataFromURL;
pub use self::__CFXMLParser::CFXMLParserCreateXMLStructureCallBack;
pub use self::__CFXMLParser::CFXMLParserEndXMLStructureCallBack;
pub use self::__CFXMLParser::CFXMLParserGetCallBacks;
pub use self::__CFXMLParser::CFXMLParserGetContext;
pub use self::__CFXMLParser::CFXMLParserGetDocument;
pub use self::__CFXMLParser::CFXMLParserGetLineNumber;
pub use self::__CFXMLParser::CFXMLParserGetLocation;
pub use self::__CFXMLParser::CFXMLParserGetSourceURL;
pub use self::__CFXMLParser::CFXMLParserGetStatusCode;
pub use self::__CFXMLParser::CFXMLParserGetTypeID;
pub use self::__CFXMLParser::CFXMLParserHandleErrorCallBack;
pub use self::__CFXMLParser::CFXMLParserParse;
pub use self::__CFXMLParser::CFXMLParserRef;
pub use self::__CFXMLParser::CFXMLParserReleaseCallBack;
pub use self::__CFXMLParser::CFXMLParserResolveExternalEntityCallBack;
pub use self::__CFXMLParser::CFXMLParserRetainCallBack;
pub use self::__CFXMLParser::CFXMLTreeCreateFromData;
pub use self::__CFXMLParser::CFXMLTreeCreateFromDataWithError;
pub use self::__CFXMLParser::CFXMLTreeCreateWithDataFromURL;
pub use self::__CFXMLParser::CFXMLTreeCreateXMLData;
pub use self::__CFXMLParser::{
    kCFXMLErrorElementlessDocument, kCFXMLErrorEncodingConversionFailure,
    kCFXMLErrorMalformedCDSect, kCFXMLErrorMalformedCharacterReference,
    kCFXMLErrorMalformedCloseTag, kCFXMLErrorMalformedComment, kCFXMLErrorMalformedDTD,
    kCFXMLErrorMalformedDocument, kCFXMLErrorMalformedName,
    kCFXMLErrorMalformedParsedCharacterData, kCFXMLErrorMalformedProcessingInstruction,
    kCFXMLErrorMalformedStartTag, kCFXMLErrorNoData, kCFXMLErrorUnexpectedEOF,
    kCFXMLErrorUnknownEncoding, kCFXMLStatusParseInProgress, kCFXMLStatusParseNotBegun,
    kCFXMLStatusParseSuccessful, CFXMLParserStatusCode,
};
pub use self::__CFXMLParser::{
    kCFXMLParserAddImpliedAttributes, kCFXMLParserAllOptions, kCFXMLParserNoOptions,
    kCFXMLParserReplacePhysicalEntities, kCFXMLParserResolveExternalEntities,
    kCFXMLParserSkipMetaData, kCFXMLParserSkipWhitespace, kCFXMLParserValidateDocument,
    CFXMLParserOptions,
};
pub use self::__CFURL::kCFURLAddedToDirectoryDateKey;
pub use self::__CFURL::kCFURLApplicationIsScriptableKey;
pub use self::__CFURL::kCFURLAttributeModificationDateKey;
pub use self::__CFURL::kCFURLCanonicalPathKey;
pub use self::__CFURL::kCFURLContentAccessDateKey;
pub use self::__CFURL::kCFURLContentModificationDateKey;
pub use self::__CFURL::kCFURLCreationDateKey;
pub use self::__CFURL::kCFURLCustomIconKey;
pub use self::__CFURL::kCFURLDocumentIdentifierKey;
pub use self::__CFURL::kCFURLEffectiveIconKey;
pub use self::__CFURL::kCFURLFileAllocatedSizeKey;
pub use self::__CFURL::kCFURLFileContentIdentifierKey;
pub use self::__CFURL::kCFURLFileProtectionComplete;
pub use self::__CFURL::kCFURLFileProtectionCompleteUnlessOpen;
pub use self::__CFURL::kCFURLFileProtectionCompleteUntilFirstUserAuthentication;
pub use self::__CFURL::kCFURLFileProtectionKey;
pub use self::__CFURL::kCFURLFileProtectionNone;
pub use self::__CFURL::kCFURLFileResourceIdentifierKey;
pub use self::__CFURL::kCFURLFileResourceTypeBlockSpecial;
pub use self::__CFURL::kCFURLFileResourceTypeCharacterSpecial;
pub use self::__CFURL::kCFURLFileResourceTypeDirectory;
pub use self::__CFURL::kCFURLFileResourceTypeKey;
pub use self::__CFURL::kCFURLFileResourceTypeNamedPipe;
pub use self::__CFURL::kCFURLFileResourceTypeRegular;
pub use self::__CFURL::kCFURLFileResourceTypeSocket;
pub use self::__CFURL::kCFURLFileResourceTypeSymbolicLink;
pub use self::__CFURL::kCFURLFileResourceTypeUnknown;
pub use self::__CFURL::kCFURLFileSecurityKey;
pub use self::__CFURL::kCFURLFileSizeKey;
pub use self::__CFURL::kCFURLGenerationIdentifierKey;
pub use self::__CFURL::kCFURLHasHiddenExtensionKey;
pub use self::__CFURL::kCFURLIsAliasFileKey;
pub use self::__CFURL::kCFURLIsApplicationKey;
pub use self::__CFURL::kCFURLIsDirectoryKey;
pub use self::__CFURL::kCFURLIsExcludedFromBackupKey;
pub use self::__CFURL::kCFURLIsExecutableKey;
pub use self::__CFURL::kCFURLIsHiddenKey;
pub use self::__CFURL::kCFURLIsMountTriggerKey;
pub use self::__CFURL::kCFURLIsPackageKey;
pub use self::__CFURL::kCFURLIsPurgeableKey;
pub use self::__CFURL::kCFURLIsReadableKey;
pub use self::__CFURL::kCFURLIsRegularFileKey;
pub use self::__CFURL::kCFURLIsSparseKey;
pub use self::__CFURL::kCFURLIsSymbolicLinkKey;
pub use self::__CFURL::kCFURLIsSystemImmutableKey;
pub use self::__CFURL::kCFURLIsUbiquitousItemKey;
pub use self::__CFURL::kCFURLIsUserImmutableKey;
pub use self::__CFURL::kCFURLIsVolumeKey;
pub use self::__CFURL::kCFURLIsWritableKey;
pub use self::__CFURL::kCFURLKeysOfUnsetValuesKey;
pub use self::__CFURL::kCFURLLabelColorKey;
pub use self::__CFURL::kCFURLLabelNumberKey;
pub use self::__CFURL::kCFURLLinkCountKey;
pub use self::__CFURL::kCFURLLocalizedLabelKey;
pub use self::__CFURL::kCFURLLocalizedNameKey;
pub use self::__CFURL::kCFURLLocalizedTypeDescriptionKey;
pub use self::__CFURL::kCFURLMayHaveExtendedAttributesKey;
pub use self::__CFURL::kCFURLMayShareFileContentKey;
pub use self::__CFURL::kCFURLNameKey;
pub use self::__CFURL::kCFURLParentDirectoryURLKey;
pub use self::__CFURL::kCFURLPathKey;
pub use self::__CFURL::kCFURLPreferredIOBlockSizeKey;
pub use self::__CFURL::kCFURLQuarantinePropertiesKey;
pub use self::__CFURL::kCFURLTagNamesKey;
pub use self::__CFURL::kCFURLTotalFileAllocatedSizeKey;
pub use self::__CFURL::kCFURLTotalFileSizeKey;
pub use self::__CFURL::kCFURLTypeIdentifierKey;
pub use self::__CFURL::kCFURLUbiquitousItemDownloadingErrorKey;
pub use self::__CFURL::kCFURLUbiquitousItemDownloadingStatusCurrent;
pub use self::__CFURL::kCFURLUbiquitousItemDownloadingStatusDownloaded;
pub use self::__CFURL::kCFURLUbiquitousItemDownloadingStatusKey;
pub use self::__CFURL::kCFURLUbiquitousItemDownloadingStatusNotDownloaded;
pub use self::__CFURL::kCFURLUbiquitousItemHasUnresolvedConflictsKey;
pub use self::__CFURL::kCFURLUbiquitousItemIsDownloadedKey;
pub use self::__CFURL::kCFURLUbiquitousItemIsDownloadingKey;
pub use self::__CFURL::kCFURLUbiquitousItemIsExcludedFromSyncKey;
pub use self::__CFURL::kCFURLUbiquitousItemIsUploadedKey;
pub use self::__CFURL::kCFURLUbiquitousItemIsUploadingKey;
pub use self::__CFURL::kCFURLUbiquitousItemPercentDownloadedKey;
pub use self::__CFURL::kCFURLUbiquitousItemPercentUploadedKey;
pub use self::__CFURL::kCFURLUbiquitousItemUploadingErrorKey;
pub use self::__CFURL::kCFURLVolumeAvailableCapacityForImportantUsageKey;
pub use self::__CFURL::kCFURLVolumeAvailableCapacityForOpportunisticUsageKey;
pub use self::__CFURL::kCFURLVolumeAvailableCapacityKey;
pub use self::__CFURL::kCFURLVolumeCreationDateKey;
pub use self::__CFURL::kCFURLVolumeIdentifierKey;
pub use self::__CFURL::kCFURLVolumeIsAutomountedKey;
pub use self::__CFURL::kCFURLVolumeIsBrowsableKey;
pub use self::__CFURL::kCFURLVolumeIsEjectableKey;
pub use self::__CFURL::kCFURLVolumeIsEncryptedKey;
pub use self::__CFURL::kCFURLVolumeIsInternalKey;
pub use self::__CFURL::kCFURLVolumeIsJournalingKey;
pub use self::__CFURL::kCFURLVolumeIsLocalKey;
pub use self::__CFURL::kCFURLVolumeIsReadOnlyKey;
pub use self::__CFURL::kCFURLVolumeIsRemovableKey;
pub use self::__CFURL::kCFURLVolumeIsRootFileSystemKey;
pub use self::__CFURL::kCFURLVolumeLocalizedFormatDescriptionKey;
pub use self::__CFURL::kCFURLVolumeLocalizedNameKey;
pub use self::__CFURL::kCFURLVolumeMaximumFileSizeKey;
pub use self::__CFURL::kCFURLVolumeNameKey;
pub use self::__CFURL::kCFURLVolumeResourceCountKey;
pub use self::__CFURL::kCFURLVolumeSupportsAccessPermissionsKey;
pub use self::__CFURL::kCFURLVolumeSupportsAdvisoryFileLockingKey;
pub use self::__CFURL::kCFURLVolumeSupportsCasePreservedNamesKey;
pub use self::__CFURL::kCFURLVolumeSupportsCaseSensitiveNamesKey;
pub use self::__CFURL::kCFURLVolumeSupportsCompressionKey;
pub use self::__CFURL::kCFURLVolumeSupportsExclusiveRenamingKey;
pub use self::__CFURL::kCFURLVolumeSupportsExtendedSecurityKey;
pub use self::__CFURL::kCFURLVolumeSupportsFileCloningKey;
pub use self::__CFURL::kCFURLVolumeSupportsFileProtectionKey;
pub use self::__CFURL::kCFURLVolumeSupportsHardLinksKey;
pub use self::__CFURL::kCFURLVolumeSupportsImmutableFilesKey;
pub use self::__CFURL::kCFURLVolumeSupportsJournalingKey;
pub use self::__CFURL::kCFURLVolumeSupportsPersistentIDsKey;
pub use self::__CFURL::kCFURLVolumeSupportsRenamingKey;
pub use self::__CFURL::kCFURLVolumeSupportsRootDirectoryDatesKey;
pub use self::__CFURL::kCFURLVolumeSupportsSparseFilesKey;
pub use self::__CFURL::kCFURLVolumeSupportsSwapRenamingKey;
pub use self::__CFURL::kCFURLVolumeSupportsSymbolicLinksKey;
pub use self::__CFURL::kCFURLVolumeSupportsVolumeSizesKey;
pub use self::__CFURL::kCFURLVolumeSupportsZeroRunsKey;
pub use self::__CFURL::kCFURLVolumeTotalCapacityKey;
pub use self::__CFURL::kCFURLVolumeURLForRemountingKey;
pub use self::__CFURL::kCFURLVolumeURLKey;
pub use self::__CFURL::kCFURLVolumeUUIDStringKey;
pub use self::__CFURL::CFURLBookmarkFileCreationOptions;
pub use self::__CFURL::CFURLCanBeDecomposed;
pub use self::__CFURL::CFURLClearResourcePropertyCache;
pub use self::__CFURL::CFURLClearResourcePropertyCacheForKey;
pub use self::__CFURL::CFURLCopyAbsoluteURL;
pub use self::__CFURL::CFURLCopyFileSystemPath;
pub use self::__CFURL::CFURLCopyFragment;
pub use self::__CFURL::CFURLCopyHostName;
pub use self::__CFURL::CFURLCopyLastPathComponent;
pub use self::__CFURL::CFURLCopyNetLocation;
pub use self::__CFURL::CFURLCopyParameterString;
pub use self::__CFURL::CFURLCopyPassword;
pub use self::__CFURL::CFURLCopyPath;
pub use self::__CFURL::CFURLCopyPathExtension;
pub use self::__CFURL::CFURLCopyQueryString;
pub use self::__CFURL::CFURLCopyResourcePropertiesForKeys;
pub use self::__CFURL::CFURLCopyResourcePropertyForKey;
pub use self::__CFURL::CFURLCopyResourceSpecifier;
pub use self::__CFURL::CFURLCopyScheme;
pub use self::__CFURL::CFURLCopyStrictPath;
pub use self::__CFURL::CFURLCopyUserName;
pub use self::__CFURL::CFURLCreateAbsoluteURLWithBytes;
pub use self::__CFURL::CFURLCreateBookmarkData;
pub use self::__CFURL::CFURLCreateBookmarkDataFromAliasRecord;
pub use self::__CFURL::CFURLCreateBookmarkDataFromFile;
pub use self::__CFURL::CFURLCreateByResolvingBookmarkData;
pub use self::__CFURL::CFURLCreateCopyAppendingPathComponent;
pub use self::__CFURL::CFURLCreateCopyAppendingPathExtension;
pub use self::__CFURL::CFURLCreateCopyDeletingLastPathComponent;
pub use self::__CFURL::CFURLCreateCopyDeletingPathExtension;
pub use self::__CFURL::CFURLCreateData;
pub use self::__CFURL::CFURLCreateFilePathURL;
pub use self::__CFURL::CFURLCreateFileReferenceURL;
pub use self::__CFURL::CFURLCreateFromFileSystemRepresentation;
pub use self::__CFURL::CFURLCreateFromFileSystemRepresentationRelativeToBase;
pub use self::__CFURL::CFURLCreateResourcePropertiesForKeysFromBookmarkData;
pub use self::__CFURL::CFURLCreateResourcePropertyForKeyFromBookmarkData;
pub use self::__CFURL::CFURLCreateStringByAddingPercentEscapes;
pub use self::__CFURL::CFURLCreateStringByReplacingPercentEscapes;
pub use self::__CFURL::CFURLCreateStringByReplacingPercentEscapesUsingEncoding;
pub use self::__CFURL::CFURLCreateWithBytes;
pub use self::__CFURL::CFURLCreateWithFileSystemPath;
pub use self::__CFURL::CFURLCreateWithFileSystemPathRelativeToBase;
pub use self::__CFURL::CFURLCreateWithString;
pub use self::__CFURL::CFURLGetBaseURL;
pub use self::__CFURL::CFURLGetByteRangeForComponent;
pub use self::__CFURL::CFURLGetBytes;
pub use self::__CFURL::CFURLGetFileSystemRepresentation;
pub use self::__CFURL::CFURLGetPortNumber;
pub use self::__CFURL::CFURLGetString;
pub use self::__CFURL::CFURLGetTypeID;
pub use self::__CFURL::CFURLHasDirectoryPath;
pub use self::__CFURL::CFURLIsFileReferenceURL;
pub use self::__CFURL::CFURLRef;
pub use self::__CFURL::CFURLResourceIsReachable;
pub use self::__CFURL::CFURLSetResourcePropertiesForKeys;
pub use self::__CFURL::CFURLSetResourcePropertyForKey;
pub use self::__CFURL::CFURLSetTemporaryResourcePropertyForKey;
pub use self::__CFURL::CFURLStartAccessingSecurityScopedResource;
pub use self::__CFURL::CFURLStopAccessingSecurityScopedResource;
pub use self::__CFURL::CFURLWriteBookmarkDataToFile;
pub use self::__CFURL::{
    kCFBookmarkResolutionWithoutMountingMask, kCFBookmarkResolutionWithoutUIMask,
    kCFURLBookmarkResolutionWithSecurityScope,
    kCFURLBookmarkResolutionWithoutImplicitStartAccessing,
    kCFURLBookmarkResolutionWithoutMountingMask, kCFURLBookmarkResolutionWithoutUIMask,
    CFURLBookmarkResolutionOptions,
};
pub use self::__CFURL::{
    kCFURLBookmarkCreationMinimalBookmarkMask, kCFURLBookmarkCreationPreferFileIDResolutionMask,
    kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess,
    kCFURLBookmarkCreationSuitableForBookmarkFile, kCFURLBookmarkCreationWithSecurityScope,
    kCFURLBookmarkCreationWithoutImplicitSecurityScope, CFURLBookmarkCreationOptions,
};
pub use self::__CFURL::{
    kCFURLComponentFragment, kCFURLComponentHost, kCFURLComponentNetLocation,
    kCFURLComponentParameterString, kCFURLComponentPassword, kCFURLComponentPath,
    kCFURLComponentPort, kCFURLComponentQuery, kCFURLComponentResourceSpecifier,
    kCFURLComponentScheme, kCFURLComponentUser, kCFURLComponentUserInfo, CFURLComponentType,
};
pub use self::__CFURL::{
    kCFURLHFSPathStyle, kCFURLPOSIXPathStyle, kCFURLWindowsPathStyle, CFURLPathStyle,
};
pub use self::__CFUUID::CFUUIDBytes;
pub use self::__CFUUID::CFUUIDCreate;
pub use self::__CFUUID::CFUUIDCreateFromString;
pub use self::__CFUUID::CFUUIDCreateFromUUIDBytes;
pub use self::__CFUUID::CFUUIDCreateString;
pub use self::__CFUUID::CFUUIDCreateWithBytes;
pub use self::__CFUUID::CFUUIDGetConstantUUIDWithBytes;
pub use self::__CFUUID::CFUUIDGetTypeID;
pub use self::__CFUUID::CFUUIDGetUUIDBytes;
pub use self::__CFUUID::CFUUIDRef;
