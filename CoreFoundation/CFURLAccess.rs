//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

extern_fn!(
    #[deprecated = "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."]
    pub unsafe fn CFURLCreateDataAndPropertiesFromResource(
        alloc: CFAllocatorRef,
        url: CFURLRef,
        resource_data: *mut CFDataRef,
        properties: *mut CFDictionaryRef,
        desired_properties: CFArrayRef,
        error_code: *mut i32,
    ) -> Boolean;
);

extern_fn!(
    #[deprecated = "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."]
    pub unsafe fn CFURLWriteDataAndPropertiesToResource(
        url: CFURLRef,
        data_to_write: CFDataRef,
        properties_to_write: CFDictionaryRef,
        error_code: *mut i32,
    ) -> Boolean;
);

extern_fn!(
    #[deprecated = "Use CFURLGetFileSystemRepresentation and removefile(3) instead."]
    pub unsafe fn CFURLDestroyResource(url: CFURLRef, error_code: *mut i32) -> Boolean;
);

extern_fn!(
    #[deprecated = "For file resource properties, use CFURLCopyResourcePropertyForKey."]
    pub unsafe fn CFURLCreatePropertyFromResource(
        alloc: CFAllocatorRef,
        url: CFURLRef,
        property: CFStringRef,
        error_code: *mut i32,
    ) -> CFTypeRef;
);

ns_enum!(
    #[underlying(CFIndex)]
    #[deprecated = "Use CFError codes instead"]
    pub enum CFURLError {
        #[deprecated = "Use CFError codes instead"]
        kCFURLUnknownError = -10,
        #[deprecated = "Use CFError codes instead"]
        kCFURLUnknownSchemeError = -11,
        #[deprecated = "Use CFError codes instead"]
        kCFURLResourceNotFoundError = -12,
        #[deprecated = "Use CFError codes instead"]
        kCFURLResourceAccessViolationError = -13,
        #[deprecated = "Use CFError codes instead"]
        kCFURLRemoteHostUnavailableError = -14,
        #[deprecated = "Use CFError codes instead"]
        kCFURLImproperArgumentsError = -15,
        #[deprecated = "Use CFError codes instead"]
        kCFURLUnknownPropertyKeyError = -16,
        #[deprecated = "Use CFError codes instead"]
        kCFURLPropertyKeyUnavailableError = -17,
        #[deprecated = "Use CFError codes instead"]
        kCFURLTimeoutError = -18,
    }
);

extern_static!(kCFURLFileExists: CFStringRef);

extern_static!(kCFURLFileDirectoryContents: CFStringRef);

extern_static!(kCFURLFileLength: CFStringRef);

extern_static!(kCFURLFileLastModificationTime: CFStringRef);

extern_static!(kCFURLFilePOSIXMode: CFStringRef);

extern_static!(kCFURLFileOwnerID: CFStringRef);

extern_static!(kCFURLHTTPStatusCode: CFStringRef);

extern_static!(kCFURLHTTPStatusLine: CFStringRef);
