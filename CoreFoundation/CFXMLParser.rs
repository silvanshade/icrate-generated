//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreFoundation::*;

pub type CFXMLParserRef = *mut c_void;

ns_options!(
    #[underlying(CFOptionFlags)]
    pub enum CFXMLParserOptions {
        kCFXMLParserValidateDocument = 1 << 0,
        kCFXMLParserSkipMetaData = 1 << 1,
        kCFXMLParserReplacePhysicalEntities = 1 << 2,
        kCFXMLParserSkipWhitespace = 1 << 3,
        kCFXMLParserResolveExternalEntities = 1 << 4,
        kCFXMLParserAddImpliedAttributes = 1 << 5,
        kCFXMLParserAllOptions = 0x00FFFFFF,
        kCFXMLParserNoOptions = 0,
    }
);

ns_options!(
    #[underlying(CFIndex)]
    pub enum CFXMLParserStatusCode {
        kCFXMLStatusParseNotBegun = -2,
        kCFXMLStatusParseInProgress = -1,
        kCFXMLStatusParseSuccessful = 0,
        kCFXMLErrorUnexpectedEOF = 1,
        kCFXMLErrorUnknownEncoding = 2,
        kCFXMLErrorEncodingConversionFailure = 3,
        kCFXMLErrorMalformedProcessingInstruction = 4,
        kCFXMLErrorMalformedDTD = 5,
        kCFXMLErrorMalformedName = 6,
        kCFXMLErrorMalformedCDSect = 7,
        kCFXMLErrorMalformedCloseTag = 8,
        kCFXMLErrorMalformedStartTag = 9,
        kCFXMLErrorMalformedDocument = 10,
        kCFXMLErrorElementlessDocument = 11,
        kCFXMLErrorMalformedComment = 12,
        kCFXMLErrorMalformedCharacterReference = 13,
        kCFXMLErrorMalformedParsedCharacterData = 14,
        kCFXMLErrorNoData = 15,
    }
);

pub type CFXMLParserCreateXMLStructureCallBack =
    Option<unsafe extern "C" fn(CFXMLParserRef, CFXMLNodeRef, *mut c_void) -> *mut c_void>;

pub type CFXMLParserAddChildCallBack =
    Option<unsafe extern "C" fn(CFXMLParserRef, *mut c_void, *mut c_void, *mut c_void)>;

pub type CFXMLParserEndXMLStructureCallBack =
    Option<unsafe extern "C" fn(CFXMLParserRef, *mut c_void, *mut c_void)>;

pub type CFXMLParserResolveExternalEntityCallBack =
    Option<unsafe extern "C" fn(CFXMLParserRef, *mut CFXMLExternalID, *mut c_void) -> CFDataRef>;

pub type CFXMLParserHandleErrorCallBack =
    Option<unsafe extern "C" fn(CFXMLParserRef, CFXMLParserStatusCode, *mut c_void) -> Boolean>;

extern_struct!(
    #[encoding_name("?")]
    pub struct CFXMLParserCallBacks {
        pub version: CFIndex,
        pub createXMLStructure: CFXMLParserCreateXMLStructureCallBack,
        pub addChild: CFXMLParserAddChildCallBack,
        pub endXMLStructure: CFXMLParserEndXMLStructureCallBack,
        pub resolveExternalEntity: CFXMLParserResolveExternalEntityCallBack,
        pub handleError: CFXMLParserHandleErrorCallBack,
    }
);

pub type CFXMLParserRetainCallBack = Option<unsafe extern "C" fn(*mut c_void) -> *mut c_void>;

pub type CFXMLParserReleaseCallBack = Option<unsafe extern "C" fn(*mut c_void)>;

pub type CFXMLParserCopyDescriptionCallBack =
    Option<unsafe extern "C" fn(*mut c_void) -> CFStringRef>;

extern_struct!(
    #[encoding_name("?")]
    pub struct CFXMLParserContext {
        pub version: CFIndex,
        pub info: *mut c_void,
        pub retain: CFXMLParserRetainCallBack,
        pub release: CFXMLParserReleaseCallBack,
        pub copyDescription: CFXMLParserCopyDescriptionCallBack,
    }
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetTypeID() -> CFTypeID;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserCreate(
        allocator: CFAllocatorRef,
        xml_data: CFDataRef,
        data_source: CFURLRef,
        parse_options: CFOptionFlags,
        version_of_nodes: CFIndex,
        call_backs: *mut CFXMLParserCallBacks,
        context: *mut CFXMLParserContext,
    ) -> CFXMLParserRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserCreateWithDataFromURL(
        allocator: CFAllocatorRef,
        data_source: CFURLRef,
        parse_options: CFOptionFlags,
        version_of_nodes: CFIndex,
        call_backs: *mut CFXMLParserCallBacks,
        context: *mut CFXMLParserContext,
    ) -> CFXMLParserRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetContext(parser: CFXMLParserRef, context: *mut CFXMLParserContext);
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetCallBacks(
        parser: CFXMLParserRef,
        call_backs: *mut CFXMLParserCallBacks,
    );
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetSourceURL(parser: CFXMLParserRef) -> CFURLRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetLocation(parser: CFXMLParserRef) -> CFIndex;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetLineNumber(parser: CFXMLParserRef) -> CFIndex;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetDocument(parser: CFXMLParserRef) -> *mut c_void;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserGetStatusCode(parser: CFXMLParserRef) -> CFXMLParserStatusCode;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserCopyErrorDescription(parser: CFXMLParserRef) -> CFStringRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserAbort(
        parser: CFXMLParserRef,
        error_code: CFXMLParserStatusCode,
        error_description: CFStringRef,
    );
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLParserParse(parser: CFXMLParserRef) -> Boolean;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLTreeCreateFromData(
        allocator: CFAllocatorRef,
        xml_data: CFDataRef,
        data_source: CFURLRef,
        parse_options: CFOptionFlags,
        version_of_nodes: CFIndex,
    ) -> CFXMLTreeRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLTreeCreateFromDataWithError(
        allocator: CFAllocatorRef,
        xml_data: CFDataRef,
        data_source: CFURLRef,
        parse_options: CFOptionFlags,
        version_of_nodes: CFIndex,
        error_dict: *mut CFDictionaryRef,
    ) -> CFXMLTreeRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLTreeCreateWithDataFromURL(
        allocator: CFAllocatorRef,
        data_source: CFURLRef,
        parse_options: CFOptionFlags,
        version_of_nodes: CFIndex,
    ) -> CFXMLTreeRef;
);

extern_fn!(
    #[deprecated = "CFXMLParser is deprecated, use NSXMLParser, NSXMLDocument or libxml2 library instead"]
    pub unsafe fn CFXMLTreeCreateXMLData(
        allocator: CFAllocatorRef,
        xml_tree: CFXMLTreeRef,
    ) -> CFDataRef;
);

extern_fn!(
    pub unsafe fn CFXMLCreateStringByEscapingEntities(
        allocator: CFAllocatorRef,
        string: CFStringRef,
        entities_dictionary: CFDictionaryRef,
    ) -> CFStringRef;
);

extern_fn!(
    pub unsafe fn CFXMLCreateStringByUnescapingEntities(
        allocator: CFAllocatorRef,
        string: CFStringRef,
        entities_dictionary: CFDictionaryRef,
    ) -> CFStringRef;
);

extern_static!(kCFXMLTreeErrorDescription: CFStringRef);

extern_static!(kCFXMLTreeErrorLineNumber: CFStringRef);

extern_static!(kCFXMLTreeErrorLocation: CFStringRef);

extern_static!(kCFXMLTreeErrorStatusCode: CFStringRef);
