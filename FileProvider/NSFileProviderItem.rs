//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::FileProvider::*;
use crate::Foundation::*;
use crate::UniformTypeIdentifiers::*;

typed_extensible_enum!(
    pub type NSFileProviderItemIdentifier = NSString;
);

extern_static!(NSFileProviderRootContainerItemIdentifier: &'static NSFileProviderItemIdentifier);

extern_static!(
    NSFileProviderWorkingSetContainerItemIdentifier: &'static NSFileProviderItemIdentifier
);

extern_static!(NSFileProviderTrashContainerItemIdentifier: &'static NSFileProviderItemIdentifier);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "FileProvider_NSFileProviderItemVersion")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type NSFileProviderItemVersion;
}

#[cfg(feature = "FileProvider_NSFileProviderItemVersion")]
unsafe impl NSObjectProtocol for NSFileProviderItemVersion {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "FileProvider_NSFileProviderItemVersion")]
    pub type NSFileProviderItemVersion;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "beforeFirstSyncComponent", managed = "Other")]
    pub unsafe fn beforeFirstSyncComponent() -> Id<NSData>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "initWithContentVersion:metadataVersion:", managed = "Init")]
    pub unsafe fn initWithContentVersion_metadataVersion(
        this: Option<Allocated<Self>>,
        content_version: &NSData,
        metadata_version: &NSData,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "contentVersion", managed = "Other")]
    pub unsafe fn contentVersion(&self) -> Id<NSData>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "metadataVersion", managed = "Other")]
    pub unsafe fn metadataVersion(&self) -> Id<NSData>;
}

extern_static!(NSFileProviderFavoriteRankUnranked: c_ulonglong);

#[ns_options]
#[underlying(NSUInteger)]
pub enum NSFileProviderItemCapabilities {
    NSFileProviderItemCapabilitiesAllowsReading = 1 << 0,
    NSFileProviderItemCapabilitiesAllowsWriting = 1 << 1,
    NSFileProviderItemCapabilitiesAllowsReparenting = 1 << 2,
    NSFileProviderItemCapabilitiesAllowsRenaming = 1 << 3,
    NSFileProviderItemCapabilitiesAllowsTrashing = 1 << 4,
    NSFileProviderItemCapabilitiesAllowsDeleting = 1 << 5,
    #[deprecated = "use NSFileProviderContentPolicy instead"]
    NSFileProviderItemCapabilitiesAllowsEvicting = 1 << 6,
    NSFileProviderItemCapabilitiesAllowsExcludingFromSync = 1 << 7,
    NSFileProviderItemCapabilitiesAllowsAddingSubItems =
        NSFileProviderItemCapabilitiesAllowsWriting,
    NSFileProviderItemCapabilitiesAllowsContentEnumerating =
        NSFileProviderItemCapabilitiesAllowsReading,
    #[deprecated = "This capability is no longer supported, and does not contain all capabilities. Please migrate to directly specifying each of the individual capabilities that should be allowed for the item."]
    NSFileProviderItemCapabilitiesAllowsAll = NSFileProviderItemCapabilitiesAllowsReading
        | NSFileProviderItemCapabilitiesAllowsWriting
        | NSFileProviderItemCapabilitiesAllowsReparenting
        | NSFileProviderItemCapabilitiesAllowsRenaming
        | NSFileProviderItemCapabilitiesAllowsTrashing
        | NSFileProviderItemCapabilitiesAllowsDeleting,
}

#[ns_options]
#[underlying(NSUInteger)]
pub enum NSFileProviderItemFields {
    NSFileProviderItemContents = 1 << 0,
    NSFileProviderItemFilename = 1 << 1,
    NSFileProviderItemParentItemIdentifier = 1 << 2,
    NSFileProviderItemLastUsedDate = 1 << 3,
    NSFileProviderItemTagData = 1 << 4,
    NSFileProviderItemFavoriteRank = 1 << 5,
    NSFileProviderItemCreationDate = 1 << 6,
    NSFileProviderItemContentModificationDate = 1 << 7,
    NSFileProviderItemFileSystemFlags = 1 << 8,
    NSFileProviderItemExtendedAttributes = 1 << 9,
    NSFileProviderItemTypeAndCreator = 1 << 10,
}

#[ns_options]
#[underlying(NSUInteger)]
pub enum NSFileProviderFileSystemFlags {
    NSFileProviderFileSystemUserExecutable = 1 << 0,
    NSFileProviderFileSystemUserReadable = 1 << 1,
    NSFileProviderFileSystemUserWritable = 1 << 2,
    NSFileProviderFileSystemHidden = 1 << 3,
    NSFileProviderFileSystemPathExtensionHidden = 1 << 4,
}

extern_struct!(
    pub struct NSFileProviderTypeAndCreator {
        pub r#type: OSType,
        pub creator: OSType,
    }
);

#[ns_enum]
#[underlying(NSInteger)]
pub enum NSFileProviderContentPolicy {
    NSFileProviderContentPolicyInherited = 0,
    NSFileProviderContentPolicyDownloadLazily = 1,
    NSFileProviderContentPolicyDownloadLazilyAndEvictOnRemoteUpdate = 2,
    NSFileProviderContentPolicyDownloadEagerlyAndKeepDownloaded = 3,
}

#[objc2::protocol]
pub unsafe trait NSFileProviderItemProtocol: NSObjectProtocol {
    #[objc2::method(sel = "itemIdentifier", managed = "Other")]
    unsafe fn itemIdentifier(&self) -> Id<NSFileProviderItemIdentifier>;

    #[objc2::method(sel = "parentItemIdentifier", managed = "Other")]
    unsafe fn parentItemIdentifier(&self) -> Id<NSFileProviderItemIdentifier>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "filename", managed = "Other")]
    unsafe fn filename(&self) -> Id<NSString>;

    #[cfg(feature = "UniformTypeIdentifiers_UTType")]
    #[objc2::method(optional, sel = "contentType", managed = "Other")]
    unsafe fn contentType(&self) -> Id<UTType>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated]
    #[objc2::method(optional, sel = "typeIdentifier", managed = "Other")]
    unsafe fn typeIdentifier(&self) -> Id<NSString>;

    #[objc2::method(optional, sel = "typeAndCreator")]
    unsafe fn typeAndCreator(&self) -> NSFileProviderTypeAndCreator;

    #[objc2::method(optional, sel = "capabilities")]
    unsafe fn capabilities(&self) -> NSFileProviderItemCapabilities;

    #[objc2::method(optional, sel = "fileSystemFlags")]
    unsafe fn fileSystemFlags(&self) -> NSFileProviderFileSystemFlags;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(optional, sel = "documentSize", managed = "Other")]
    unsafe fn documentSize(&self) -> Option<Id<NSNumber>>;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(optional, sel = "childItemCount", managed = "Other")]
    unsafe fn childItemCount(&self) -> Option<Id<NSNumber>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(optional, sel = "creationDate", managed = "Other")]
    unsafe fn creationDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(optional, sel = "contentModificationDate", managed = "Other")]
    unsafe fn contentModificationDate(&self) -> Option<Id<NSDate>>;

    #[cfg(all(
        feature = "Foundation_NSData",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(optional, sel = "extendedAttributes", managed = "Other")]
    unsafe fn extendedAttributes(&self) -> Id<NSDictionary<NSString, NSData>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(optional, sel = "lastUsedDate", managed = "Other")]
    unsafe fn lastUsedDate(&self) -> Option<Id<NSDate>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(optional, sel = "tagData", managed = "Other")]
    unsafe fn tagData(&self) -> Option<Id<NSData>>;

    #[cfg(feature = "Foundation_NSNumber")]
    #[objc2::method(optional, sel = "favoriteRank", managed = "Other")]
    unsafe fn favoriteRank(&self) -> Option<Id<NSNumber>>;

    #[objc2::method(optional, sel = "isTrashed")]
    unsafe fn isTrashed(&self) -> bool;

    #[objc2::method(optional, sel = "isUploaded")]
    unsafe fn isUploaded(&self) -> bool;

    #[objc2::method(optional, sel = "isUploading")]
    unsafe fn isUploading(&self) -> bool;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(optional, sel = "uploadingError", managed = "Other")]
    unsafe fn uploadingError(&self) -> Option<Id<NSError>>;

    #[objc2::method(optional, sel = "isDownloaded")]
    unsafe fn isDownloaded(&self) -> bool;

    #[objc2::method(optional, sel = "isDownloading")]
    unsafe fn isDownloading(&self) -> bool;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(optional, sel = "downloadingError", managed = "Other")]
    unsafe fn downloadingError(&self) -> Option<Id<NSError>>;

    #[objc2::method(optional, sel = "isMostRecentVersionDownloaded")]
    unsafe fn isMostRecentVersionDownloaded(&self) -> bool;

    #[objc2::method(optional, sel = "isShared")]
    unsafe fn isShared(&self) -> bool;

    #[objc2::method(optional, sel = "isSharedByCurrentUser")]
    unsafe fn isSharedByCurrentUser(&self) -> bool;

    #[cfg(feature = "Foundation_NSPersonNameComponents")]
    #[objc2::method(optional, sel = "ownerNameComponents", managed = "Other")]
    unsafe fn ownerNameComponents(&self) -> Option<Id<NSPersonNameComponents>>;

    #[cfg(feature = "Foundation_NSPersonNameComponents")]
    #[objc2::method(optional, sel = "mostRecentEditorNameComponents", managed = "Other")]
    unsafe fn mostRecentEditorNameComponents(&self) -> Option<Id<NSPersonNameComponents>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(optional, sel = "versionIdentifier", managed = "Other")]
    unsafe fn versionIdentifier(&self) -> Option<Id<NSData>>;

    #[cfg(feature = "FileProvider_NSFileProviderItemVersion")]
    #[objc2::method(optional, sel = "itemVersion", managed = "Other")]
    unsafe fn itemVersion(&self) -> Id<NSFileProviderItemVersion>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(optional, sel = "symlinkTargetPath", managed = "Other")]
    unsafe fn symlinkTargetPath(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(optional, sel = "userInfo", managed = "Other")]
    unsafe fn userInfo(&self) -> Option<Id<NSDictionary>>;

    #[objc2::method(optional, sel = "contentPolicy")]
    unsafe fn contentPolicy(&self) -> NSFileProviderContentPolicy;
}

pub type NSFileProviderItem = ProtocolObject<dyn NSFileProviderItemProtocol>;
