//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSExtensionContext,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationExtensionContext")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ASAccountAuthenticationModificationExtensionContext;
}

#[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationExtensionContext")]
unsafe impl NSObjectProtocol for ASAccountAuthenticationModificationExtensionContext {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationExtensionContext")]
    pub type ASAccountAuthenticationModificationExtensionContext;

    #[cfg(all(
        feature = "AuthenticationServices_ASAuthorizationAppleIDCredential",
        feature = "Foundation_NSError",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(
        sel = "getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:"
    )]
    pub unsafe fn getSignInWithAppleUpgradeAuthorizationWithState_nonce_completionHandler(
        &self,
        state: Option<&NSString>,
        nonce: Option<&NSString>,
        completion_handler: &Block<(*mut ASAuthorizationAppleIDCredential, *mut NSError), ()>,
    );

    #[cfg(feature = "Foundation_NSDictionary")]
    #[objc2::method(sel = "completeUpgradeToSignInWithAppleWithUserInfo:")]
    pub unsafe fn completeUpgradeToSignInWithAppleWithUserInfo(
        &self,
        user_info: Option<&NSDictionary>,
    );

    #[cfg(all(
        feature = "AuthenticationServices_ASPasswordCredential",
        feature = "Foundation_NSDictionary"
    ))]
    #[objc2::method(sel = "completeChangePasswordRequestWithUpdatedCredential:userInfo:")]
    pub unsafe fn completeChangePasswordRequestWithUpdatedCredential_userInfo(
        &self,
        updated_credential: &ASPasswordCredential,
        user_info: Option<&NSDictionary>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "cancelRequestWithError:")]
    pub unsafe fn cancelRequestWithError(&self, error: &NSError);
}
