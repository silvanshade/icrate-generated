//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ASPasswordCredential;
}

#[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
unsafe impl ASAuthorizationCredential for ASPasswordCredential {}

#[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
unsafe impl NSCoding for ASPasswordCredential {}

#[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
unsafe impl NSObjectProtocol for ASPasswordCredential {}

#[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
unsafe impl NSSecureCoding for ASPasswordCredential {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
    pub type ASPasswordCredential;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithUser:password:", managed = "Init")]
    pub unsafe fn initWithUser_password(
        this: Option<Allocated<Self>>,
        user: &NSString,
        password: &NSString,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "credentialWithUser:password:", managed = "Other")]
    pub unsafe fn credentialWithUser_password(user: &NSString, password: &NSString) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "user", managed = "Other")]
    pub unsafe fn user(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "password", managed = "Other")]
    pub unsafe fn password(&self) -> Id<NSString>;
}
