//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum ASAuthorizationAppleIDButtonType {
    ASAuthorizationAppleIDButtonTypeSignIn = 0,
    ASAuthorizationAppleIDButtonTypeContinue = 1,
    ASAuthorizationAppleIDButtonTypeSignUp = 2,
    ASAuthorizationAppleIDButtonTypeDefault = ASAuthorizationAppleIDButtonTypeSignIn,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum ASAuthorizationAppleIDButtonStyle {
    ASAuthorizationAppleIDButtonStyleWhite = 0,
    ASAuthorizationAppleIDButtonStyleWhiteOutline = 1,
    ASAuthorizationAppleIDButtonStyleBlack = 2,
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDButton")]
    pub type ASAuthorizationAppleIDButton;

    #[objc2::method(sel = "buttonWithType:style:", managed = "Other")]
    pub unsafe fn buttonWithType_style(
        r#type: ASAuthorizationAppleIDButtonType,
        style: ASAuthorizationAppleIDButtonStyle,
    ) -> Id<Self>;

    #[objc2::method(
        sel = "initWithAuthorizationButtonType:authorizationButtonStyle:",
        managed = "Init"
    )]
    pub unsafe fn initWithAuthorizationButtonType_authorizationButtonStyle(
        this: Option<Allocated<Self>>,
        r#type: ASAuthorizationAppleIDButtonType,
        style: ASAuthorizationAppleIDButtonStyle,
    ) -> Id<Self>;

    #[objc2::method(sel = "cornerRadius")]
    pub unsafe fn cornerRadius(&self) -> CGFloat;

    #[objc2::method(sel = "setCornerRadius:")]
    pub unsafe fn setCornerRadius(&self, corner_radius: CGFloat);
}
