//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern_static!(ASCredentialIdentityStoreErrorDomain: &'static NSErrorDomain);

#[ns_error_enum]
#[underlying(NSInteger)]
pub enum ASCredentialIdentityStoreErrorCode {
    ASCredentialIdentityStoreErrorCodeInternalError = 0,
    ASCredentialIdentityStoreErrorCodeStoreDisabled = 1,
    ASCredentialIdentityStoreErrorCodeStoreBusy = 2,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStore")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ASCredentialIdentityStore;
}

#[cfg(feature = "AuthenticationServices_ASCredentialIdentityStore")]
unsafe impl NSObjectProtocol for ASCredentialIdentityStore {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStore")]
    pub type ASCredentialIdentityStore;

    #[objc2::method(sel = "sharedStore", managed = "Other")]
    pub unsafe fn sharedStore() -> Id<ASCredentialIdentityStore>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
    #[objc2::method(sel = "getCredentialIdentityStoreStateWithCompletion:")]
    pub unsafe fn getCredentialIdentityStoreStateWithCompletion(
        &self,
        completion: &Block<(NonNull<ASCredentialIdentityStoreState>,), ()>,
    );

    #[cfg(all(
        feature = "AuthenticationServices_ASPasswordCredentialIdentity",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "saveCredentialIdentities:completion:")]
    pub unsafe fn saveCredentialIdentities_completion(
        &self,
        credential_identities: &NSArray<ASPasswordCredentialIdentity>,
        completion: Option<&Block<(Bool, *mut NSError), ()>>,
    );

    #[cfg(all(
        feature = "AuthenticationServices_ASPasswordCredentialIdentity",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "removeCredentialIdentities:completion:")]
    pub unsafe fn removeCredentialIdentities_completion(
        &self,
        credential_identities: &NSArray<ASPasswordCredentialIdentity>,
        completion: Option<&Block<(Bool, *mut NSError), ()>>,
    );

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "removeAllCredentialIdentitiesWithCompletion:")]
    pub unsafe fn removeAllCredentialIdentitiesWithCompletion(
        &self,
        completion: Option<&Block<(Bool, *mut NSError), ()>>,
    );

    #[cfg(all(
        feature = "AuthenticationServices_ASPasswordCredentialIdentity",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "replaceCredentialIdentitiesWithIdentities:completion:")]
    pub unsafe fn replaceCredentialIdentitiesWithIdentities_completion(
        &self,
        new_credential_identities: &NSArray<ASPasswordCredentialIdentity>,
        completion: Option<&Block<(Bool, *mut NSError), ()>>,
    );
}
