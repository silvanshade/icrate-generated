//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ASWebAuthenticationSessionWebBrowserSessionManager;
}

#[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionManager")]
unsafe impl NSObjectProtocol for ASWebAuthenticationSessionWebBrowserSessionManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionManager")]
    pub type ASWebAuthenticationSessionWebBrowserSessionManager;

    #[objc2::method(sel = "sharedManager", managed = "Other")]
    pub unsafe fn sharedManager() -> Id<ASWebAuthenticationSessionWebBrowserSessionManager>;

    #[objc2::method(sel = "sessionHandler", managed = "Other")]
    pub unsafe fn sessionHandler(
        &self,
    ) -> Id<ProtocolObject<dyn ASWebAuthenticationSessionWebBrowserSessionHandling>>;

    #[objc2::method(sel = "setSessionHandler:")]
    pub unsafe fn setSessionHandler(
        &self,
        session_handler: &ProtocolObject<dyn ASWebAuthenticationSessionWebBrowserSessionHandling>,
    );

    #[objc2::method(sel = "wasLaunchedByAuthenticationServices")]
    pub unsafe fn wasLaunchedByAuthenticationServices(&self) -> bool;
}
