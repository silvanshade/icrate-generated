//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

typed_extensible_enum!(
    pub type ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport = NSString;
);

extern_static!(
    ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB:
        &'static ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport
);

extern_static!(
    ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC:
        &'static ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport
);

extern_static!(
    ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth:
        &'static ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport
);

extern_fn!(
    #[cfg(feature = "Foundation_NSArray")]
    pub unsafe fn ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports(
    ) -> NonNull<NSArray<ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport>>;
);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"
    )]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;
}

#[cfg(feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
unsafe impl ASAuthorizationPublicKeyCredentialDescriptor
    for ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
{
}

#[cfg(feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
unsafe impl NSCoding for ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
unsafe impl NSObjectProtocol for ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor {}

#[cfg(feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
unsafe impl NSSecureCoding for ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"
    )]
    pub type ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSData"))]
    #[objc2::method(sel = "initWithCredentialID:transports:", managed = "Init")]
    pub unsafe fn initWithCredentialID_transports(
        this: Option<Allocated<Self>>,
        credential_id: &NSData,
        allowed_transports: &NSArray<
            ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport,
        >,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "transports", managed = "Other")]
    pub unsafe fn transports(
        &self,
    ) -> Id<NSArray<ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setTransports:")]
    pub unsafe fn setTransports(
        &self,
        transports: &NSArray<ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport>,
    );

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
