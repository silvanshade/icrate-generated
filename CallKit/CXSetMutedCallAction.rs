//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CXCallAction,
    unsafe inherits = [
        CXAction,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXSetMutedCallAction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXSetMutedCallAction;
}

#[cfg(feature = "CallKit_CXSetMutedCallAction")]
unsafe impl NSCoding for CXSetMutedCallAction {}

#[cfg(feature = "CallKit_CXSetMutedCallAction")]
unsafe impl NSObjectProtocol for CXSetMutedCallAction {}

#[cfg(feature = "CallKit_CXSetMutedCallAction")]
unsafe impl NSSecureCoding for CXSetMutedCallAction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXSetMutedCallAction")]
    pub type CXSetMutedCallAction;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithCallUUID:muted:", managed = "Init")]
    pub unsafe fn initWithCallUUID_muted(
        this: Option<Allocated<Self>>,
        call_uuid: &NSUUID,
        muted: bool,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(
        this: Option<Allocated<Self>>,
        a_decoder: &NSCoder,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithCallUUID:", managed = "Init")]
    pub unsafe fn initWithCallUUID(this: Option<Allocated<Self>>, call_uuid: &NSUUID) -> Id<Self>;

    #[objc2::method(sel = "isMuted")]
    pub unsafe fn isMuted(&self) -> bool;

    #[objc2::method(sel = "setMuted:")]
    pub unsafe fn setMuted(&self, muted: bool);
}
