//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::protocol]
pub unsafe trait CXCallObserverDelegate: NSObjectProtocol {
    #[cfg(all(feature = "CallKit_CXCall", feature = "CallKit_CXCallObserver"))]
    #[objc2::method(sel = "callObserver:callChanged:")]
    unsafe fn callObserver_callChanged(&self, call_observer: &CXCallObserver, call: &CXCall);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCallObserver")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXCallObserver;
}

#[cfg(feature = "CallKit_CXCallObserver")]
unsafe impl NSObjectProtocol for CXCallObserver {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCallObserver")]
    pub type CXCallObserver;

    #[cfg(all(feature = "CallKit_CXCall", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "calls", managed = "Other")]
    pub unsafe fn calls(&self) -> Id<NSArray<CXCall>>;
}
