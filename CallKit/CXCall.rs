//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCall")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXCall;
}

#[cfg(feature = "CallKit_CXCall")]
unsafe impl NSObjectProtocol for CXCall {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCall")]
    pub type CXCall;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[objc2::method(sel = "isOutgoing")]
    pub unsafe fn isOutgoing(&self) -> bool;

    #[objc2::method(sel = "isOnHold")]
    pub unsafe fn isOnHold(&self) -> bool;

    #[objc2::method(sel = "hasConnected")]
    pub unsafe fn hasConnected(&self) -> bool;

    #[objc2::method(sel = "hasEnded")]
    pub unsafe fn hasEnded(&self) -> bool;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "isEqualToCall:")]
    pub unsafe fn isEqualToCall(&self, call: &CXCall) -> bool;
}
