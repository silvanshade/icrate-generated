//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CXAction,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCallAction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXCallAction;
}

#[cfg(feature = "CallKit_CXCallAction")]
unsafe impl NSCoding for CXCallAction {}

#[cfg(feature = "CallKit_CXCallAction")]
unsafe impl NSObjectProtocol for CXCallAction {}

#[cfg(feature = "CallKit_CXCallAction")]
unsafe impl NSSecureCoding for CXCallAction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXCallAction")]
    pub type CXCallAction;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "callUUID", managed = "Other")]
    pub unsafe fn callUUID(&self) -> Id<NSUUID>;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "initWithCallUUID:", managed = "Init")]
    pub unsafe fn initWithCallUUID(this: Option<Allocated<Self>>, call_uuid: &NSUUID) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(
        this: Option<Allocated<Self>>,
        a_decoder: &NSCoder,
    ) -> Option<Id<Self>>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
