//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXAction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXAction;
}

#[cfg(feature = "CallKit_CXAction")]
unsafe impl NSCoding for CXAction {}

#[cfg(feature = "CallKit_CXAction")]
unsafe impl NSObjectProtocol for CXAction {}

#[cfg(feature = "CallKit_CXAction")]
unsafe impl NSSecureCoding for CXAction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXAction")]
    pub type CXAction;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[objc2::method(sel = "isComplete")]
    pub unsafe fn isComplete(&self) -> bool;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "timeoutDate", managed = "Other")]
    pub unsafe fn timeoutDate(&self) -> Id<NSDate>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSCoder")]
    #[objc2::method(sel = "initWithCoder:", managed = "Init")]
    pub unsafe fn initWithCoder(
        this: Option<Allocated<Self>>,
        a_decoder: &NSCoder,
    ) -> Option<Id<Self>>;

    #[objc2::method(sel = "fulfill")]
    pub unsafe fn fulfill(&self);

    #[objc2::method(sel = "fail")]
    pub unsafe fn fail(&self);
}
