//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CallKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXTransaction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CXTransaction;
}

#[cfg(feature = "CallKit_CXTransaction")]
unsafe impl NSCoding for CXTransaction {}

#[cfg(feature = "CallKit_CXTransaction")]
unsafe impl NSObjectProtocol for CXTransaction {}

#[cfg(feature = "CallKit_CXTransaction")]
unsafe impl NSSecureCoding for CXTransaction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CallKit_CXTransaction")]
    pub type CXTransaction;

    #[cfg(feature = "Foundation_NSUUID")]
    #[objc2::method(sel = "UUID", managed = "Other")]
    pub unsafe fn UUID(&self) -> Id<NSUUID>;

    #[objc2::method(sel = "isComplete")]
    pub unsafe fn isComplete(&self) -> bool;

    #[cfg(all(feature = "CallKit_CXAction", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "actions", managed = "Other")]
    pub unsafe fn actions(&self) -> Id<NSArray<CXAction>>;

    #[cfg(all(feature = "CallKit_CXAction", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "initWithActions:", managed = "Init")]
    pub unsafe fn initWithActions(
        this: Option<Allocated<Self>>,
        actions: &NSArray<CXAction>,
    ) -> Id<Self>;

    #[cfg(feature = "CallKit_CXAction")]
    #[objc2::method(sel = "initWithAction:", managed = "Init")]
    pub unsafe fn initWithAction(this: Option<Allocated<Self>>, action: &CXAction) -> Id<Self>;

    #[cfg(feature = "CallKit_CXAction")]
    #[objc2::method(sel = "addAction:")]
    pub unsafe fn addAction(&self, action: &CXAction);
}
