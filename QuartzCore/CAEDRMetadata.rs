//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAEDRMetadata")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAEDRMetadata;
}

#[cfg(feature = "CoreAnimation_CAEDRMetadata")]
unsafe impl NSObjectProtocol for CAEDRMetadata {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAEDRMetadata")]
    pub type CAEDRMetadata;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(
        sel = "HDR10MetadataWithDisplayInfo:contentInfo:opticalOutputScale:",
        managed = "Other"
    )]
    pub unsafe fn HDR10MetadataWithDisplayInfo_contentInfo_opticalOutputScale(
        display_data: Option<&NSData>,
        content_data: Option<&NSData>,
        scale: c_float,
    ) -> Id<CAEDRMetadata>;

    #[objc2::method(
        sel = "HDR10MetadataWithMinLuminance:maxLuminance:opticalOutputScale:",
        managed = "Other"
    )]
    pub unsafe fn HDR10MetadataWithMinLuminance_maxLuminance_opticalOutputScale(
        min_nits: c_float,
        max_nits: c_float,
        scale: c_float,
    ) -> Id<CAEDRMetadata>;

    #[objc2::method(sel = "HLGMetadata", managed = "Other")]
    pub unsafe fn HLGMetadata() -> Id<CAEDRMetadata>;

    #[objc2::method(sel = "isAvailable")]
    pub unsafe fn isAvailable() -> bool;
}
