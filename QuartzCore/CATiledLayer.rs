//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CALayer,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATiledLayer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CATiledLayer;
}

#[cfg(feature = "CoreAnimation_CATiledLayer")]
unsafe impl CAMediaTiming for CATiledLayer {}

#[cfg(feature = "CoreAnimation_CATiledLayer")]
unsafe impl NSCoding for CATiledLayer {}

#[cfg(feature = "CoreAnimation_CATiledLayer")]
unsafe impl NSObjectProtocol for CATiledLayer {}

#[cfg(feature = "CoreAnimation_CATiledLayer")]
unsafe impl NSSecureCoding for CATiledLayer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATiledLayer")]
    pub type CATiledLayer;

    #[objc2::method(sel = "fadeDuration")]
    pub unsafe fn fadeDuration() -> CFTimeInterval;

    #[objc2::method(sel = "levelsOfDetail")]
    pub unsafe fn levelsOfDetail(&self) -> usize;

    #[objc2::method(sel = "setLevelsOfDetail:")]
    pub unsafe fn setLevelsOfDetail(&self, levels_of_detail: usize);

    #[objc2::method(sel = "levelsOfDetailBias")]
    pub unsafe fn levelsOfDetailBias(&self) -> usize;

    #[objc2::method(sel = "setLevelsOfDetailBias:")]
    pub unsafe fn setLevelsOfDetailBias(&self, levels_of_detail_bias: usize);

    #[objc2::method(sel = "tileSize")]
    pub unsafe fn tileSize(&self) -> CGSize;

    #[objc2::method(sel = "setTileSize:")]
    pub unsafe fn setTileSize(&self, tile_size: CGSize);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CALayer`
    #[cfg(feature = "CoreAnimation_CATiledLayer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATiledLayer")]
    pub type CATiledLayer;

    #[objc2::method(sel = "layer", managed = "Other")]
    pub unsafe fn layer() -> Id<Self>;

    #[objc2::method(sel = "initWithLayer:", managed = "Init")]
    pub unsafe fn initWithLayer(this: Option<Allocated<Self>>, layer: &Object) -> Id<Self>;
}
