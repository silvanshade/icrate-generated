//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATransaction")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CATransaction;
}

#[cfg(feature = "CoreAnimation_CATransaction")]
unsafe impl NSObjectProtocol for CATransaction {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATransaction")]
    pub type CATransaction;

    #[objc2::method(sel = "begin")]
    pub fn begin();

    #[objc2::method(sel = "commit")]
    pub fn commit();

    #[objc2::method(sel = "flush")]
    pub fn flush();

    #[objc2::method(sel = "lock")]
    pub unsafe fn lock();

    #[objc2::method(sel = "unlock")]
    pub unsafe fn unlock();

    #[objc2::method(sel = "animationDuration")]
    pub fn animationDuration() -> CFTimeInterval;

    #[objc2::method(sel = "setAnimationDuration:")]
    pub fn setAnimationDuration(dur: CFTimeInterval);

    #[cfg(feature = "CoreAnimation_CAMediaTimingFunction")]
    #[objc2::method(sel = "animationTimingFunction", managed = "Other")]
    pub fn animationTimingFunction() -> Option<Id<CAMediaTimingFunction>>;

    #[cfg(feature = "CoreAnimation_CAMediaTimingFunction")]
    #[objc2::method(sel = "setAnimationTimingFunction:")]
    pub fn setAnimationTimingFunction(function: Option<&CAMediaTimingFunction>);

    #[objc2::method(sel = "disableActions")]
    pub fn disableActions() -> bool;

    #[objc2::method(sel = "setDisableActions:")]
    pub fn setDisableActions(flag: bool);

    #[objc2::method(sel = "completionBlock")]
    pub unsafe fn completionBlock() -> *mut Block<(), ()>;

    #[objc2::method(sel = "setCompletionBlock:")]
    pub unsafe fn setCompletionBlock(block: Option<&Block<(), ()>>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "valueForKey:", managed = "Other")]
    pub unsafe fn valueForKey(key: &NSString) -> Option<Id<Object>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:forKey:")]
    pub unsafe fn setValue_forKey(an_object: Option<&Object>, key: &NSString);
}

extern_static!(kCATransactionAnimationDuration: &'static NSString);

extern_static!(kCATransactionDisableActions: &'static NSString);

extern_static!(kCATransactionAnimationTimingFunction: &'static NSString);

extern_static!(kCATransactionCompletionBlock: &'static NSString);
