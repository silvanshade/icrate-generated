//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation::*;
use crate::Foundation::*;

typed_enum!(
    pub type CAAnimationCalculationMode = NSString;
);

typed_enum!(
    pub type CAAnimationRotationMode = NSString;
);

typed_enum!(
    pub type CATransitionType = NSString;
);

typed_enum!(
    pub type CATransitionSubtype = NSString;
);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAAnimation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAAnimation;
}

#[cfg(feature = "CoreAnimation_CAAnimation")]
unsafe impl CAAction for CAAnimation {}

#[cfg(feature = "CoreAnimation_CAAnimation")]
unsafe impl CAMediaTiming for CAAnimation {}

#[cfg(feature = "CoreAnimation_CAAnimation")]
unsafe impl NSCoding for CAAnimation {}

#[cfg(feature = "CoreAnimation_CAAnimation")]
unsafe impl NSObjectProtocol for CAAnimation {}

#[cfg(feature = "CoreAnimation_CAAnimation")]
unsafe impl NSSecureCoding for CAAnimation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAAnimation")]
    pub type CAAnimation;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "defaultValueForKey:", managed = "Other")]
    pub unsafe fn defaultValueForKey(key: &NSString) -> Option<Id<Object>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "shouldArchiveValueForKey:")]
    pub unsafe fn shouldArchiveValueForKey(&self, key: &NSString) -> bool;

    #[cfg(feature = "CoreAnimation_CAMediaTimingFunction")]
    #[objc2::method(sel = "timingFunction", managed = "Other")]
    pub unsafe fn timingFunction(&self) -> Option<Id<CAMediaTimingFunction>>;

    #[cfg(feature = "CoreAnimation_CAMediaTimingFunction")]
    #[objc2::method(sel = "setTimingFunction:")]
    pub unsafe fn setTimingFunction(&self, timing_function: Option<&CAMediaTimingFunction>);

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn CAAnimationDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(&self, delegate: Option<&ProtocolObject<dyn CAAnimationDelegate>>);

    #[objc2::method(sel = "isRemovedOnCompletion")]
    pub unsafe fn isRemovedOnCompletion(&self) -> bool;

    #[objc2::method(sel = "setRemovedOnCompletion:")]
    pub unsafe fn setRemovedOnCompletion(&self, removed_on_completion: bool);

    #[objc2::method(sel = "preferredFrameRateRange")]
    pub unsafe fn preferredFrameRateRange(&self) -> CAFrameRateRange;

    #[objc2::method(sel = "setPreferredFrameRateRange:")]
    pub unsafe fn setPreferredFrameRateRange(&self, preferred_frame_rate_range: CAFrameRateRange);
}

#[objc2::protocol]
pub unsafe trait CAAnimationDelegate: NSObjectProtocol {
    #[cfg(feature = "CoreAnimation_CAAnimation")]
    #[objc2::method(optional, sel = "animationDidStart:")]
    unsafe fn animationDidStart(&self, anim: &CAAnimation);

    #[cfg(feature = "CoreAnimation_CAAnimation")]
    #[objc2::method(optional, sel = "animationDidStop:finished:")]
    unsafe fn animationDidStop_finished(&self, anim: &CAAnimation, flag: bool);
}

#[objc2::interface(
    unsafe super = CAAnimation,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAPropertyAnimation;
}

#[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
unsafe impl CAAction for CAPropertyAnimation {}

#[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
unsafe impl CAMediaTiming for CAPropertyAnimation {}

#[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
unsafe impl NSCoding for CAPropertyAnimation {}

#[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
unsafe impl NSObjectProtocol for CAPropertyAnimation {}

#[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
unsafe impl NSSecureCoding for CAPropertyAnimation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
    pub type CAPropertyAnimation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "animationWithKeyPath:", managed = "Other")]
    pub unsafe fn animationWithKeyPath(path: Option<&NSString>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "keyPath", managed = "Other")]
    pub unsafe fn keyPath(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setKeyPath:")]
    pub unsafe fn setKeyPath(&self, key_path: Option<&NSString>);

    #[objc2::method(sel = "isAdditive")]
    pub unsafe fn isAdditive(&self) -> bool;

    #[objc2::method(sel = "setAdditive:")]
    pub unsafe fn setAdditive(&self, additive: bool);

    #[objc2::method(sel = "isCumulative")]
    pub unsafe fn isCumulative(&self) -> bool;

    #[objc2::method(sel = "setCumulative:")]
    pub unsafe fn setCumulative(&self, cumulative: bool);

    #[cfg(feature = "CoreAnimation_CAValueFunction")]
    #[objc2::method(sel = "valueFunction", managed = "Other")]
    pub unsafe fn valueFunction(&self) -> Option<Id<CAValueFunction>>;

    #[cfg(feature = "CoreAnimation_CAValueFunction")]
    #[objc2::method(sel = "setValueFunction:")]
    pub unsafe fn setValueFunction(&self, value_function: Option<&CAValueFunction>);
}

#[objc2::interface(
    unsafe super = CAPropertyAnimation,
    unsafe inherits = [
        CAAnimation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CABasicAnimation;
}

#[cfg(feature = "CoreAnimation_CABasicAnimation")]
unsafe impl CAAction for CABasicAnimation {}

#[cfg(feature = "CoreAnimation_CABasicAnimation")]
unsafe impl CAMediaTiming for CABasicAnimation {}

#[cfg(feature = "CoreAnimation_CABasicAnimation")]
unsafe impl NSCoding for CABasicAnimation {}

#[cfg(feature = "CoreAnimation_CABasicAnimation")]
unsafe impl NSObjectProtocol for CABasicAnimation {}

#[cfg(feature = "CoreAnimation_CABasicAnimation")]
unsafe impl NSSecureCoding for CABasicAnimation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    pub type CABasicAnimation;

    #[objc2::method(sel = "fromValue", managed = "Other")]
    pub unsafe fn fromValue(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setFromValue:")]
    pub unsafe fn setFromValue(&self, from_value: Option<&Object>);

    #[objc2::method(sel = "toValue", managed = "Other")]
    pub unsafe fn toValue(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setToValue:")]
    pub unsafe fn setToValue(&self, to_value: Option<&Object>);

    #[objc2::method(sel = "byValue", managed = "Other")]
    pub unsafe fn byValue(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setByValue:")]
    pub unsafe fn setByValue(&self, by_value: Option<&Object>);
}

#[objc2::interface(
    unsafe super = CAPropertyAnimation,
    unsafe inherits = [
        CAAnimation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAKeyframeAnimation;
}

#[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
unsafe impl CAAction for CAKeyframeAnimation {}

#[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
unsafe impl CAMediaTiming for CAKeyframeAnimation {}

#[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
unsafe impl NSCoding for CAKeyframeAnimation {}

#[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
unsafe impl NSObjectProtocol for CAKeyframeAnimation {}

#[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
unsafe impl NSSecureCoding for CAKeyframeAnimation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    pub type CAKeyframeAnimation;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "values", managed = "Other")]
    pub unsafe fn values(&self) -> Option<Id<NSArray>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setValues:")]
    pub unsafe fn setValues(&self, values: Option<&NSArray>);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "keyTimes", managed = "Other")]
    pub unsafe fn keyTimes(&self) -> Option<Id<NSArray<NSNumber>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "setKeyTimes:")]
    pub unsafe fn setKeyTimes(&self, key_times: Option<&NSArray<NSNumber>>);

    #[cfg(all(
        feature = "CoreAnimation_CAMediaTimingFunction",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "timingFunctions", managed = "Other")]
    pub unsafe fn timingFunctions(&self) -> Option<Id<NSArray<CAMediaTimingFunction>>>;

    #[cfg(all(
        feature = "CoreAnimation_CAMediaTimingFunction",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setTimingFunctions:")]
    pub unsafe fn setTimingFunctions(
        &self,
        timing_functions: Option<&NSArray<CAMediaTimingFunction>>,
    );

    #[objc2::method(sel = "calculationMode", managed = "Other")]
    pub unsafe fn calculationMode(&self) -> Id<CAAnimationCalculationMode>;

    #[objc2::method(sel = "setCalculationMode:")]
    pub unsafe fn setCalculationMode(&self, calculation_mode: &CAAnimationCalculationMode);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "tensionValues", managed = "Other")]
    pub unsafe fn tensionValues(&self) -> Option<Id<NSArray<NSNumber>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "setTensionValues:")]
    pub unsafe fn setTensionValues(&self, tension_values: Option<&NSArray<NSNumber>>);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "continuityValues", managed = "Other")]
    pub unsafe fn continuityValues(&self) -> Option<Id<NSArray<NSNumber>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "setContinuityValues:")]
    pub unsafe fn setContinuityValues(&self, continuity_values: Option<&NSArray<NSNumber>>);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "biasValues", managed = "Other")]
    pub unsafe fn biasValues(&self) -> Option<Id<NSArray<NSNumber>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "setBiasValues:")]
    pub unsafe fn setBiasValues(&self, bias_values: Option<&NSArray<NSNumber>>);

    #[objc2::method(sel = "rotationMode", managed = "Other")]
    pub unsafe fn rotationMode(&self) -> Option<Id<CAAnimationRotationMode>>;

    #[objc2::method(sel = "setRotationMode:")]
    pub unsafe fn setRotationMode(&self, rotation_mode: Option<&CAAnimationRotationMode>);
}

extern_static!(kCAAnimationLinear: &'static CAAnimationCalculationMode);

extern_static!(kCAAnimationDiscrete: &'static CAAnimationCalculationMode);

extern_static!(kCAAnimationPaced: &'static CAAnimationCalculationMode);

extern_static!(kCAAnimationCubic: &'static CAAnimationCalculationMode);

extern_static!(kCAAnimationCubicPaced: &'static CAAnimationCalculationMode);

extern_static!(kCAAnimationRotateAuto: &'static CAAnimationRotationMode);

extern_static!(kCAAnimationRotateAutoReverse: &'static CAAnimationRotationMode);

#[objc2::interface(
    unsafe super = CABasicAnimation,
    unsafe inherits = [
        CAPropertyAnimation,
        CAAnimation,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CASpringAnimation;
}

#[cfg(feature = "CoreAnimation_CASpringAnimation")]
unsafe impl CAAction for CASpringAnimation {}

#[cfg(feature = "CoreAnimation_CASpringAnimation")]
unsafe impl CAMediaTiming for CASpringAnimation {}

#[cfg(feature = "CoreAnimation_CASpringAnimation")]
unsafe impl NSCoding for CASpringAnimation {}

#[cfg(feature = "CoreAnimation_CASpringAnimation")]
unsafe impl NSObjectProtocol for CASpringAnimation {}

#[cfg(feature = "CoreAnimation_CASpringAnimation")]
unsafe impl NSSecureCoding for CASpringAnimation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    pub type CASpringAnimation;

    #[objc2::method(sel = "mass")]
    pub unsafe fn mass(&self) -> CGFloat;

    #[objc2::method(sel = "setMass:")]
    pub unsafe fn setMass(&self, mass: CGFloat);

    #[objc2::method(sel = "stiffness")]
    pub unsafe fn stiffness(&self) -> CGFloat;

    #[objc2::method(sel = "setStiffness:")]
    pub unsafe fn setStiffness(&self, stiffness: CGFloat);

    #[objc2::method(sel = "damping")]
    pub unsafe fn damping(&self) -> CGFloat;

    #[objc2::method(sel = "setDamping:")]
    pub unsafe fn setDamping(&self, damping: CGFloat);

    #[objc2::method(sel = "initialVelocity")]
    pub unsafe fn initialVelocity(&self) -> CGFloat;

    #[objc2::method(sel = "setInitialVelocity:")]
    pub unsafe fn setInitialVelocity(&self, initial_velocity: CGFloat);

    #[objc2::method(sel = "settlingDuration")]
    pub unsafe fn settlingDuration(&self) -> CFTimeInterval;
}

#[objc2::interface(
    unsafe super = CAAnimation,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATransition")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CATransition;
}

#[cfg(feature = "CoreAnimation_CATransition")]
unsafe impl CAAction for CATransition {}

#[cfg(feature = "CoreAnimation_CATransition")]
unsafe impl CAMediaTiming for CATransition {}

#[cfg(feature = "CoreAnimation_CATransition")]
unsafe impl NSCoding for CATransition {}

#[cfg(feature = "CoreAnimation_CATransition")]
unsafe impl NSObjectProtocol for CATransition {}

#[cfg(feature = "CoreAnimation_CATransition")]
unsafe impl NSSecureCoding for CATransition {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATransition")]
    pub type CATransition;

    #[objc2::method(sel = "type", managed = "Other")]
    pub unsafe fn r#type(&self) -> Id<CATransitionType>;

    #[objc2::method(sel = "setType:")]
    pub unsafe fn setType(&self, r#type: &CATransitionType);

    #[objc2::method(sel = "subtype", managed = "Other")]
    pub unsafe fn subtype(&self) -> Option<Id<CATransitionSubtype>>;

    #[objc2::method(sel = "setSubtype:")]
    pub unsafe fn setSubtype(&self, subtype: Option<&CATransitionSubtype>);

    #[objc2::method(sel = "startProgress")]
    pub unsafe fn startProgress(&self) -> c_float;

    #[objc2::method(sel = "setStartProgress:")]
    pub unsafe fn setStartProgress(&self, start_progress: c_float);

    #[objc2::method(sel = "endProgress")]
    pub unsafe fn endProgress(&self) -> c_float;

    #[objc2::method(sel = "setEndProgress:")]
    pub unsafe fn setEndProgress(&self, end_progress: c_float);

    #[objc2::method(sel = "filter", managed = "Other")]
    pub unsafe fn filter(&self) -> Option<Id<Object>>;

    #[objc2::method(sel = "setFilter:")]
    pub unsafe fn setFilter(&self, filter: Option<&Object>);
}

extern_static!(kCATransitionFade: &'static CATransitionType);

extern_static!(kCATransitionMoveIn: &'static CATransitionType);

extern_static!(kCATransitionPush: &'static CATransitionType);

extern_static!(kCATransitionReveal: &'static CATransitionType);

extern_static!(kCATransitionFromRight: &'static CATransitionSubtype);

extern_static!(kCATransitionFromLeft: &'static CATransitionSubtype);

extern_static!(kCATransitionFromTop: &'static CATransitionSubtype);

extern_static!(kCATransitionFromBottom: &'static CATransitionSubtype);

#[objc2::interface(
    unsafe super = CAAnimation,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAAnimationGroup")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAAnimationGroup;
}

#[cfg(feature = "CoreAnimation_CAAnimationGroup")]
unsafe impl CAAction for CAAnimationGroup {}

#[cfg(feature = "CoreAnimation_CAAnimationGroup")]
unsafe impl CAMediaTiming for CAAnimationGroup {}

#[cfg(feature = "CoreAnimation_CAAnimationGroup")]
unsafe impl NSCoding for CAAnimationGroup {}

#[cfg(feature = "CoreAnimation_CAAnimationGroup")]
unsafe impl NSObjectProtocol for CAAnimationGroup {}

#[cfg(feature = "CoreAnimation_CAAnimationGroup")]
unsafe impl NSSecureCoding for CAAnimationGroup {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAAnimationGroup")]
    pub type CAAnimationGroup;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "animations", managed = "Other")]
    pub unsafe fn animations(&self) -> Option<Id<NSArray<CAAnimation>>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setAnimations:")]
    pub unsafe fn setAnimations(&self, animations: Option<&NSArray<CAAnimation>>);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAPropertyAnimation")]
    pub type CAPropertyAnimation;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAPropertyAnimation`
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    pub type CABasicAnimation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "animationWithKeyPath:", managed = "Other")]
    pub unsafe fn animationWithKeyPath(path: Option<&NSString>) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CABasicAnimation")]
    pub type CABasicAnimation;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAPropertyAnimation`
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    pub type CAKeyframeAnimation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "animationWithKeyPath:", managed = "Other")]
    pub unsafe fn animationWithKeyPath(path: Option<&NSString>) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAKeyframeAnimation")]
    pub type CAKeyframeAnimation;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAPropertyAnimation`
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    pub type CASpringAnimation;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "animationWithKeyPath:", managed = "Other")]
    pub unsafe fn animationWithKeyPath(path: Option<&NSString>) -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CASpringAnimation")]
    pub type CASpringAnimation;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CATransition")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CATransition")]
    pub type CATransition;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CAAnimation`
    #[cfg(feature = "CoreAnimation_CAAnimationGroup")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAAnimationGroup")]
    pub type CAAnimationGroup;

    #[objc2::method(sel = "animation", managed = "Other")]
    pub unsafe fn animation() -> Id<Self>;
}
