//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation::*;
use crate::Foundation::*;

typed_enum!(
    pub type CAShapeLayerFillRule = NSString;
);

typed_enum!(
    pub type CAShapeLayerLineJoin = NSString;
);

typed_enum!(
    pub type CAShapeLayerLineCap = NSString;
);

#[objc2::interface(
    unsafe super = CALayer,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAShapeLayer")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CAShapeLayer;
}

#[cfg(feature = "CoreAnimation_CAShapeLayer")]
unsafe impl CAMediaTiming for CAShapeLayer {}

#[cfg(feature = "CoreAnimation_CAShapeLayer")]
unsafe impl NSCoding for CAShapeLayer {}

#[cfg(feature = "CoreAnimation_CAShapeLayer")]
unsafe impl NSObjectProtocol for CAShapeLayer {}

#[cfg(feature = "CoreAnimation_CAShapeLayer")]
unsafe impl NSSecureCoding for CAShapeLayer {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAShapeLayer")]
    pub type CAShapeLayer;

    #[objc2::method(sel = "fillRule", managed = "Other")]
    pub unsafe fn fillRule(&self) -> Id<CAShapeLayerFillRule>;

    #[objc2::method(sel = "setFillRule:")]
    pub unsafe fn setFillRule(&self, fill_rule: &CAShapeLayerFillRule);

    #[objc2::method(sel = "strokeStart")]
    pub unsafe fn strokeStart(&self) -> CGFloat;

    #[objc2::method(sel = "setStrokeStart:")]
    pub unsafe fn setStrokeStart(&self, stroke_start: CGFloat);

    #[objc2::method(sel = "strokeEnd")]
    pub unsafe fn strokeEnd(&self) -> CGFloat;

    #[objc2::method(sel = "setStrokeEnd:")]
    pub unsafe fn setStrokeEnd(&self, stroke_end: CGFloat);

    #[objc2::method(sel = "lineWidth")]
    pub unsafe fn lineWidth(&self) -> CGFloat;

    #[objc2::method(sel = "setLineWidth:")]
    pub unsafe fn setLineWidth(&self, line_width: CGFloat);

    #[objc2::method(sel = "miterLimit")]
    pub unsafe fn miterLimit(&self) -> CGFloat;

    #[objc2::method(sel = "setMiterLimit:")]
    pub unsafe fn setMiterLimit(&self, miter_limit: CGFloat);

    #[objc2::method(sel = "lineCap", managed = "Other")]
    pub unsafe fn lineCap(&self) -> Id<CAShapeLayerLineCap>;

    #[objc2::method(sel = "setLineCap:")]
    pub unsafe fn setLineCap(&self, line_cap: &CAShapeLayerLineCap);

    #[objc2::method(sel = "lineJoin", managed = "Other")]
    pub unsafe fn lineJoin(&self) -> Id<CAShapeLayerLineJoin>;

    #[objc2::method(sel = "setLineJoin:")]
    pub unsafe fn setLineJoin(&self, line_join: &CAShapeLayerLineJoin);

    #[objc2::method(sel = "lineDashPhase")]
    pub unsafe fn lineDashPhase(&self) -> CGFloat;

    #[objc2::method(sel = "setLineDashPhase:")]
    pub unsafe fn setLineDashPhase(&self, line_dash_phase: CGFloat);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "lineDashPattern", managed = "Other")]
    pub unsafe fn lineDashPattern(&self) -> Option<Id<NSArray<NSNumber>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSNumber"))]
    #[objc2::method(sel = "setLineDashPattern:")]
    pub unsafe fn setLineDashPattern(&self, line_dash_pattern: Option<&NSArray<NSNumber>>);
}

extern_static!(kCAFillRuleNonZero: &'static CAShapeLayerFillRule);

extern_static!(kCAFillRuleEvenOdd: &'static CAShapeLayerFillRule);

extern_static!(kCALineJoinMiter: &'static CAShapeLayerLineJoin);

extern_static!(kCALineJoinRound: &'static CAShapeLayerLineJoin);

extern_static!(kCALineJoinBevel: &'static CAShapeLayerLineJoin);

extern_static!(kCALineCapButt: &'static CAShapeLayerLineCap);

extern_static!(kCALineCapRound: &'static CAShapeLayerLineCap);

extern_static!(kCALineCapSquare: &'static CAShapeLayerLineCap);

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `CALayer`
    #[cfg(feature = "CoreAnimation_CAShapeLayer")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "CoreAnimation_CAShapeLayer")]
    pub type CAShapeLayer;

    #[objc2::method(sel = "layer", managed = "Other")]
    pub unsafe fn layer() -> Id<Self>;

    #[objc2::method(sel = "initWithLayer:", managed = "Init")]
    pub unsafe fn initWithLayer(this: Option<Allocated<Self>>, layer: &Object) -> Id<Self>;
}
