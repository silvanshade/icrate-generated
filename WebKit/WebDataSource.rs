//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_WebDataSource")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WebDataSource;
}

#[cfg(feature = "WebKit_WebDataSource")]
unsafe impl NSObjectProtocol for WebDataSource {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebDataSource")]
    #[deprecated]
    pub type WebDataSource;

    #[cfg(feature = "Foundation_NSURLRequest")]
    #[objc2::method(sel = "initWithRequest:", managed = "Init")]
    pub unsafe fn initWithRequest(
        this: Option<Allocated<Self>>,
        request: Option<&NSURLRequest>,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "data", managed = "Other")]
    pub unsafe fn data(&self) -> Id<NSData>;

    #[objc2::method(sel = "representation", managed = "Other")]
    pub unsafe fn representation(
        &self,
    ) -> Option<Id<ProtocolObject<dyn WebDocumentRepresentation>>>;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "webFrame", managed = "Other")]
    pub unsafe fn webFrame(&self) -> Option<Id<WebFrame>>;

    #[cfg(feature = "Foundation_NSURLRequest")]
    #[objc2::method(sel = "initialRequest", managed = "Other")]
    pub unsafe fn initialRequest(&self) -> Option<Id<NSURLRequest>>;

    #[cfg(feature = "Foundation_NSMutableURLRequest")]
    #[objc2::method(sel = "request", managed = "Other")]
    pub unsafe fn request(&self) -> Option<Id<NSMutableURLRequest, Owned>>;

    #[cfg(feature = "Foundation_NSURLResponse")]
    #[objc2::method(sel = "response", managed = "Other")]
    pub unsafe fn response(&self) -> Option<Id<NSURLResponse>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "textEncodingName", managed = "Other")]
    pub unsafe fn textEncodingName(&self) -> Id<NSString>;

    #[objc2::method(sel = "isLoading")]
    pub unsafe fn isLoading(&self) -> bool;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "pageTitle", managed = "Other")]
    pub unsafe fn pageTitle(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSURL")]
    #[objc2::method(sel = "unreachableURL", managed = "Other")]
    pub unsafe fn unreachableURL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "WebKit_WebArchive")]
    #[objc2::method(sel = "webArchive", managed = "Other")]
    pub unsafe fn webArchive(&self) -> Option<Id<WebArchive>>;

    #[cfg(feature = "WebKit_WebResource")]
    #[objc2::method(sel = "mainResource", managed = "Other")]
    pub unsafe fn mainResource(&self) -> Option<Id<WebResource>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "subresources", managed = "Other")]
    pub unsafe fn subresources(&self) -> Id<NSArray>;

    #[cfg(all(feature = "Foundation_NSURL", feature = "WebKit_WebResource"))]
    #[objc2::method(sel = "subresourceForURL:", managed = "Other")]
    pub unsafe fn subresourceForURL(&self, url: Option<&NSURL>) -> Option<Id<WebResource>>;

    #[cfg(feature = "WebKit_WebResource")]
    #[objc2::method(sel = "addSubresource:")]
    pub unsafe fn addSubresource(&self, subresource: Option<&WebResource>);
}
