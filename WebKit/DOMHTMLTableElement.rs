//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLTableElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLTableElement;
}

#[cfg(feature = "WebKit_DOMHTMLTableElement")]
unsafe impl DOMEventTarget for DOMHTMLTableElement {}

#[cfg(feature = "WebKit_DOMHTMLTableElement")]
unsafe impl NSObjectProtocol for DOMHTMLTableElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLTableElement")]
    #[deprecated]
    pub type DOMHTMLTableElement;

    #[cfg(feature = "WebKit_DOMHTMLTableCaptionElement")]
    #[objc2::method(sel = "caption", managed = "Other")]
    pub unsafe fn caption(&self) -> Option<Id<DOMHTMLTableCaptionElement>>;

    #[cfg(feature = "WebKit_DOMHTMLTableCaptionElement")]
    #[objc2::method(sel = "setCaption:")]
    pub unsafe fn setCaption(&self, caption: Option<&DOMHTMLTableCaptionElement>);

    #[cfg(feature = "WebKit_DOMHTMLTableSectionElement")]
    #[objc2::method(sel = "tHead", managed = "Other")]
    pub unsafe fn tHead(&self) -> Option<Id<DOMHTMLTableSectionElement>>;

    #[cfg(feature = "WebKit_DOMHTMLTableSectionElement")]
    #[objc2::method(sel = "setTHead:")]
    pub unsafe fn setTHead(&self, t_head: Option<&DOMHTMLTableSectionElement>);

    #[cfg(feature = "WebKit_DOMHTMLTableSectionElement")]
    #[objc2::method(sel = "tFoot", managed = "Other")]
    pub unsafe fn tFoot(&self) -> Option<Id<DOMHTMLTableSectionElement>>;

    #[cfg(feature = "WebKit_DOMHTMLTableSectionElement")]
    #[objc2::method(sel = "setTFoot:")]
    pub unsafe fn setTFoot(&self, t_foot: Option<&DOMHTMLTableSectionElement>);

    #[cfg(feature = "WebKit_DOMHTMLCollection")]
    #[objc2::method(sel = "rows", managed = "Other")]
    pub unsafe fn rows(&self) -> Option<Id<DOMHTMLCollection>>;

    #[cfg(feature = "WebKit_DOMHTMLCollection")]
    #[objc2::method(sel = "tBodies", managed = "Other")]
    pub unsafe fn tBodies(&self) -> Option<Id<DOMHTMLCollection>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "align", managed = "Other")]
    pub unsafe fn align(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setAlign:")]
    pub unsafe fn setAlign(&self, align: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "bgColor", managed = "Other")]
    pub unsafe fn bgColor(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setBgColor:")]
    pub unsafe fn setBgColor(&self, bg_color: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "border", managed = "Other")]
    pub unsafe fn border(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setBorder:")]
    pub unsafe fn setBorder(&self, border: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "cellPadding", managed = "Other")]
    pub unsafe fn cellPadding(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCellPadding:")]
    pub unsafe fn setCellPadding(&self, cell_padding: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "cellSpacing", managed = "Other")]
    pub unsafe fn cellSpacing(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCellSpacing:")]
    pub unsafe fn setCellSpacing(&self, cell_spacing: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "frameBorders", managed = "Other")]
    pub unsafe fn frameBorders(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setFrameBorders:")]
    pub unsafe fn setFrameBorders(&self, frame_borders: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "rules", managed = "Other")]
    pub unsafe fn rules(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setRules:")]
    pub unsafe fn setRules(&self, rules: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "summary", managed = "Other")]
    pub unsafe fn summary(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSummary:")]
    pub unsafe fn setSummary(&self, summary: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "width", managed = "Other")]
    pub unsafe fn width(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setWidth:")]
    pub unsafe fn setWidth(&self, width: Option<&NSString>);

    #[objc2::method(sel = "createTHead", managed = "Other")]
    pub unsafe fn createTHead(&self) -> Option<Id<DOMHTMLElement>>;

    #[objc2::method(sel = "deleteTHead")]
    pub unsafe fn deleteTHead(&self);

    #[objc2::method(sel = "createTFoot", managed = "Other")]
    pub unsafe fn createTFoot(&self) -> Option<Id<DOMHTMLElement>>;

    #[objc2::method(sel = "deleteTFoot")]
    pub unsafe fn deleteTFoot(&self);

    #[objc2::method(sel = "createCaption", managed = "Other")]
    pub unsafe fn createCaption(&self) -> Option<Id<DOMHTMLElement>>;

    #[objc2::method(sel = "deleteCaption")]
    pub unsafe fn deleteCaption(&self);

    #[objc2::method(sel = "insertRow:", managed = "Other")]
    pub unsafe fn insertRow(&self, index: c_int) -> Option<Id<DOMHTMLElement>>;

    #[objc2::method(sel = "deleteRow:")]
    pub unsafe fn deleteRow(&self, index: c_int);
}
