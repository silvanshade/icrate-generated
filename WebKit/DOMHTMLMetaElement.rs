//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLMetaElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLMetaElement;
}

#[cfg(feature = "WebKit_DOMHTMLMetaElement")]
unsafe impl DOMEventTarget for DOMHTMLMetaElement {}

#[cfg(feature = "WebKit_DOMHTMLMetaElement")]
unsafe impl NSObjectProtocol for DOMHTMLMetaElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLMetaElement")]
    #[deprecated]
    pub type DOMHTMLMetaElement;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "content", managed = "Other")]
    pub unsafe fn content(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setContent:")]
    pub unsafe fn setContent(&self, content: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "httpEquiv", managed = "Other")]
    pub unsafe fn httpEquiv(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setHttpEquiv:")]
    pub unsafe fn setHttpEquiv(&self, http_equiv: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "scheme", managed = "Other")]
    pub unsafe fn scheme(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setScheme:")]
    pub unsafe fn setScheme(&self, scheme: Option<&NSString>);
}
