//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMNode")]
    pub type DOMNode;

    #[objc2::method(sel = "boundingBox")]
    pub unsafe fn boundingBox(&self) -> NSRect;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "lineBoxRects", managed = "Other")]
    pub unsafe fn lineBoxRects(&self) -> Option<Id<NSArray>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMElement")]
    pub type DOMElement;

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "image", managed = "Other")]
    pub unsafe fn image(&self) -> Option<Id<NSImage>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLDocument")]
    pub type DOMHTMLDocument;

    #[cfg(all(
        feature = "Foundation_NSString",
        feature = "Foundation_NSURL",
        feature = "WebKit_DOMDocumentFragment"
    ))]
    #[objc2::method(
        sel = "createDocumentFragmentWithMarkupString:baseURL:",
        managed = "Other"
    )]
    pub unsafe fn createDocumentFragmentWithMarkupString_baseURL(
        &self,
        markup_string: Option<&NSString>,
        base_url: Option<&NSURL>,
    ) -> Option<Id<DOMDocumentFragment>>;

    #[cfg(all(
        feature = "Foundation_NSString",
        feature = "WebKit_DOMDocumentFragment"
    ))]
    #[objc2::method(sel = "createDocumentFragmentWithText:", managed = "Other")]
    pub unsafe fn createDocumentFragmentWithText(
        &self,
        text: Option<&NSString>,
    ) -> Option<Id<DOMDocumentFragment>>;
}
