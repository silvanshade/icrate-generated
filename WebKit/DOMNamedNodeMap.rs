//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMObject,
    unsafe inherits = [
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMNamedNodeMap")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMNamedNodeMap;
}

#[cfg(feature = "WebKit_DOMNamedNodeMap")]
unsafe impl NSObjectProtocol for DOMNamedNodeMap {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMNamedNodeMap")]
    #[deprecated]
    pub type DOMNamedNodeMap;

    #[objc2::method(sel = "length")]
    pub unsafe fn length(&self) -> c_uint;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[objc2::method(sel = "getNamedItem:", managed = "Other")]
    pub unsafe fn getNamedItem(&self, name: Option<&NSString>) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "setNamedItem:", managed = "Other")]
    pub unsafe fn setNamedItem(&self, node: Option<&DOMNode>) -> Option<Id<DOMNode>>;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[objc2::method(sel = "removeNamedItem:", managed = "Other")]
    pub unsafe fn removeNamedItem(&self, name: Option<&NSString>) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "item:", managed = "Other")]
    pub unsafe fn item(&self, index: c_uint) -> Option<Id<DOMNode>>;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[objc2::method(sel = "getNamedItemNS:localName:", managed = "Other")]
    pub unsafe fn getNamedItemNS_localName(
        &self,
        namespace_uri: Option<&NSString>,
        local_name: Option<&NSString>,
    ) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "setNamedItemNS:", managed = "Other")]
    pub unsafe fn setNamedItemNS(&self, node: Option<&DOMNode>) -> Option<Id<DOMNode>>;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[objc2::method(sel = "removeNamedItemNS:localName:", managed = "Other")]
    pub unsafe fn removeNamedItemNS_localName(
        &self,
        namespace_uri: Option<&NSString>,
        local_name: Option<&NSString>,
    ) -> Option<Id<DOMNode>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMNamedNodeMap")]
    pub type DOMNamedNodeMap;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[deprecated]
    #[objc2::method(sel = "getNamedItemNS::", managed = "Other")]
    pub unsafe fn getNamedItemNS(
        &self,
        namespace_uri: Option<&NSString>,
        local_name: Option<&NSString>,
    ) -> Option<Id<DOMNode>>;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[deprecated]
    #[objc2::method(sel = "removeNamedItemNS::", managed = "Other")]
    pub unsafe fn removeNamedItemNS(
        &self,
        namespace_uri: Option<&NSString>,
        local_name: Option<&NSString>,
    ) -> Option<Id<DOMNode>>;
}
