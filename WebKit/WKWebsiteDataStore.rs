//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKWebsiteDataStore")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WKWebsiteDataStore;
}

#[cfg(feature = "WebKit_WKWebsiteDataStore")]
unsafe impl NSCoding for WKWebsiteDataStore {}

#[cfg(feature = "WebKit_WKWebsiteDataStore")]
unsafe impl NSObjectProtocol for WKWebsiteDataStore {}

#[cfg(feature = "WebKit_WKWebsiteDataStore")]
unsafe impl NSSecureCoding for WKWebsiteDataStore {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKWebsiteDataStore")]
    pub type WKWebsiteDataStore;

    #[objc2::method(sel = "defaultDataStore", managed = "Other")]
    pub unsafe fn defaultDataStore() -> Id<WKWebsiteDataStore>;

    #[objc2::method(sel = "nonPersistentDataStore", managed = "Other")]
    pub unsafe fn nonPersistentDataStore() -> Id<WKWebsiteDataStore>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new(&self) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "isPersistent")]
    pub unsafe fn isPersistent(&self) -> bool;

    #[cfg(all(feature = "Foundation_NSSet", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "allWebsiteDataTypes", managed = "Other")]
    pub unsafe fn allWebsiteDataTypes() -> Id<NSSet<NSString>>;

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSSet",
        feature = "Foundation_NSString",
        feature = "WebKit_WKWebsiteDataRecord"
    ))]
    #[objc2::method(sel = "fetchDataRecordsOfTypes:completionHandler:")]
    pub unsafe fn fetchDataRecordsOfTypes_completionHandler(
        &self,
        data_types: &NSSet<NSString>,
        completion_handler: &Block<(NonNull<NSArray<WKWebsiteDataRecord>>,), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "Foundation_NSSet",
        feature = "Foundation_NSString",
        feature = "WebKit_WKWebsiteDataRecord"
    ))]
    #[objc2::method(sel = "removeDataOfTypes:forDataRecords:completionHandler:")]
    pub unsafe fn removeDataOfTypes_forDataRecords_completionHandler(
        &self,
        data_types: &NSSet<NSString>,
        data_records: &NSArray<WKWebsiteDataRecord>,
        completion_handler: &Block<(), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSDate",
        feature = "Foundation_NSSet",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "removeDataOfTypes:modifiedSince:completionHandler:")]
    pub unsafe fn removeDataOfTypes_modifiedSince_completionHandler(
        &self,
        data_types: &NSSet<NSString>,
        date: &NSDate,
        completion_handler: &Block<(), ()>,
    );

    #[cfg(feature = "WebKit_WKHTTPCookieStore")]
    #[objc2::method(sel = "httpCookieStore", managed = "Other")]
    pub unsafe fn httpCookieStore(&self) -> Id<WKHTTPCookieStore>;
}
