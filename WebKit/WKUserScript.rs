//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum WKUserScriptInjectionTime {
    WKUserScriptInjectionTimeAtDocumentStart = 0,
    WKUserScriptInjectionTimeAtDocumentEnd = 1,
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKUserScript")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WKUserScript;
}

#[cfg(feature = "WebKit_WKUserScript")]
unsafe impl NSObjectProtocol for WKUserScript {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKUserScript")]
    pub type WKUserScript;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "source", managed = "Other")]
    pub unsafe fn source(&self) -> Id<NSString>;

    #[objc2::method(sel = "injectionTime")]
    pub unsafe fn injectionTime(&self) -> WKUserScriptInjectionTime;

    #[objc2::method(sel = "isForMainFrameOnly")]
    pub unsafe fn isForMainFrameOnly(&self) -> bool;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(
        sel = "initWithSource:injectionTime:forMainFrameOnly:",
        managed = "Init"
    )]
    pub unsafe fn initWithSource_injectionTime_forMainFrameOnly(
        this: Option<Allocated<Self>>,
        source: &NSString,
        injection_time: WKUserScriptInjectionTime,
        for_main_frame_only: bool,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_WKContentWorld"))]
    #[objc2::method(
        sel = "initWithSource:injectionTime:forMainFrameOnly:inContentWorld:",
        managed = "Init"
    )]
    pub unsafe fn initWithSource_injectionTime_forMainFrameOnly_inContentWorld(
        this: Option<Allocated<Self>>,
        source: &NSString,
        injection_time: WKUserScriptInjectionTime,
        for_main_frame_only: bool,
        content_world: &WKContentWorld,
    ) -> Id<Self>;
}
