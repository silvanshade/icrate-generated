//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMNode")]
    pub type DOMNode;

    #[cfg(feature = "WebKit_WebArchive")]
    #[objc2::method(sel = "webArchive", managed = "Other")]
    pub unsafe fn webArchive(&self) -> Option<Id<WebArchive>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMDocument")]
    pub type DOMDocument;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "webFrame", managed = "Other")]
    pub unsafe fn webFrame(&self) -> Option<Id<WebFrame>>;

    #[cfg(all(feature = "Foundation_NSString", feature = "Foundation_NSURL"))]
    #[objc2::method(sel = "URLWithAttributeString:", managed = "Other")]
    pub unsafe fn URLWithAttributeString(&self, string: Option<&NSString>) -> Option<Id<NSURL>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMRange")]
    pub type DOMRange;

    #[cfg(feature = "WebKit_WebArchive")]
    #[objc2::method(sel = "webArchive", managed = "Other")]
    pub unsafe fn webArchive(&self) -> Option<Id<WebArchive>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "markupString", managed = "Other")]
    pub unsafe fn markupString(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLFrameElement")]
    pub type DOMHTMLFrameElement;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "contentFrame", managed = "Other")]
    pub unsafe fn contentFrame(&self) -> Option<Id<WebFrame>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLIFrameElement")]
    pub type DOMHTMLIFrameElement;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "contentFrame", managed = "Other")]
    pub unsafe fn contentFrame(&self) -> Option<Id<WebFrame>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLObjectElement")]
    pub type DOMHTMLObjectElement;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "contentFrame", managed = "Other")]
    pub unsafe fn contentFrame(&self) -> Option<Id<WebFrame>>;
}
