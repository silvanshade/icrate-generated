//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

extern_static!(WebHistoryItemChangedNotification: Option<&'static NSString>);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_WebHistoryItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WebHistoryItem;
}

#[cfg(feature = "WebKit_WebHistoryItem")]
unsafe impl NSObjectProtocol for WebHistoryItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebHistoryItem")]
    #[deprecated]
    pub type WebHistoryItem;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(
        sel = "initWithURLString:title:lastVisitedTimeInterval:",
        managed = "Init"
    )]
    pub unsafe fn initWithURLString_title_lastVisitedTimeInterval(
        this: Option<Allocated<Self>>,
        url_string: Option<&NSString>,
        title: Option<&NSString>,
        time: NSTimeInterval,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "originalURLString", managed = "Other")]
    pub unsafe fn originalURLString(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "URLString", managed = "Other")]
    pub unsafe fn URLString(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "title", managed = "Other")]
    pub unsafe fn title(&self) -> Id<NSString>;

    #[objc2::method(sel = "lastVisitedTimeInterval")]
    pub unsafe fn lastVisitedTimeInterval(&self) -> NSTimeInterval;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "alternateTitle", managed = "Other")]
    pub unsafe fn alternateTitle(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setAlternateTitle:")]
    pub unsafe fn setAlternateTitle(&self, alternate_title: Option<&NSString>);

    #[cfg(feature = "AppKit_NSImage")]
    #[objc2::method(sel = "icon", managed = "Other")]
    pub unsafe fn icon(&self) -> Option<Id<NSImage>>;
}
