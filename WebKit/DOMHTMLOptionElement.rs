//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLOptionElement;
}

#[cfg(feature = "WebKit_DOMHTMLOptionElement")]
unsafe impl DOMEventTarget for DOMHTMLOptionElement {}

#[cfg(feature = "WebKit_DOMHTMLOptionElement")]
unsafe impl NSObjectProtocol for DOMHTMLOptionElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    #[deprecated]
    pub type DOMHTMLOptionElement;

    #[objc2::method(sel = "disabled")]
    pub unsafe fn disabled(&self) -> bool;

    #[objc2::method(sel = "setDisabled:")]
    pub unsafe fn setDisabled(&self, disabled: bool);

    #[cfg(feature = "WebKit_DOMHTMLFormElement")]
    #[objc2::method(sel = "form", managed = "Other")]
    pub unsafe fn form(&self) -> Option<Id<DOMHTMLFormElement>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setLabel:")]
    pub unsafe fn setLabel(&self, label: Option<&NSString>);

    #[objc2::method(sel = "defaultSelected")]
    pub unsafe fn defaultSelected(&self) -> bool;

    #[objc2::method(sel = "setDefaultSelected:")]
    pub unsafe fn setDefaultSelected(&self, default_selected: bool);

    #[objc2::method(sel = "selected")]
    pub unsafe fn selected(&self) -> bool;

    #[objc2::method(sel = "setSelected:")]
    pub unsafe fn setSelected(&self, selected: bool);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "value", managed = "Other")]
    pub unsafe fn value(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "text", managed = "Other")]
    pub unsafe fn text(&self) -> Id<NSString>;

    #[objc2::method(sel = "index")]
    pub unsafe fn index(&self) -> c_int;
}
