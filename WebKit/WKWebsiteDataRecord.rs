//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

extern_static!(WKWebsiteDataTypeFetchCache: &'static NSString);

extern_static!(WKWebsiteDataTypeDiskCache: &'static NSString);

extern_static!(WKWebsiteDataTypeMemoryCache: &'static NSString);

extern_static!(WKWebsiteDataTypeOfflineWebApplicationCache: &'static NSString);

extern_static!(WKWebsiteDataTypeCookies: &'static NSString);

extern_static!(WKWebsiteDataTypeSessionStorage: &'static NSString);

extern_static!(WKWebsiteDataTypeLocalStorage: &'static NSString);

extern_static!(WKWebsiteDataTypeWebSQLDatabases: &'static NSString);

extern_static!(WKWebsiteDataTypeIndexedDBDatabases: &'static NSString);

extern_static!(WKWebsiteDataTypeServiceWorkerRegistrations: &'static NSString);

extern_static!(WKWebsiteDataTypeFileSystem: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKWebsiteDataRecord")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WKWebsiteDataRecord;
}

#[cfg(feature = "WebKit_WKWebsiteDataRecord")]
unsafe impl NSObjectProtocol for WKWebsiteDataRecord {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKWebsiteDataRecord")]
    pub type WKWebsiteDataRecord;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "displayName", managed = "Other")]
    pub unsafe fn displayName(&self) -> Id<NSString>;

    #[cfg(all(feature = "Foundation_NSSet", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "dataTypes", managed = "Other")]
    pub unsafe fn dataTypes(&self) -> Id<NSSet<NSString>>;
}
