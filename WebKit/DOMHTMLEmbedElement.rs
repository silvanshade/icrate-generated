//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLEmbedElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLEmbedElement;
}

#[cfg(feature = "WebKit_DOMHTMLEmbedElement")]
unsafe impl DOMEventTarget for DOMHTMLEmbedElement {}

#[cfg(feature = "WebKit_DOMHTMLEmbedElement")]
unsafe impl NSObjectProtocol for DOMHTMLEmbedElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLEmbedElement")]
    #[deprecated]
    pub type DOMHTMLEmbedElement;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "align", managed = "Other")]
    pub unsafe fn align(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setAlign:")]
    pub unsafe fn setAlign(&self, align: Option<&NSString>);

    #[objc2::method(sel = "height")]
    pub unsafe fn height(&self) -> c_int;

    #[objc2::method(sel = "setHeight:")]
    pub unsafe fn setHeight(&self, height: c_int);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "src", managed = "Other")]
    pub unsafe fn src(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSrc:")]
    pub unsafe fn setSrc(&self, src: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "type", managed = "Other")]
    pub unsafe fn r#type(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setType:")]
    pub unsafe fn setType(&self, r#type: Option<&NSString>);

    #[objc2::method(sel = "width")]
    pub unsafe fn width(&self) -> c_int;

    #[objc2::method(sel = "setWidth:")]
    pub unsafe fn setWidth(&self, width: c_int);
}
