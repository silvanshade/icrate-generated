//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLButtonElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLButtonElement;
}

#[cfg(feature = "WebKit_DOMHTMLButtonElement")]
unsafe impl DOMEventTarget for DOMHTMLButtonElement {}

#[cfg(feature = "WebKit_DOMHTMLButtonElement")]
unsafe impl NSObjectProtocol for DOMHTMLButtonElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLButtonElement")]
    #[deprecated]
    pub type DOMHTMLButtonElement;

    #[objc2::method(sel = "autofocus")]
    pub unsafe fn autofocus(&self) -> bool;

    #[objc2::method(sel = "setAutofocus:")]
    pub unsafe fn setAutofocus(&self, autofocus: bool);

    #[objc2::method(sel = "disabled")]
    pub unsafe fn disabled(&self) -> bool;

    #[objc2::method(sel = "setDisabled:")]
    pub unsafe fn setDisabled(&self, disabled: bool);

    #[cfg(feature = "WebKit_DOMHTMLFormElement")]
    #[objc2::method(sel = "form", managed = "Other")]
    pub unsafe fn form(&self) -> Option<Id<DOMHTMLFormElement>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "type", managed = "Other")]
    pub unsafe fn r#type(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setType:")]
    pub unsafe fn setType(&self, r#type: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "name", managed = "Other")]
    pub unsafe fn name(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setName:")]
    pub unsafe fn setName(&self, name: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "value", managed = "Other")]
    pub unsafe fn value(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: Option<&NSString>);

    #[objc2::method(sel = "willValidate")]
    pub unsafe fn willValidate(&self) -> bool;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated]
    #[objc2::method(sel = "accessKey", managed = "Other")]
    pub unsafe fn accessKey(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated]
    #[objc2::method(sel = "setAccessKey:")]
    pub unsafe fn setAccessKey(&self, access_key: Option<&NSString>);

    #[objc2::method(sel = "click")]
    pub unsafe fn click(&self);
}
