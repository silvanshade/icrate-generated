//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[extern_enum]
#[underlying(c_uint)]
#[deprecated]
pub enum __anonymous__ {
    #[deprecated]
    DOM_MODIFICATION = 1,
    #[deprecated]
    DOM_ADDITION = 2,
    #[deprecated]
    DOM_REMOVAL = 3,
}

#[objc2::interface(
    unsafe super = DOMEvent,
    unsafe inherits = [
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMMutationEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMMutationEvent;
}

#[cfg(feature = "WebKit_DOMMutationEvent")]
unsafe impl NSObjectProtocol for DOMMutationEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMMutationEvent")]
    #[deprecated]
    pub type DOMMutationEvent;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "relatedNode", managed = "Other")]
    pub unsafe fn relatedNode(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "prevValue", managed = "Other")]
    pub unsafe fn prevValue(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "attrName", managed = "Other")]
    pub unsafe fn attrName(&self) -> Id<NSString>;

    #[objc2::method(sel = "attrChange")]
    pub unsafe fn attrChange(&self) -> c_ushort;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[objc2::method(
        sel = "initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:"
    )]
    pub unsafe fn initMutationEvent_canBubble_cancelable_relatedNode_prevValue_newValue_attrName_attrChange(
        &self,
        r#type: Option<&NSString>,
        can_bubble: bool,
        cancelable: bool,
        related_node: Option<&DOMNode>,
        prev_value: Option<&NSString>,
        new_value: Option<&NSString>,
        attr_name: Option<&NSString>,
        attr_change: c_ushort,
    );
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMMutationEvent")]
    pub type DOMMutationEvent;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMNode"))]
    #[deprecated]
    #[objc2::method(sel = "initMutationEvent::::::::")]
    pub unsafe fn initMutationEvent(
        &self,
        r#type: Option<&NSString>,
        can_bubble: bool,
        cancelable: bool,
        related_node: Option<&DOMNode>,
        prev_value: Option<&NSString>,
        new_value: Option<&NSString>,
        attr_name: Option<&NSString>,
        attr_change: c_ushort,
    );
}
