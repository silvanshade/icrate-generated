//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = NSURLDownload,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_WebDownload")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WebDownload;
}

#[cfg(feature = "WebKit_WebDownload")]
unsafe impl NSObjectProtocol for WebDownload {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebDownload")]
    #[deprecated]
    pub type WebDownload;
}

#[objc2::protocol]
#[deprecated]
pub unsafe trait WebDownloadDelegate: NSURLDownloadDelegate {
    #[cfg(all(feature = "AppKit_NSWindow", feature = "WebKit_WebDownload"))]
    #[objc2::method(
        optional,
        sel = "downloadWindowForAuthenticationSheet:",
        managed = "Other"
    )]
    unsafe fn downloadWindowForAuthenticationSheet(
        &self,
        download: Option<&WebDownload>,
    ) -> Option<Id<NSWindow>>;
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSURLDownload`
    #[cfg(feature = "WebKit_WebDownload")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebDownload")]
    pub type WebDownload;

    #[cfg(feature = "Foundation_NSURLRequest")]
    #[deprecated = "Use NSURLSession downloadTask (see NSURLSession.h)"]
    #[objc2::method(sel = "initWithRequest:delegate:", managed = "Init")]
    pub unsafe fn initWithRequest_delegate(
        this: Option<Allocated<Self>>,
        request: &NSURLRequest,
        delegate: Option<&ProtocolObject<dyn NSURLDownloadDelegate>>,
    ) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSData", feature = "Foundation_NSString"))]
    #[deprecated = "Use NSURLSession downloadTask (see NSURLSession.h)"]
    #[objc2::method(sel = "initWithResumeData:delegate:path:", managed = "Init")]
    pub unsafe fn initWithResumeData_delegate_path(
        this: Option<Allocated<Self>>,
        resume_data: &NSData,
        delegate: Option<&ProtocolObject<dyn NSURLDownloadDelegate>>,
        path: &NSString,
    ) -> Id<Self>;
}
