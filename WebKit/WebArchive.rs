//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

extern_static!(WebArchivePboardType: Option<&'static NSString>);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_WebArchive")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WebArchive;
}

#[cfg(feature = "WebKit_WebArchive")]
unsafe impl NSCoding for WebArchive {}

#[cfg(feature = "WebKit_WebArchive")]
unsafe impl NSObjectProtocol for WebArchive {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebArchive")]
    #[deprecated]
    pub type WebArchive;

    #[cfg(all(feature = "Foundation_NSArray", feature = "WebKit_WebResource"))]
    #[objc2::method(
        sel = "initWithMainResource:subresources:subframeArchives:",
        managed = "Init"
    )]
    pub unsafe fn initWithMainResource_subresources_subframeArchives(
        this: Option<Allocated<Self>>,
        main_resource: Option<&WebResource>,
        subresources: Option<&NSArray>,
        subframe_archives: Option<&NSArray>,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "initWithData:", managed = "Init")]
    pub unsafe fn initWithData(
        this: Option<Allocated<Self>>,
        data: Option<&NSData>,
    ) -> Option<Id<Self>>;

    #[cfg(feature = "WebKit_WebResource")]
    #[objc2::method(sel = "mainResource", managed = "Other")]
    pub unsafe fn mainResource(&self) -> Option<Id<WebResource>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "subresources", managed = "Other")]
    pub unsafe fn subresources(&self) -> Id<NSArray>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "subframeArchives", managed = "Other")]
    pub unsafe fn subframeArchives(&self) -> Id<NSArray>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "data", managed = "Other")]
    pub unsafe fn data(&self) -> Id<NSData>;
}
