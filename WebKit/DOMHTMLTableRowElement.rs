//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMHTMLElement,
    unsafe inherits = [
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMHTMLTableRowElement")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMHTMLTableRowElement;
}

#[cfg(feature = "WebKit_DOMHTMLTableRowElement")]
unsafe impl DOMEventTarget for DOMHTMLTableRowElement {}

#[cfg(feature = "WebKit_DOMHTMLTableRowElement")]
unsafe impl NSObjectProtocol for DOMHTMLTableRowElement {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMHTMLTableRowElement")]
    #[deprecated]
    pub type DOMHTMLTableRowElement;

    #[objc2::method(sel = "rowIndex")]
    pub unsafe fn rowIndex(&self) -> c_int;

    #[objc2::method(sel = "sectionRowIndex")]
    pub unsafe fn sectionRowIndex(&self) -> c_int;

    #[cfg(feature = "WebKit_DOMHTMLCollection")]
    #[objc2::method(sel = "cells", managed = "Other")]
    pub unsafe fn cells(&self) -> Option<Id<DOMHTMLCollection>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "align", managed = "Other")]
    pub unsafe fn align(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setAlign:")]
    pub unsafe fn setAlign(&self, align: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "bgColor", managed = "Other")]
    pub unsafe fn bgColor(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setBgColor:")]
    pub unsafe fn setBgColor(&self, bg_color: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "ch", managed = "Other")]
    pub unsafe fn ch(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCh:")]
    pub unsafe fn setCh(&self, ch: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "chOff", managed = "Other")]
    pub unsafe fn chOff(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setChOff:")]
    pub unsafe fn setChOff(&self, ch_off: Option<&NSString>);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "vAlign", managed = "Other")]
    pub unsafe fn vAlign(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setVAlign:")]
    pub unsafe fn setVAlign(&self, v_align: Option<&NSString>);

    #[objc2::method(sel = "insertCell:", managed = "Other")]
    pub unsafe fn insertCell(&self, index: c_int) -> Option<Id<DOMHTMLElement>>;

    #[objc2::method(sel = "deleteCell:")]
    pub unsafe fn deleteCell(&self, index: c_int);
}
