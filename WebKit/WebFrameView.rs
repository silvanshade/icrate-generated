//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = NSView,
    unsafe inherits = [
        NSResponder,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_WebFrameView")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WebFrameView;
}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSAccessibility for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSAccessibilityElementProtocol for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSAnimatablePropertyContainer for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSAppearanceCustomization for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSCoding for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSDraggingDestination for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSObjectProtocol for WebFrameView {}

#[cfg(feature = "WebKit_WebFrameView")]
unsafe impl NSUserInterfaceItemIdentification for WebFrameView {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebFrameView")]
    #[deprecated]
    pub type WebFrameView;

    #[cfg(feature = "WebKit_WebFrame")]
    #[objc2::method(sel = "webFrame", managed = "Other")]
    pub unsafe fn webFrame(&self) -> Option<Id<WebFrame>>;

    #[objc2::method(sel = "documentView", managed = "Other")]
    pub unsafe fn documentView(&self) -> Option<Id<NSView>>;

    #[objc2::method(sel = "allowsScrolling")]
    pub unsafe fn allowsScrolling(&self) -> bool;

    #[objc2::method(sel = "setAllowsScrolling:")]
    pub unsafe fn setAllowsScrolling(&self, allows_scrolling: bool);

    #[objc2::method(sel = "canPrintHeadersAndFooters")]
    pub unsafe fn canPrintHeadersAndFooters(&self) -> bool;

    #[cfg(all(feature = "AppKit_NSPrintInfo", feature = "AppKit_NSPrintOperation"))]
    #[objc2::method(sel = "printOperationWithPrintInfo:", managed = "Other")]
    pub unsafe fn printOperationWithPrintInfo(
        &self,
        print_info: Option<&NSPrintInfo>,
    ) -> Option<Id<NSPrintOperation>>;

    #[objc2::method(sel = "documentViewShouldHandlePrint")]
    pub unsafe fn documentViewShouldHandlePrint(&self) -> bool;

    #[objc2::method(sel = "printDocumentView")]
    pub unsafe fn printDocumentView(&self);
}

#[objc2::interface(
    unsafe continue,
    impl_attrs = {
        /// Methods declared on superclass `NSView`
    #[cfg(feature = "WebKit_WebFrameView")]
    }
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WebFrameView")]
    pub type WebFrameView;

    #[objc2::method(sel = "initWithFrame:", managed = "Init")]
    pub unsafe fn initWithFrame(this: Option<Allocated<Self>>, frame_rect: NSRect) -> Id<Self>;
}
