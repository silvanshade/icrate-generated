//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMEvent,
    unsafe inherits = [
        DOMObject,
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMUIEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMUIEvent;
}

#[cfg(feature = "WebKit_DOMUIEvent")]
unsafe impl NSObjectProtocol for DOMUIEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMUIEvent")]
    #[deprecated]
    pub type DOMUIEvent;

    #[cfg(feature = "WebKit_DOMAbstractView")]
    #[objc2::method(sel = "view", managed = "Other")]
    pub unsafe fn view(&self) -> Option<Id<DOMAbstractView>>;

    #[objc2::method(sel = "detail")]
    pub unsafe fn detail(&self) -> c_int;

    #[objc2::method(sel = "keyCode")]
    pub unsafe fn keyCode(&self) -> c_int;

    #[objc2::method(sel = "charCode")]
    pub unsafe fn charCode(&self) -> c_int;

    #[deprecated]
    #[objc2::method(sel = "layerX")]
    pub unsafe fn layerX(&self) -> c_int;

    #[deprecated]
    #[objc2::method(sel = "layerY")]
    pub unsafe fn layerY(&self) -> c_int;

    #[objc2::method(sel = "pageX")]
    pub unsafe fn pageX(&self) -> c_int;

    #[objc2::method(sel = "pageY")]
    pub unsafe fn pageY(&self) -> c_int;

    #[objc2::method(sel = "which")]
    pub unsafe fn which(&self) -> c_int;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMAbstractView"))]
    #[objc2::method(sel = "initUIEvent:canBubble:cancelable:view:detail:")]
    pub unsafe fn initUIEvent_canBubble_cancelable_view_detail(
        &self,
        r#type: Option<&NSString>,
        can_bubble: bool,
        cancelable: bool,
        view: Option<&DOMAbstractView>,
        detail: c_int,
    );
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMUIEvent")]
    pub type DOMUIEvent;

    #[cfg(all(feature = "Foundation_NSString", feature = "WebKit_DOMAbstractView"))]
    #[deprecated]
    #[objc2::method(sel = "initUIEvent:::::")]
    pub unsafe fn initUIEvent(
        &self,
        r#type: Option<&NSString>,
        can_bubble: bool,
        cancelable: bool,
        view: Option<&DOMAbstractView>,
        detail: c_int,
    );
}
