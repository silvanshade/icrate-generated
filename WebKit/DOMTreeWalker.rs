//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMObject,
    unsafe inherits = [
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMTreeWalker")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMTreeWalker;
}

#[cfg(feature = "WebKit_DOMTreeWalker")]
unsafe impl NSObjectProtocol for DOMTreeWalker {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMTreeWalker")]
    #[deprecated]
    pub type DOMTreeWalker;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "root", managed = "Other")]
    pub unsafe fn root(&self) -> Option<Id<DOMNode>>;

    #[objc2::method(sel = "whatToShow")]
    pub unsafe fn whatToShow(&self) -> c_uint;

    #[objc2::method(sel = "filter", managed = "Other")]
    pub unsafe fn filter(&self) -> Option<Id<ProtocolObject<dyn DOMNodeFilter>>>;

    #[objc2::method(sel = "expandEntityReferences")]
    pub unsafe fn expandEntityReferences(&self) -> bool;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "currentNode", managed = "Other")]
    pub unsafe fn currentNode(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "setCurrentNode:")]
    pub unsafe fn setCurrentNode(&self, current_node: Option<&DOMNode>);

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "parentNode", managed = "Other")]
    pub unsafe fn parentNode(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "firstChild", managed = "Other")]
    pub unsafe fn firstChild(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "lastChild", managed = "Other")]
    pub unsafe fn lastChild(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "previousSibling", managed = "Other")]
    pub unsafe fn previousSibling(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "nextSibling", managed = "Other")]
    pub unsafe fn nextSibling(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "previousNode", managed = "Other")]
    pub unsafe fn previousNode(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "nextNode", managed = "Other")]
    pub unsafe fn nextNode(&self) -> Option<Id<DOMNode>>;
}
