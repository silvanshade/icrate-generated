//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKDownload")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type WKDownload;
}

#[cfg(feature = "WebKit_WKDownload")]
unsafe impl NSObjectProtocol for WKDownload {}

#[cfg(feature = "WebKit_WKDownload")]
unsafe impl NSProgressReporting for WKDownload {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_WKDownload")]
    pub type WKDownload;

    #[cfg(feature = "Foundation_NSURLRequest")]
    #[objc2::method(sel = "originalRequest", managed = "Other")]
    pub unsafe fn originalRequest(&self) -> Option<Id<NSURLRequest>>;

    #[cfg(feature = "WebKit_WKWebView")]
    #[objc2::method(sel = "webView", managed = "Other")]
    pub unsafe fn webView(&self) -> Option<Id<WKWebView>>;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn WKDownloadDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(&self, delegate: Option<&ProtocolObject<dyn WKDownloadDelegate>>);

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "cancel:")]
    pub unsafe fn cancel(&self, completion_handler: Option<&Block<(*mut NSData,), ()>>);
}
