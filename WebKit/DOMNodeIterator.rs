//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

#[objc2::interface(
    unsafe super = DOMObject,
    unsafe inherits = [
        WebScriptObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[deprecated]
    #[cfg(feature = "WebKit_DOMNodeIterator")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type DOMNodeIterator;
}

#[cfg(feature = "WebKit_DOMNodeIterator")]
unsafe impl NSObjectProtocol for DOMNodeIterator {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "WebKit_DOMNodeIterator")]
    #[deprecated]
    pub type DOMNodeIterator;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "root", managed = "Other")]
    pub unsafe fn root(&self) -> Option<Id<DOMNode>>;

    #[objc2::method(sel = "whatToShow")]
    pub unsafe fn whatToShow(&self) -> c_uint;

    #[objc2::method(sel = "filter", managed = "Other")]
    pub unsafe fn filter(&self) -> Option<Id<ProtocolObject<dyn DOMNodeFilter>>>;

    #[objc2::method(sel = "expandEntityReferences")]
    pub unsafe fn expandEntityReferences(&self) -> bool;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "referenceNode", managed = "Other")]
    pub unsafe fn referenceNode(&self) -> Option<Id<DOMNode>>;

    #[objc2::method(sel = "pointerBeforeReferenceNode")]
    pub unsafe fn pointerBeforeReferenceNode(&self) -> bool;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "nextNode", managed = "Other")]
    pub unsafe fn nextNode(&self) -> Option<Id<DOMNode>>;

    #[cfg(feature = "WebKit_DOMNode")]
    #[objc2::method(sel = "previousNode", managed = "Other")]
    pub unsafe fn previousNode(&self) -> Option<Id<DOMNode>>;

    #[objc2::method(sel = "detach")]
    pub unsafe fn detach(&self);
}
