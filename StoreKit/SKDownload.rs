//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::StoreKit::*;

#[ns_closed_enum]
#[underlying(NSInteger)]
#[deprecated = "Hosted content is no longer supported"]
pub enum SKDownloadState {
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStateWaiting = 0,
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStateActive = 1,
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStatePaused = 2,
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStateFinished = 3,
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStateFailed = 4,
    #[deprecated = "Hosted content is no longer supported"]
    SKDownloadStateCancelled = 5,
}

extern_static!(SKDownloadTimeRemainingUnknown: NSTimeInterval);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[deprecated = "Hosted content is no longer supported"]
    #[cfg(feature = "StoreKit_SKDownload")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type SKDownload;
}

#[cfg(feature = "StoreKit_SKDownload")]
unsafe impl NSObjectProtocol for SKDownload {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "StoreKit_SKDownload")]
    #[deprecated = "Hosted content is no longer supported"]
    pub type SKDownload;

    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "state")]
    pub unsafe fn state(&self) -> SKDownloadState;

    #[deprecated]
    #[objc2::method(sel = "downloadState")]
    pub unsafe fn downloadState(&self) -> SKDownloadState;

    #[cfg(feature = "Foundation_NSNumber")]
    #[deprecated]
    #[objc2::method(sel = "contentLength", managed = "Other")]
    pub unsafe fn contentLength(&self) -> Id<NSNumber>;

    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "expectedContentLength")]
    pub unsafe fn expectedContentLength(&self) -> c_longlong;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "contentIdentifier", managed = "Other")]
    pub unsafe fn contentIdentifier(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSURL")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "contentURL", managed = "Other")]
    pub unsafe fn contentURL(&self) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "contentVersion", managed = "Other")]
    pub unsafe fn contentVersion(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSError")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "error", managed = "Other")]
    pub unsafe fn error(&self) -> Option<Id<NSError>>;

    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "progress")]
    pub unsafe fn progress(&self) -> c_float;

    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "timeRemaining")]
    pub unsafe fn timeRemaining(&self) -> NSTimeInterval;

    #[cfg(feature = "StoreKit_SKPaymentTransaction")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "transaction", managed = "Other")]
    pub unsafe fn transaction(&self) -> Id<SKPaymentTransaction>;

    #[cfg(all(feature = "Foundation_NSString", feature = "Foundation_NSURL"))]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "contentURLForProductID:", managed = "Other")]
    pub unsafe fn contentURLForProductID(product_id: &NSString) -> Option<Id<NSURL>>;

    #[cfg(feature = "Foundation_NSString")]
    #[deprecated = "Hosted content is no longer supported"]
    #[objc2::method(sel = "deleteContentForProductID:")]
    pub unsafe fn deleteContentForProductID(product_id: &NSString);
}
