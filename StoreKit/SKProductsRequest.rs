//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::StoreKit::*;

#[objc2::protocol]
pub unsafe trait SKProductsRequestDelegate: SKRequestDelegate {
    #[cfg(all(
        feature = "StoreKit_SKProductsRequest",
        feature = "StoreKit_SKProductsResponse"
    ))]
    #[objc2::method(sel = "productsRequest:didReceiveResponse:")]
    unsafe fn productsRequest_didReceiveResponse(
        &self,
        request: &SKProductsRequest,
        response: &SKProductsResponse,
    );
}

#[objc2::interface(
    unsafe super = SKRequest,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "StoreKit_SKProductsRequest")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type SKProductsRequest;
}

#[cfg(feature = "StoreKit_SKProductsRequest")]
unsafe impl NSObjectProtocol for SKProductsRequest {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "StoreKit_SKProductsRequest")]
    pub type SKProductsRequest;

    #[cfg(all(feature = "Foundation_NSSet", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "initWithProductIdentifiers:", managed = "Init")]
    pub unsafe fn initWithProductIdentifiers(
        this: Option<Allocated<Self>>,
        product_identifiers: &NSSet<NSString>,
    ) -> Id<Self>;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn SKProductsRequestDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(
        &self,
        delegate: Option<&ProtocolObject<dyn SKProductsRequestDelegate>>,
    );
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "StoreKit_SKProductsResponse")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type SKProductsResponse;
}

#[cfg(feature = "StoreKit_SKProductsResponse")]
unsafe impl NSObjectProtocol for SKProductsResponse {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "StoreKit_SKProductsResponse")]
    pub type SKProductsResponse;

    #[cfg(all(feature = "Foundation_NSArray", feature = "StoreKit_SKProduct"))]
    #[objc2::method(sel = "products", managed = "Other")]
    pub unsafe fn products(&self) -> Id<NSArray<SKProduct>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "invalidProductIdentifiers", managed = "Other")]
    pub unsafe fn invalidProductIdentifiers(&self) -> Id<NSArray<NSString>>;
}
