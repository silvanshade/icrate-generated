//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::IdentityLookup::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "IdentityLookup_ILClassificationResponse")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ILClassificationResponse;
}

#[cfg(feature = "IdentityLookup_ILClassificationResponse")]
unsafe impl NSCoding for ILClassificationResponse {}

#[cfg(feature = "IdentityLookup_ILClassificationResponse")]
unsafe impl NSObjectProtocol for ILClassificationResponse {}

#[cfg(feature = "IdentityLookup_ILClassificationResponse")]
unsafe impl NSSecureCoding for ILClassificationResponse {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "IdentityLookup_ILClassificationResponse")]
    pub type ILClassificationResponse;

    #[objc2::method(sel = "action")]
    pub unsafe fn action(&self) -> ILClassificationAction;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "userString", managed = "Other")]
    pub unsafe fn userString(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setUserString:")]
    pub unsafe fn setUserString(&self, user_string: Option<&NSString>);

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "userInfo", managed = "Other")]
    pub unsafe fn userInfo(&self) -> Option<Id<NSDictionary<NSString, Object>>>;

    #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "setUserInfo:")]
    pub unsafe fn setUserInfo(&self, user_info: Option<&NSDictionary<NSString, Object>>);

    #[objc2::method(sel = "initWithClassificationAction:", managed = "Init")]
    pub unsafe fn initWithClassificationAction(
        this: Option<Allocated<Self>>,
        action: ILClassificationAction,
    ) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
