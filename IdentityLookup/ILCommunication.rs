//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::IdentityLookup::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "IdentityLookup_ILCommunication")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type ILCommunication;
}

#[cfg(feature = "IdentityLookup_ILCommunication")]
unsafe impl NSCoding for ILCommunication {}

#[cfg(feature = "IdentityLookup_ILCommunication")]
unsafe impl NSObjectProtocol for ILCommunication {}

#[cfg(feature = "IdentityLookup_ILCommunication")]
unsafe impl NSSecureCoding for ILCommunication {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "IdentityLookup_ILCommunication")]
    pub type ILCommunication;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "sender", managed = "Other")]
    pub unsafe fn sender(&self) -> Option<Id<NSString>>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "dateReceived", managed = "Other")]
    pub unsafe fn dateReceived(&self) -> Id<NSDate>;

    #[objc2::method(sel = "isEqualToCommunication:")]
    pub unsafe fn isEqualToCommunication(&self, communication: &ILCommunication) -> bool;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
