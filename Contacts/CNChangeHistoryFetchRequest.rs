//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CNFetchRequest,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryFetchRequest")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryFetchRequest;
}

#[cfg(feature = "Contacts_CNChangeHistoryFetchRequest")]
unsafe impl NSCoding for CNChangeHistoryFetchRequest {}

#[cfg(feature = "Contacts_CNChangeHistoryFetchRequest")]
unsafe impl NSObjectProtocol for CNChangeHistoryFetchRequest {}

#[cfg(feature = "Contacts_CNChangeHistoryFetchRequest")]
unsafe impl NSSecureCoding for CNChangeHistoryFetchRequest {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryFetchRequest")]
    pub type CNChangeHistoryFetchRequest;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "startingToken", managed = "Other")]
    pub unsafe fn startingToken(&self) -> Option<Id<NSData>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "setStartingToken:")]
    pub unsafe fn setStartingToken(&self, starting_token: Option<&NSData>);

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "additionalContactKeyDescriptors", managed = "Other")]
    pub unsafe fn additionalContactKeyDescriptors(
        &self,
    ) -> Option<Id<NSArray<ProtocolObject<dyn CNKeyDescriptor>>>>;

    #[cfg(feature = "Foundation_NSArray")]
    #[objc2::method(sel = "setAdditionalContactKeyDescriptors:")]
    pub unsafe fn setAdditionalContactKeyDescriptors(
        &self,
        additional_contact_key_descriptors: Option<&NSArray<ProtocolObject<dyn CNKeyDescriptor>>>,
    );

    #[objc2::method(sel = "shouldUnifyResults")]
    pub unsafe fn shouldUnifyResults(&self) -> bool;

    #[objc2::method(sel = "setShouldUnifyResults:")]
    pub unsafe fn setShouldUnifyResults(&self, should_unify_results: bool);

    #[objc2::method(sel = "mutableObjects")]
    pub unsafe fn mutableObjects(&self) -> bool;

    #[objc2::method(sel = "setMutableObjects:")]
    pub unsafe fn setMutableObjects(&self, mutable_objects: bool);

    #[objc2::method(sel = "includeGroupChanges")]
    pub unsafe fn includeGroupChanges(&self) -> bool;

    #[objc2::method(sel = "setIncludeGroupChanges:")]
    pub unsafe fn setIncludeGroupChanges(&self, include_group_changes: bool);

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "excludedTransactionAuthors", managed = "Other")]
    pub unsafe fn excludedTransactionAuthors(&self) -> Option<Id<NSArray<NSString>>>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "setExcludedTransactionAuthors:")]
    pub unsafe fn setExcludedTransactionAuthors(
        &self,
        excluded_transaction_authors: Option<&NSArray<NSString>>,
    );
}
