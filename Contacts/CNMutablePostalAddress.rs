//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CNPostalAddress,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNMutablePostalAddress")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNMutablePostalAddress;
}

#[cfg(feature = "Contacts_CNMutablePostalAddress")]
unsafe impl NSCoding for CNMutablePostalAddress {}

#[cfg(feature = "Contacts_CNMutablePostalAddress")]
unsafe impl NSObjectProtocol for CNMutablePostalAddress {}

#[cfg(feature = "Contacts_CNMutablePostalAddress")]
unsafe impl NSSecureCoding for CNMutablePostalAddress {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNMutablePostalAddress")]
    pub type CNMutablePostalAddress;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "street", managed = "Other")]
    pub unsafe fn street(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setStreet:")]
    pub unsafe fn setStreet(&self, street: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subLocality", managed = "Other")]
    pub unsafe fn subLocality(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSubLocality:")]
    pub unsafe fn setSubLocality(&self, sub_locality: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "city", managed = "Other")]
    pub unsafe fn city(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCity:")]
    pub unsafe fn setCity(&self, city: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "subAdministrativeArea", managed = "Other")]
    pub unsafe fn subAdministrativeArea(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setSubAdministrativeArea:")]
    pub unsafe fn setSubAdministrativeArea(&self, sub_administrative_area: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "state", managed = "Other")]
    pub unsafe fn state(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setState:")]
    pub unsafe fn setState(&self, state: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "postalCode", managed = "Other")]
    pub unsafe fn postalCode(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPostalCode:")]
    pub unsafe fn setPostalCode(&self, postal_code: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "country", managed = "Other")]
    pub unsafe fn country(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setCountry:")]
    pub unsafe fn setCountry(&self, country: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "ISOCountryCode", managed = "Other")]
    pub unsafe fn ISOCountryCode(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setISOCountryCode:")]
    pub unsafe fn setISOCountryCode(&self, iso_country_code: &NSString);
}
