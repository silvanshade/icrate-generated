//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNContactVCardSerialization")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNContactVCardSerialization;
}

#[cfg(feature = "Contacts_CNContactVCardSerialization")]
unsafe impl NSObjectProtocol for CNContactVCardSerialization {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNContactVCardSerialization")]
    pub type CNContactVCardSerialization;

    #[objc2::method(sel = "descriptorForRequiredKeys", managed = "Other")]
    pub unsafe fn descriptorForRequiredKeys() -> Id<ProtocolObject<dyn CNKeyDescriptor>>;

    #[cfg(all(
        feature = "Contacts_CNContact",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSData",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "dataWithContacts:error:", managed = "Other", throws)]
    pub unsafe fn dataWithContacts_error(
        contacts: &NSArray<CNContact>,
    ) -> Result<Id<NSData>, Id<NSError>>;

    #[cfg(all(
        feature = "Contacts_CNContact",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSData",
        feature = "Foundation_NSError"
    ))]
    #[objc2::method(sel = "contactsWithData:error:", managed = "Other", throws)]
    pub unsafe fn contactsWithData_error(
        data: &NSData,
    ) -> Result<Id<NSArray<CNContact>>, Id<NSError>>;
}
