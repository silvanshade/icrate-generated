//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryEvent")]
unsafe impl NSCoding for CNChangeHistoryEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryEvent")]
    pub type CNChangeHistoryEvent;

    #[objc2::method(sel = "acceptEventVisitor:")]
    pub unsafe fn acceptEventVisitor(
        &self,
        visitor: &ProtocolObject<dyn CNChangeHistoryEventVisitor>,
    );
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryDropEverythingEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
unsafe impl NSCoding for CNChangeHistoryDropEverythingEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryDropEverythingEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryDropEverythingEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
    pub type CNChangeHistoryDropEverythingEvent;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryAddContactEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
unsafe impl NSCoding for CNChangeHistoryAddContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryAddContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryAddContactEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
    pub type CNChangeHistoryAddContactEvent;

    #[cfg(feature = "Contacts_CNContact")]
    #[objc2::method(sel = "contact", managed = "Other")]
    pub unsafe fn contact(&self) -> Id<CNContact>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "containerIdentifier", managed = "Other")]
    pub unsafe fn containerIdentifier(&self) -> Option<Id<NSString>>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryUpdateContactEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
unsafe impl NSCoding for CNChangeHistoryUpdateContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryUpdateContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryUpdateContactEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
    pub type CNChangeHistoryUpdateContactEvent;

    #[cfg(feature = "Contacts_CNContact")]
    #[objc2::method(sel = "contact", managed = "Other")]
    pub unsafe fn contact(&self) -> Id<CNContact>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryDeleteContactEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
unsafe impl NSCoding for CNChangeHistoryDeleteContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryDeleteContactEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryDeleteContactEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
    pub type CNChangeHistoryDeleteContactEvent;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "contactIdentifier", managed = "Other")]
    pub unsafe fn contactIdentifier(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryAddGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryAddGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryAddGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryAddGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
    pub type CNChangeHistoryAddGroupEvent;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "containerIdentifier", managed = "Other")]
    pub unsafe fn containerIdentifier(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryUpdateGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryUpdateGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryUpdateGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryUpdateGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
    pub type CNChangeHistoryUpdateGroupEvent;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryDeleteGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryDeleteGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryDeleteGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryDeleteGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
    pub type CNChangeHistoryDeleteGroupEvent;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "groupIdentifier", managed = "Other")]
    pub unsafe fn groupIdentifier(&self) -> Id<NSString>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryAddMemberToGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryAddMemberToGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryAddMemberToGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryAddMemberToGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
    pub type CNChangeHistoryAddMemberToGroupEvent;

    #[cfg(feature = "Contacts_CNContact")]
    #[objc2::method(sel = "member", managed = "Other")]
    pub unsafe fn member(&self) -> Id<CNContact>;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryRemoveMemberFromGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryRemoveMemberFromGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryRemoveMemberFromGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryRemoveMemberFromGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
    pub type CNChangeHistoryRemoveMemberFromGroupEvent;

    #[cfg(feature = "Contacts_CNContact")]
    #[objc2::method(sel = "member", managed = "Other")]
    pub unsafe fn member(&self) -> Id<CNContact>;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryAddSubgroupToGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryAddSubgroupToGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryAddSubgroupToGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryAddSubgroupToGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
    pub type CNChangeHistoryAddSubgroupToGroupEvent;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "subgroup", managed = "Other")]
    pub unsafe fn subgroup(&self) -> Id<CNGroup>;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;
}

#[objc2::interface(
    unsafe super = CNChangeHistoryEvent,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNChangeHistoryRemoveSubgroupFromGroupEvent;
}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
unsafe impl NSCoding for CNChangeHistoryRemoveSubgroupFromGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
unsafe impl NSObjectProtocol for CNChangeHistoryRemoveSubgroupFromGroupEvent {}

#[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
unsafe impl NSSecureCoding for CNChangeHistoryRemoveSubgroupFromGroupEvent {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
    pub type CNChangeHistoryRemoveSubgroupFromGroupEvent;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "subgroup", managed = "Other")]
    pub unsafe fn subgroup(&self) -> Id<CNGroup>;

    #[cfg(feature = "Contacts_CNGroup")]
    #[objc2::method(sel = "group", managed = "Other")]
    pub unsafe fn group(&self) -> Id<CNGroup>;
}

#[objc2::protocol]
pub unsafe trait CNChangeHistoryEventVisitor: NSObjectProtocol {
    #[cfg(feature = "Contacts_CNChangeHistoryDropEverythingEvent")]
    #[objc2::method(sel = "visitDropEverythingEvent:")]
    unsafe fn visitDropEverythingEvent(&self, event: &CNChangeHistoryDropEverythingEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryAddContactEvent")]
    #[objc2::method(sel = "visitAddContactEvent:")]
    unsafe fn visitAddContactEvent(&self, event: &CNChangeHistoryAddContactEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryUpdateContactEvent")]
    #[objc2::method(sel = "visitUpdateContactEvent:")]
    unsafe fn visitUpdateContactEvent(&self, event: &CNChangeHistoryUpdateContactEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryDeleteContactEvent")]
    #[objc2::method(sel = "visitDeleteContactEvent:")]
    unsafe fn visitDeleteContactEvent(&self, event: &CNChangeHistoryDeleteContactEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryAddGroupEvent")]
    #[objc2::method(optional, sel = "visitAddGroupEvent:")]
    unsafe fn visitAddGroupEvent(&self, event: &CNChangeHistoryAddGroupEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryUpdateGroupEvent")]
    #[objc2::method(optional, sel = "visitUpdateGroupEvent:")]
    unsafe fn visitUpdateGroupEvent(&self, event: &CNChangeHistoryUpdateGroupEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryDeleteGroupEvent")]
    #[objc2::method(optional, sel = "visitDeleteGroupEvent:")]
    unsafe fn visitDeleteGroupEvent(&self, event: &CNChangeHistoryDeleteGroupEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryAddMemberToGroupEvent")]
    #[objc2::method(optional, sel = "visitAddMemberToGroupEvent:")]
    unsafe fn visitAddMemberToGroupEvent(&self, event: &CNChangeHistoryAddMemberToGroupEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryRemoveMemberFromGroupEvent")]
    #[objc2::method(optional, sel = "visitRemoveMemberFromGroupEvent:")]
    unsafe fn visitRemoveMemberFromGroupEvent(
        &self,
        event: &CNChangeHistoryRemoveMemberFromGroupEvent,
    );

    #[cfg(feature = "Contacts_CNChangeHistoryAddSubgroupToGroupEvent")]
    #[objc2::method(optional, sel = "visitAddSubgroupToGroupEvent:")]
    unsafe fn visitAddSubgroupToGroupEvent(&self, event: &CNChangeHistoryAddSubgroupToGroupEvent);

    #[cfg(feature = "Contacts_CNChangeHistoryRemoveSubgroupFromGroupEvent")]
    #[objc2::method(optional, sel = "visitRemoveSubgroupFromGroupEvent:")]
    unsafe fn visitRemoveSubgroupFromGroupEvent(
        &self,
        event: &CNChangeHistoryRemoveSubgroupFromGroupEvent,
    );
}
