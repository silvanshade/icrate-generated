//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNLabeledValue")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNLabeledValue<ValueType: Message = Object, ValueTypeOwnership: Ownership = Shared>;
}

#[cfg(feature = "Contacts_CNLabeledValue")]
unsafe impl<ValueType: Message, ValueTypeOwnership: Ownership> NSCoding
    for CNLabeledValue<ValueType, ValueTypeOwnership>
{
}

#[cfg(feature = "Contacts_CNLabeledValue")]
unsafe impl<ValueType: Message, ValueTypeOwnership: Ownership> NSObjectProtocol
    for CNLabeledValue<ValueType, ValueTypeOwnership>
{
}

#[cfg(feature = "Contacts_CNLabeledValue")]
unsafe impl<ValueType: Message, ValueTypeOwnership: Ownership> NSSecureCoding
    for CNLabeledValue<ValueType, ValueTypeOwnership>
{
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNLabeledValue")]
    pub type CNLabeledValue<ValueType: Message = Object, ValueTypeOwnership: Ownership = Shared>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "identifier", managed = "Other")]
    pub unsafe fn identifier(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "label", managed = "Other")]
    pub unsafe fn label(&self) -> Option<Id<NSString>>;

    #[objc2::method(sel = "value", managed = "Other")]
    pub unsafe fn value(&self) -> Id<ValueType, ValueTypeOwnership>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "labeledValueWithLabel:value:", managed = "Other")]
    pub unsafe fn labeledValueWithLabel_value(
        label: Option<&NSString>,
        value: &ValueType,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithLabel:value:", managed = "Init")]
    pub unsafe fn initWithLabel_value(
        this: Option<Allocated<Self>>,
        label: Option<&NSString>,
        value: &ValueType,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "labeledValueBySettingLabel:", managed = "Other")]
    pub unsafe fn labeledValueBySettingLabel(&self, label: Option<&NSString>) -> Id<Self>;

    #[objc2::method(sel = "labeledValueBySettingValue:", managed = "Other")]
    pub unsafe fn labeledValueBySettingValue(&self, value: &ValueType) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "labeledValueBySettingLabel:value:", managed = "Other")]
    pub unsafe fn labeledValueBySettingLabel_value(
        &self,
        label: Option<&NSString>,
        value: &ValueType,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "localizedStringForLabel:", managed = "Other")]
    pub unsafe fn localizedStringForLabel(label: &NSString) -> Id<NSString>;
}

extern_static!(CNLabelHome: &'static NSString);

extern_static!(CNLabelWork: &'static NSString);

extern_static!(CNLabelSchool: &'static NSString);

extern_static!(CNLabelOther: &'static NSString);

extern_static!(CNLabelEmailiCloud: &'static NSString);

extern_static!(CNLabelURLAddressHomePage: &'static NSString);

extern_static!(CNLabelDateAnniversary: &'static NSString);
