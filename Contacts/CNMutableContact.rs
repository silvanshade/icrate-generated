//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CNContact,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNMutableContact")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CNMutableContact;
}

#[cfg(feature = "Contacts_CNMutableContact")]
unsafe impl NSCoding for CNMutableContact {}

#[cfg(feature = "Contacts_CNMutableContact")]
unsafe impl NSObjectProtocol for CNMutableContact {}

#[cfg(feature = "Contacts_CNMutableContact")]
unsafe impl NSSecureCoding for CNMutableContact {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "Contacts_CNMutableContact")]
    pub type CNMutableContact;

    #[objc2::method(sel = "contactType")]
    pub unsafe fn contactType(&self) -> CNContactType;

    #[objc2::method(sel = "setContactType:")]
    pub unsafe fn setContactType(&self, contact_type: CNContactType);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "namePrefix", managed = "Other")]
    pub unsafe fn namePrefix(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setNamePrefix:")]
    pub unsafe fn setNamePrefix(&self, name_prefix: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "givenName", managed = "Other")]
    pub unsafe fn givenName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setGivenName:")]
    pub unsafe fn setGivenName(&self, given_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "middleName", managed = "Other")]
    pub unsafe fn middleName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setMiddleName:")]
    pub unsafe fn setMiddleName(&self, middle_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "familyName", managed = "Other")]
    pub unsafe fn familyName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setFamilyName:")]
    pub unsafe fn setFamilyName(&self, family_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "previousFamilyName", managed = "Other")]
    pub unsafe fn previousFamilyName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPreviousFamilyName:")]
    pub unsafe fn setPreviousFamilyName(&self, previous_family_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "nameSuffix", managed = "Other")]
    pub unsafe fn nameSuffix(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setNameSuffix:")]
    pub unsafe fn setNameSuffix(&self, name_suffix: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "nickname", managed = "Other")]
    pub unsafe fn nickname(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setNickname:")]
    pub unsafe fn setNickname(&self, nickname: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "organizationName", managed = "Other")]
    pub unsafe fn organizationName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setOrganizationName:")]
    pub unsafe fn setOrganizationName(&self, organization_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "departmentName", managed = "Other")]
    pub unsafe fn departmentName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setDepartmentName:")]
    pub unsafe fn setDepartmentName(&self, department_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "jobTitle", managed = "Other")]
    pub unsafe fn jobTitle(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setJobTitle:")]
    pub unsafe fn setJobTitle(&self, job_title: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "phoneticGivenName", managed = "Other")]
    pub unsafe fn phoneticGivenName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPhoneticGivenName:")]
    pub unsafe fn setPhoneticGivenName(&self, phonetic_given_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "phoneticMiddleName", managed = "Other")]
    pub unsafe fn phoneticMiddleName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPhoneticMiddleName:")]
    pub unsafe fn setPhoneticMiddleName(&self, phonetic_middle_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "phoneticFamilyName", managed = "Other")]
    pub unsafe fn phoneticFamilyName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPhoneticFamilyName:")]
    pub unsafe fn setPhoneticFamilyName(&self, phonetic_family_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "phoneticOrganizationName", managed = "Other")]
    pub unsafe fn phoneticOrganizationName(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setPhoneticOrganizationName:")]
    pub unsafe fn setPhoneticOrganizationName(&self, phonetic_organization_name: &NSString);

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "note", managed = "Other")]
    pub unsafe fn note(&self) -> Id<NSString>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "setNote:")]
    pub unsafe fn setNote(&self, note: &NSString);

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "imageData", managed = "Other")]
    pub unsafe fn imageData(&self) -> Option<Id<NSData>>;

    #[cfg(feature = "Foundation_NSData")]
    #[objc2::method(sel = "setImageData:")]
    pub unsafe fn setImageData(&self, image_data: Option<&NSData>);

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNPhoneNumber",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "phoneNumbers", managed = "Other")]
    pub unsafe fn phoneNumbers(&self) -> Id<NSArray<CNLabeledValue<CNPhoneNumber>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNPhoneNumber",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setPhoneNumbers:")]
    pub unsafe fn setPhoneNumbers(&self, phone_numbers: &NSArray<CNLabeledValue<CNPhoneNumber>>);

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "emailAddresses", managed = "Other")]
    pub unsafe fn emailAddresses(&self) -> Id<NSArray<CNLabeledValue<NSString>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "setEmailAddresses:")]
    pub unsafe fn setEmailAddresses(&self, email_addresses: &NSArray<CNLabeledValue<NSString>>);

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNPostalAddress",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "postalAddresses", managed = "Other")]
    pub unsafe fn postalAddresses(&self) -> Id<NSArray<CNLabeledValue<CNPostalAddress>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNPostalAddress",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setPostalAddresses:")]
    pub unsafe fn setPostalAddresses(
        &self,
        postal_addresses: &NSArray<CNLabeledValue<CNPostalAddress>>,
    );

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "urlAddresses", managed = "Other")]
    pub unsafe fn urlAddresses(&self) -> Id<NSArray<CNLabeledValue<NSString>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSString"
    ))]
    #[objc2::method(sel = "setUrlAddresses:")]
    pub unsafe fn setUrlAddresses(&self, url_addresses: &NSArray<CNLabeledValue<NSString>>);

    #[cfg(all(
        feature = "Contacts_CNContactRelation",
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "contactRelations", managed = "Other")]
    pub unsafe fn contactRelations(&self) -> Id<NSArray<CNLabeledValue<CNContactRelation>>>;

    #[cfg(all(
        feature = "Contacts_CNContactRelation",
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setContactRelations:")]
    pub unsafe fn setContactRelations(
        &self,
        contact_relations: &NSArray<CNLabeledValue<CNContactRelation>>,
    );

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNSocialProfile",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "socialProfiles", managed = "Other")]
    pub unsafe fn socialProfiles(&self) -> Id<NSArray<CNLabeledValue<CNSocialProfile>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Contacts_CNSocialProfile",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setSocialProfiles:")]
    pub unsafe fn setSocialProfiles(
        &self,
        social_profiles: &NSArray<CNLabeledValue<CNSocialProfile>>,
    );

    #[cfg(all(
        feature = "Contacts_CNInstantMessageAddress",
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "instantMessageAddresses", managed = "Other")]
    pub unsafe fn instantMessageAddresses(
        &self,
    ) -> Id<NSArray<CNLabeledValue<CNInstantMessageAddress>>>;

    #[cfg(all(
        feature = "Contacts_CNInstantMessageAddress",
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray"
    ))]
    #[objc2::method(sel = "setInstantMessageAddresses:")]
    pub unsafe fn setInstantMessageAddresses(
        &self,
        instant_message_addresses: &NSArray<CNLabeledValue<CNInstantMessageAddress>>,
    );

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "birthday", managed = "Other")]
    pub unsafe fn birthday(&self) -> Option<Id<NSDateComponents>>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "setBirthday:")]
    pub unsafe fn setBirthday(&self, birthday: Option<&NSDateComponents>);

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "nonGregorianBirthday", managed = "Other")]
    pub unsafe fn nonGregorianBirthday(&self) -> Option<Id<NSDateComponents>>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "setNonGregorianBirthday:")]
    pub unsafe fn setNonGregorianBirthday(&self, non_gregorian_birthday: Option<&NSDateComponents>);

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSDateComponents"
    ))]
    #[objc2::method(sel = "dates", managed = "Other")]
    pub unsafe fn dates(&self) -> Id<NSArray<CNLabeledValue<NSDateComponents>>>;

    #[cfg(all(
        feature = "Contacts_CNLabeledValue",
        feature = "Foundation_NSArray",
        feature = "Foundation_NSDateComponents"
    ))]
    #[objc2::method(sel = "setDates:")]
    pub unsafe fn setDates(&self, dates: &NSArray<CNLabeledValue<NSDateComponents>>);
}
