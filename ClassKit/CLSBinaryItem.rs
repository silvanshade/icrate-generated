//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ClassKit::*;
use crate::Foundation::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum CLSBinaryValueType {
    CLSBinaryValueTypeTrueFalse = 0,
    CLSBinaryValueTypePassFail = 1,
    CLSBinaryValueTypeYesNo = 2,
    CLSBinaryValueTypeCorrectIncorrect = 3,
}

#[objc2::interface(
    unsafe super = CLSActivityItem,
    unsafe inherits = [
        CLSObject,
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSBinaryItem")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CLSBinaryItem;
}

#[cfg(feature = "ClassKit_CLSBinaryItem")]
unsafe impl NSCoding for CLSBinaryItem {}

#[cfg(feature = "ClassKit_CLSBinaryItem")]
unsafe impl NSObjectProtocol for CLSBinaryItem {}

#[cfg(feature = "ClassKit_CLSBinaryItem")]
unsafe impl NSSecureCoding for CLSBinaryItem {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSBinaryItem")]
    pub type CLSBinaryItem;

    #[objc2::method(sel = "value")]
    pub unsafe fn value(&self) -> bool;

    #[objc2::method(sel = "setValue:")]
    pub unsafe fn setValue(&self, value: bool);

    #[objc2::method(sel = "valueType")]
    pub unsafe fn valueType(&self) -> CLSBinaryValueType;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "initWithIdentifier:title:type:", managed = "Init")]
    pub unsafe fn initWithIdentifier_title_type(
        this: Option<Allocated<Self>>,
        identifier: &NSString,
        title: &NSString,
        value_type: CLSBinaryValueType,
    ) -> Id<Self>;
}
