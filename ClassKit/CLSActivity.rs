//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ClassKit::*;
use crate::Foundation::*;

#[objc2::interface(
    unsafe super = CLSObject,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSActivity")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type CLSActivity;
}

#[cfg(feature = "ClassKit_CLSActivity")]
unsafe impl NSCoding for CLSActivity {}

#[cfg(feature = "ClassKit_CLSActivity")]
unsafe impl NSObjectProtocol for CLSActivity {}

#[cfg(feature = "ClassKit_CLSActivity")]
unsafe impl NSSecureCoding for CLSActivity {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSActivity")]
    pub type CLSActivity;

    #[objc2::method(sel = "progress")]
    pub unsafe fn progress(&self) -> c_double;

    #[objc2::method(sel = "setProgress:")]
    pub unsafe fn setProgress(&self, progress: c_double);

    #[objc2::method(sel = "duration")]
    pub unsafe fn duration(&self) -> NSTimeInterval;

    #[cfg(feature = "ClassKit_CLSActivityItem")]
    #[objc2::method(sel = "primaryActivityItem", managed = "Other")]
    pub unsafe fn primaryActivityItem(&self) -> Option<Id<CLSActivityItem>>;

    #[cfg(feature = "ClassKit_CLSActivityItem")]
    #[objc2::method(sel = "setPrimaryActivityItem:")]
    pub unsafe fn setPrimaryActivityItem(&self, primary_activity_item: Option<&CLSActivityItem>);

    #[objc2::method(sel = "addProgressRangeFromStart:toEnd:")]
    pub unsafe fn addProgressRangeFromStart_toEnd(&self, start: c_double, end: c_double);

    #[cfg(feature = "ClassKit_CLSActivityItem")]
    #[objc2::method(sel = "addAdditionalActivityItem:")]
    pub unsafe fn addAdditionalActivityItem(&self, activity_item: &CLSActivityItem);

    #[cfg(all(feature = "ClassKit_CLSActivityItem", feature = "Foundation_NSArray"))]
    #[objc2::method(sel = "additionalActivityItems", managed = "Other")]
    pub unsafe fn additionalActivityItems(&self) -> Id<NSArray<CLSActivityItem>>;
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSActivity")]
    pub type CLSActivity;

    #[objc2::method(sel = "isStarted")]
    pub unsafe fn isStarted(&self) -> bool;

    #[objc2::method(sel = "start")]
    pub unsafe fn start(&self);

    #[objc2::method(sel = "stop")]
    pub unsafe fn stop(&self);

    #[objc2::method(sel = "removeAllActivityItems")]
    pub unsafe fn removeAllActivityItems(&self);
}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "ClassKit_CLSContext")]
    pub type CLSContext;

    #[cfg(feature = "ClassKit_CLSActivity")]
    #[objc2::method(sel = "currentActivity", managed = "Other")]
    pub unsafe fn currentActivity(&self) -> Option<Id<CLSActivity>>;

    #[cfg(feature = "ClassKit_CLSActivity")]
    #[objc2::method(sel = "createNewActivity", managed = "Other")]
    pub unsafe fn createNewActivity(&self) -> Id<CLSActivity>;
}
