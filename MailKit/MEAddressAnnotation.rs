//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MailKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEAddressAnnotation")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MEAddressAnnotation;
}

#[cfg(feature = "MailKit_MEAddressAnnotation")]
unsafe impl NSCoding for MEAddressAnnotation {}

#[cfg(feature = "MailKit_MEAddressAnnotation")]
unsafe impl NSObjectProtocol for MEAddressAnnotation {}

#[cfg(feature = "MailKit_MEAddressAnnotation")]
unsafe impl NSSecureCoding for MEAddressAnnotation {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEAddressAnnotation")]
    pub type MEAddressAnnotation;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "errorWithLocalizedDescription:", managed = "Other")]
    pub unsafe fn errorWithLocalizedDescription(
        localized_description: &NSString,
    ) -> Id<MEAddressAnnotation>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "warningWithLocalizedDescription:", managed = "Other")]
    pub unsafe fn warningWithLocalizedDescription(
        localized_description: &NSString,
    ) -> Id<MEAddressAnnotation>;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "successWithLocalizedDescription:", managed = "Other")]
    pub unsafe fn successWithLocalizedDescription(
        localized_description: &NSString,
    ) -> Id<MEAddressAnnotation>;
}
