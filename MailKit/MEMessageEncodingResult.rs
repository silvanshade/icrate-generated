//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MailKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEMessageEncodingResult")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MEMessageEncodingResult;
}

#[cfg(feature = "MailKit_MEMessageEncodingResult")]
unsafe impl NSCoding for MEMessageEncodingResult {}

#[cfg(feature = "MailKit_MEMessageEncodingResult")]
unsafe impl NSObjectProtocol for MEMessageEncodingResult {}

#[cfg(feature = "MailKit_MEMessageEncodingResult")]
unsafe impl NSSecureCoding for MEMessageEncodingResult {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEMessageEncodingResult")]
    pub type MEMessageEncodingResult;

    #[cfg(feature = "MailKit_MEEncodedOutgoingMessage")]
    #[objc2::method(sel = "encodedMessage", managed = "Other")]
    pub unsafe fn encodedMessage(&self) -> Option<Id<MEEncodedOutgoingMessage>>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "signingError", managed = "Other")]
    pub unsafe fn signingError(&self) -> Option<Id<NSError>>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "encryptionError", managed = "Other")]
    pub unsafe fn encryptionError(&self) -> Option<Id<NSError>>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "MailKit_MEEncodedOutgoingMessage"
    ))]
    #[objc2::method(
        sel = "initWithEncodedMessage:signingError:encryptionError:",
        managed = "Init"
    )]
    pub unsafe fn initWithEncodedMessage_signingError_encryptionError(
        this: Option<Allocated<Self>>,
        encoded_message: Option<&MEEncodedOutgoingMessage>,
        signing_error: Option<&NSError>,
        encryption_error: Option<&NSError>,
    ) -> Id<Self>;
}
