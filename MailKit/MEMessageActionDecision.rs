//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::MailKit::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEMessageActionDecision")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type MEMessageActionDecision;
}

#[cfg(feature = "MailKit_MEMessageActionDecision")]
unsafe impl NSCoding for MEMessageActionDecision {}

#[cfg(feature = "MailKit_MEMessageActionDecision")]
unsafe impl NSObjectProtocol for MEMessageActionDecision {}

#[cfg(feature = "MailKit_MEMessageActionDecision")]
unsafe impl NSSecureCoding for MEMessageActionDecision {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "MailKit_MEMessageActionDecision")]
    pub type MEMessageActionDecision;

    #[objc2::method(sel = "invokeAgainWithBody", managed = "Other")]
    pub unsafe fn invokeAgainWithBody() -> Id<MEMessageActionDecision>;

    #[cfg(feature = "MailKit_MEMessageAction")]
    #[objc2::method(sel = "decisionApplyingAction:", managed = "Other")]
    pub unsafe fn decisionApplyingAction(action: &MEMessageAction) -> Id<Self>;

    #[cfg(all(feature = "Foundation_NSArray", feature = "MailKit_MEMessageAction"))]
    #[objc2::method(sel = "decisionApplyingActions:", managed = "Other")]
    pub unsafe fn decisionApplyingActions(actions: &NSArray<MEMessageAction>) -> Id<Self>;

    #[objc2::method(sel = "new", managed = "New")]
    pub unsafe fn new() -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
