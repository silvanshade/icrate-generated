//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::PhotoKit::*;

pub type PHAssetResourceDataRequestID = i32;

extern_static!(PHInvalidAssetResourceDataRequestID: PHAssetResourceDataRequestID = 0);

pub type PHAssetResourceProgressHandler = *mut Block<(c_double,), ()>;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHAssetResourceRequestOptions")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHAssetResourceRequestOptions;
}

#[cfg(feature = "PhotoKit_PHAssetResourceRequestOptions")]
unsafe impl NSObjectProtocol for PHAssetResourceRequestOptions {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHAssetResourceRequestOptions")]
    pub type PHAssetResourceRequestOptions;

    #[objc2::method(sel = "isNetworkAccessAllowed")]
    pub unsafe fn isNetworkAccessAllowed(&self) -> bool;

    #[objc2::method(sel = "setNetworkAccessAllowed:")]
    pub unsafe fn setNetworkAccessAllowed(&self, network_access_allowed: bool);

    #[objc2::method(sel = "progressHandler")]
    pub unsafe fn progressHandler(&self) -> PHAssetResourceProgressHandler;

    #[objc2::method(sel = "setProgressHandler:")]
    pub unsafe fn setProgressHandler(&self, progress_handler: PHAssetResourceProgressHandler);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHAssetResourceManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHAssetResourceManager;
}

#[cfg(feature = "PhotoKit_PHAssetResourceManager")]
unsafe impl NSObjectProtocol for PHAssetResourceManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHAssetResourceManager")]
    pub type PHAssetResourceManager;

    #[objc2::method(sel = "defaultManager", managed = "Other")]
    pub unsafe fn defaultManager() -> Id<PHAssetResourceManager>;

    #[cfg(all(
        feature = "Foundation_NSData",
        feature = "Foundation_NSError",
        feature = "PhotoKit_PHAssetResource",
        feature = "PhotoKit_PHAssetResourceRequestOptions"
    ))]
    #[objc2::method(
        sel = "requestDataForAssetResource:options:dataReceivedHandler:completionHandler:"
    )]
    pub unsafe fn requestDataForAssetResource_options_dataReceivedHandler_completionHandler(
        &self,
        resource: &PHAssetResource,
        options: Option<&PHAssetResourceRequestOptions>,
        handler: &Block<(NonNull<NSData>,), ()>,
        completion_handler: &Block<(*mut NSError,), ()>,
    ) -> PHAssetResourceDataRequestID;

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "Foundation_NSURL",
        feature = "PhotoKit_PHAssetResource",
        feature = "PhotoKit_PHAssetResourceRequestOptions"
    ))]
    #[objc2::method(sel = "writeDataForAssetResource:toFile:options:completionHandler:")]
    pub unsafe fn writeDataForAssetResource_toFile_options_completionHandler(
        &self,
        resource: &PHAssetResource,
        file_url: &NSURL,
        options: Option<&PHAssetResourceRequestOptions>,
        completion_handler: &Block<(*mut NSError,), ()>,
    );

    #[objc2::method(sel = "cancelDataRequest:")]
    pub unsafe fn cancelDataRequest(&self, request_id: PHAssetResourceDataRequestID);
}
