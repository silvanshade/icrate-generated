//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::PhotoKit::*;

#[ns_enum]
#[underlying(NSInteger)]
pub enum PHImageRequestOptionsVersion {
    PHImageRequestOptionsVersionCurrent = 0,
    PHImageRequestOptionsVersionUnadjusted = 1,
    PHImageRequestOptionsVersionOriginal = 2,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum PHImageRequestOptionsDeliveryMode {
    PHImageRequestOptionsDeliveryModeOpportunistic = 0,
    PHImageRequestOptionsDeliveryModeHighQualityFormat = 1,
    PHImageRequestOptionsDeliveryModeFastFormat = 2,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum PHImageRequestOptionsResizeMode {
    PHImageRequestOptionsResizeModeNone = 0,
    PHImageRequestOptionsResizeModeFast = 1,
    PHImageRequestOptionsResizeModeExact = 2,
}

pub type PHAssetImageProgressHandler =
    *mut Block<(c_double, *mut NSError, NonNull<Bool>, *mut NSDictionary), ()>;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHImageRequestOptions")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHImageRequestOptions;
}

#[cfg(feature = "PhotoKit_PHImageRequestOptions")]
unsafe impl NSObjectProtocol for PHImageRequestOptions {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHImageRequestOptions")]
    pub type PHImageRequestOptions;

    #[objc2::method(sel = "version")]
    pub unsafe fn version(&self) -> PHImageRequestOptionsVersion;

    #[objc2::method(sel = "setVersion:")]
    pub unsafe fn setVersion(&self, version: PHImageRequestOptionsVersion);

    #[objc2::method(sel = "deliveryMode")]
    pub unsafe fn deliveryMode(&self) -> PHImageRequestOptionsDeliveryMode;

    #[objc2::method(sel = "setDeliveryMode:")]
    pub unsafe fn setDeliveryMode(&self, delivery_mode: PHImageRequestOptionsDeliveryMode);

    #[objc2::method(sel = "resizeMode")]
    pub unsafe fn resizeMode(&self) -> PHImageRequestOptionsResizeMode;

    #[objc2::method(sel = "setResizeMode:")]
    pub unsafe fn setResizeMode(&self, resize_mode: PHImageRequestOptionsResizeMode);

    #[objc2::method(sel = "normalizedCropRect")]
    pub unsafe fn normalizedCropRect(&self) -> CGRect;

    #[objc2::method(sel = "setNormalizedCropRect:")]
    pub unsafe fn setNormalizedCropRect(&self, normalized_crop_rect: CGRect);

    #[objc2::method(sel = "isNetworkAccessAllowed")]
    pub unsafe fn isNetworkAccessAllowed(&self) -> bool;

    #[objc2::method(sel = "setNetworkAccessAllowed:")]
    pub unsafe fn setNetworkAccessAllowed(&self, network_access_allowed: bool);

    #[objc2::method(sel = "isSynchronous")]
    pub unsafe fn isSynchronous(&self) -> bool;

    #[objc2::method(sel = "setSynchronous:")]
    pub unsafe fn setSynchronous(&self, synchronous: bool);

    #[objc2::method(sel = "progressHandler")]
    pub unsafe fn progressHandler(&self) -> PHAssetImageProgressHandler;

    #[objc2::method(sel = "setProgressHandler:")]
    pub unsafe fn setProgressHandler(&self, progress_handler: PHAssetImageProgressHandler);
}

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHLivePhotoRequestOptions")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHLivePhotoRequestOptions;
}

#[cfg(feature = "PhotoKit_PHLivePhotoRequestOptions")]
unsafe impl NSObjectProtocol for PHLivePhotoRequestOptions {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHLivePhotoRequestOptions")]
    pub type PHLivePhotoRequestOptions;

    #[objc2::method(sel = "version")]
    pub unsafe fn version(&self) -> PHImageRequestOptionsVersion;

    #[objc2::method(sel = "setVersion:")]
    pub unsafe fn setVersion(&self, version: PHImageRequestOptionsVersion);

    #[objc2::method(sel = "deliveryMode")]
    pub unsafe fn deliveryMode(&self) -> PHImageRequestOptionsDeliveryMode;

    #[objc2::method(sel = "setDeliveryMode:")]
    pub unsafe fn setDeliveryMode(&self, delivery_mode: PHImageRequestOptionsDeliveryMode);

    #[objc2::method(sel = "isNetworkAccessAllowed")]
    pub unsafe fn isNetworkAccessAllowed(&self) -> bool;

    #[objc2::method(sel = "setNetworkAccessAllowed:")]
    pub unsafe fn setNetworkAccessAllowed(&self, network_access_allowed: bool);

    #[objc2::method(sel = "progressHandler")]
    pub unsafe fn progressHandler(&self) -> PHAssetImageProgressHandler;

    #[objc2::method(sel = "setProgressHandler:")]
    pub unsafe fn setProgressHandler(&self, progress_handler: PHAssetImageProgressHandler);
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum PHVideoRequestOptionsVersion {
    PHVideoRequestOptionsVersionCurrent = 0,
    PHVideoRequestOptionsVersionOriginal = 1,
}

#[ns_enum]
#[underlying(NSInteger)]
pub enum PHVideoRequestOptionsDeliveryMode {
    PHVideoRequestOptionsDeliveryModeAutomatic = 0,
    PHVideoRequestOptionsDeliveryModeHighQualityFormat = 1,
    PHVideoRequestOptionsDeliveryModeMediumQualityFormat = 2,
    PHVideoRequestOptionsDeliveryModeFastFormat = 3,
}

pub type PHAssetVideoProgressHandler =
    *mut Block<(c_double, *mut NSError, NonNull<Bool>, *mut NSDictionary), ()>;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHVideoRequestOptions")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHVideoRequestOptions;
}

#[cfg(feature = "PhotoKit_PHVideoRequestOptions")]
unsafe impl NSObjectProtocol for PHVideoRequestOptions {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHVideoRequestOptions")]
    pub type PHVideoRequestOptions;

    #[objc2::method(sel = "isNetworkAccessAllowed")]
    pub unsafe fn isNetworkAccessAllowed(&self) -> bool;

    #[objc2::method(sel = "setNetworkAccessAllowed:")]
    pub unsafe fn setNetworkAccessAllowed(&self, network_access_allowed: bool);

    #[objc2::method(sel = "version")]
    pub unsafe fn version(&self) -> PHVideoRequestOptionsVersion;

    #[objc2::method(sel = "setVersion:")]
    pub unsafe fn setVersion(&self, version: PHVideoRequestOptionsVersion);

    #[objc2::method(sel = "deliveryMode")]
    pub unsafe fn deliveryMode(&self) -> PHVideoRequestOptionsDeliveryMode;

    #[objc2::method(sel = "setDeliveryMode:")]
    pub unsafe fn setDeliveryMode(&self, delivery_mode: PHVideoRequestOptionsDeliveryMode);

    #[objc2::method(sel = "progressHandler")]
    pub unsafe fn progressHandler(&self) -> PHAssetVideoProgressHandler;

    #[objc2::method(sel = "setProgressHandler:")]
    pub unsafe fn setProgressHandler(&self, progress_handler: PHAssetVideoProgressHandler);
}

pub type PHImageRequestID = i32;

extern_static!(PHInvalidImageRequestID: PHImageRequestID = 0);

extern_static!(PHImageManagerMaximumSize: CGSize);

extern_static!(PHImageResultIsInCloudKey: &'static NSString);

extern_static!(PHImageResultIsDegradedKey: &'static NSString);

extern_static!(PHImageResultRequestIDKey: &'static NSString);

extern_static!(PHImageCancelledKey: &'static NSString);

extern_static!(PHImageErrorKey: &'static NSString);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHImageManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHImageManager;
}

#[cfg(feature = "PhotoKit_PHImageManager")]
unsafe impl NSObjectProtocol for PHImageManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHImageManager")]
    pub type PHImageManager;

    #[objc2::method(sel = "defaultManager", managed = "Other")]
    pub unsafe fn defaultManager() -> Id<PHImageManager>;

    #[cfg(all(
        feature = "AppKit_NSImage",
        feature = "Foundation_NSDictionary",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHImageRequestOptions"
    ))]
    #[objc2::method(sel = "requestImageForAsset:targetSize:contentMode:options:resultHandler:")]
    pub unsafe fn requestImageForAsset_targetSize_contentMode_options_resultHandler(
        &self,
        asset: &PHAsset,
        target_size: CGSize,
        content_mode: PHImageContentMode,
        options: Option<&PHImageRequestOptions>,
        result_handler: &Block<(*mut NSImage, *mut NSDictionary), ()>,
    ) -> PHImageRequestID;

    #[objc2::method(sel = "cancelImageRequest:")]
    pub unsafe fn cancelImageRequest(&self, request_id: PHImageRequestID);

    #[cfg(all(
        feature = "Foundation_NSDictionary",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHLivePhoto",
        feature = "PhotoKit_PHLivePhotoRequestOptions"
    ))]
    #[objc2::method(sel = "requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:")]
    pub unsafe fn requestLivePhotoForAsset_targetSize_contentMode_options_resultHandler(
        &self,
        asset: &PHAsset,
        target_size: CGSize,
        content_mode: PHImageContentMode,
        options: Option<&PHLivePhotoRequestOptions>,
        result_handler: &Block<(*mut PHLivePhoto, *mut NSDictionary), ()>,
    ) -> PHImageRequestID;

    #[cfg(all(
        feature = "AVFoundation_AVPlayerItem",
        feature = "Foundation_NSDictionary",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHVideoRequestOptions"
    ))]
    #[objc2::method(sel = "requestPlayerItemForVideo:options:resultHandler:")]
    pub unsafe fn requestPlayerItemForVideo_options_resultHandler(
        &self,
        asset: &PHAsset,
        options: Option<&PHVideoRequestOptions>,
        result_handler: &Block<(*mut AVPlayerItem, *mut NSDictionary), ()>,
    ) -> PHImageRequestID;

    #[cfg(all(
        feature = "AVFoundation_AVAssetExportSession",
        feature = "Foundation_NSDictionary",
        feature = "Foundation_NSString",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHVideoRequestOptions"
    ))]
    #[objc2::method(sel = "requestExportSessionForVideo:options:exportPreset:resultHandler:")]
    pub unsafe fn requestExportSessionForVideo_options_exportPreset_resultHandler(
        &self,
        asset: &PHAsset,
        options: Option<&PHVideoRequestOptions>,
        export_preset: &NSString,
        result_handler: &Block<(*mut AVAssetExportSession, *mut NSDictionary), ()>,
    ) -> PHImageRequestID;

    #[cfg(all(
        feature = "AVFoundation_AVAsset",
        feature = "AVFoundation_AVAudioMix",
        feature = "Foundation_NSDictionary",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHVideoRequestOptions"
    ))]
    #[objc2::method(sel = "requestAVAssetForVideo:options:resultHandler:")]
    pub unsafe fn requestAVAssetForVideo_options_resultHandler(
        &self,
        asset: &PHAsset,
        options: Option<&PHVideoRequestOptions>,
        result_handler: &Block<(*mut AVAsset, *mut AVAudioMix, *mut NSDictionary), ()>,
    ) -> PHImageRequestID;
}

#[objc2::interface(
    unsafe super = PHImageManager,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHCachingImageManager")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type PHCachingImageManager;
}

#[cfg(feature = "PhotoKit_PHCachingImageManager")]
unsafe impl NSObjectProtocol for PHCachingImageManager {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "PhotoKit_PHCachingImageManager")]
    pub type PHCachingImageManager;

    #[objc2::method(sel = "allowsCachingHighQualityImages")]
    pub unsafe fn allowsCachingHighQualityImages(&self) -> bool;

    #[objc2::method(sel = "setAllowsCachingHighQualityImages:")]
    pub unsafe fn setAllowsCachingHighQualityImages(
        &self,
        allows_caching_high_quality_images: bool,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHImageRequestOptions"
    ))]
    #[objc2::method(sel = "startCachingImagesForAssets:targetSize:contentMode:options:")]
    pub unsafe fn startCachingImagesForAssets_targetSize_contentMode_options(
        &self,
        assets: &NSArray<PHAsset>,
        target_size: CGSize,
        content_mode: PHImageContentMode,
        options: Option<&PHImageRequestOptions>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "PhotoKit_PHAsset",
        feature = "PhotoKit_PHImageRequestOptions"
    ))]
    #[objc2::method(sel = "stopCachingImagesForAssets:targetSize:contentMode:options:")]
    pub unsafe fn stopCachingImagesForAssets_targetSize_contentMode_options(
        &self,
        assets: &NSArray<PHAsset>,
        target_size: CGSize,
        content_mode: PHImageContentMode,
        options: Option<&PHImageRequestOptions>,
    );

    #[objc2::method(sel = "stopCachingImagesForAllAssets")]
    pub unsafe fn stopCachingImagesForAllAssets(&self);
}
