//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::UserNotifications::*;

#[ns_options]
#[underlying(NSUInteger)]
pub enum UNAuthorizationOptions {
    UNAuthorizationOptionBadge = 1 << 0,
    UNAuthorizationOptionSound = 1 << 1,
    UNAuthorizationOptionAlert = 1 << 2,
    UNAuthorizationOptionCarPlay = 1 << 3,
    UNAuthorizationOptionCriticalAlert = 1 << 4,
    UNAuthorizationOptionProvidesAppNotificationSettings = 1 << 5,
    UNAuthorizationOptionProvisional = 1 << 6,
    #[deprecated = "Announcement authorization is always included"]
    UNAuthorizationOptionAnnouncement = 1 << 7,
    #[deprecated = "Use time-sensitive entitlement"]
    UNAuthorizationOptionTimeSensitive = 1 << 8,
}

extern_static!(UNAuthorizationOptionNone: UNAuthorizationOptions = 0);

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNUserNotificationCenter")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNUserNotificationCenter;
}

#[cfg(feature = "UserNotifications_UNUserNotificationCenter")]
unsafe impl NSObjectProtocol for UNUserNotificationCenter {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNUserNotificationCenter")]
    pub type UNUserNotificationCenter;

    #[objc2::method(sel = "delegate", managed = "Other")]
    pub unsafe fn delegate(
        &self,
    ) -> Option<Id<ProtocolObject<dyn UNUserNotificationCenterDelegate>>>;

    #[objc2::method(sel = "setDelegate:")]
    pub unsafe fn setDelegate(
        &self,
        delegate: Option<&ProtocolObject<dyn UNUserNotificationCenterDelegate>>,
    );

    #[objc2::method(sel = "supportsContentExtensions")]
    pub unsafe fn supportsContentExtensions(&self) -> bool;

    #[objc2::method(sel = "currentNotificationCenter", managed = "Other")]
    pub unsafe fn currentNotificationCenter() -> Id<UNUserNotificationCenter>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "requestAuthorizationWithOptions:completionHandler:")]
    pub unsafe fn requestAuthorizationWithOptions_completionHandler(
        &self,
        options: UNAuthorizationOptions,
        completion_handler: &Block<(Bool, *mut NSError), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSSet",
        feature = "UserNotifications_UNNotificationCategory"
    ))]
    #[objc2::method(sel = "setNotificationCategories:")]
    pub unsafe fn setNotificationCategories(&self, categories: &NSSet<UNNotificationCategory>);

    #[cfg(all(
        feature = "Foundation_NSSet",
        feature = "UserNotifications_UNNotificationCategory"
    ))]
    #[objc2::method(sel = "getNotificationCategoriesWithCompletionHandler:")]
    pub unsafe fn getNotificationCategoriesWithCompletionHandler(
        &self,
        completion_handler: &Block<(NonNull<NSSet<UNNotificationCategory>>,), ()>,
    );

    #[cfg(feature = "UserNotifications_UNNotificationSettings")]
    #[objc2::method(sel = "getNotificationSettingsWithCompletionHandler:")]
    pub unsafe fn getNotificationSettingsWithCompletionHandler(
        &self,
        completion_handler: &Block<(NonNull<UNNotificationSettings>,), ()>,
    );

    #[cfg(all(
        feature = "Foundation_NSError",
        feature = "UserNotifications_UNNotificationRequest"
    ))]
    #[objc2::method(sel = "addNotificationRequest:withCompletionHandler:")]
    pub unsafe fn addNotificationRequest_withCompletionHandler(
        &self,
        request: &UNNotificationRequest,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "UserNotifications_UNNotificationRequest"
    ))]
    #[objc2::method(sel = "getPendingNotificationRequestsWithCompletionHandler:")]
    pub unsafe fn getPendingNotificationRequestsWithCompletionHandler(
        &self,
        completion_handler: &Block<(NonNull<NSArray<UNNotificationRequest>>,), ()>,
    );

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "removePendingNotificationRequestsWithIdentifiers:")]
    pub unsafe fn removePendingNotificationRequestsWithIdentifiers(
        &self,
        identifiers: &NSArray<NSString>,
    );

    #[objc2::method(sel = "removeAllPendingNotificationRequests")]
    pub unsafe fn removeAllPendingNotificationRequests(&self);

    #[cfg(all(
        feature = "Foundation_NSArray",
        feature = "UserNotifications_UNNotification"
    ))]
    #[objc2::method(sel = "getDeliveredNotificationsWithCompletionHandler:")]
    pub unsafe fn getDeliveredNotificationsWithCompletionHandler(
        &self,
        completion_handler: &Block<(NonNull<NSArray<UNNotification>>,), ()>,
    );

    #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
    #[objc2::method(sel = "removeDeliveredNotificationsWithIdentifiers:")]
    pub unsafe fn removeDeliveredNotificationsWithIdentifiers(
        &self,
        identifiers: &NSArray<NSString>,
    );

    #[objc2::method(sel = "removeAllDeliveredNotifications")]
    pub unsafe fn removeAllDeliveredNotifications(&self);

    #[cfg(feature = "Foundation_NSError")]
    #[objc2::method(sel = "setBadgeCount:withCompletionHandler:")]
    pub unsafe fn setBadgeCount_withCompletionHandler(
        &self,
        new_badge_count: NSInteger,
        completion_handler: Option<&Block<(*mut NSError,), ()>>,
    );
}

#[ns_options]
#[underlying(NSUInteger)]
pub enum UNNotificationPresentationOptions {
    UNNotificationPresentationOptionBadge = 1 << 0,
    UNNotificationPresentationOptionSound = 1 << 1,
    #[deprecated]
    UNNotificationPresentationOptionAlert = 1 << 2,
    UNNotificationPresentationOptionList = 1 << 3,
    UNNotificationPresentationOptionBanner = 1 << 4,
}

extern_static!(UNNotificationPresentationOptionNone: UNNotificationPresentationOptions = 0);

#[objc2::protocol]
pub unsafe trait UNUserNotificationCenterDelegate: NSObjectProtocol {
    #[cfg(all(
        feature = "UserNotifications_UNNotification",
        feature = "UserNotifications_UNUserNotificationCenter"
    ))]
    #[objc2::method(
        optional,
        sel = "userNotificationCenter:willPresentNotification:withCompletionHandler:"
    )]
    unsafe fn userNotificationCenter_willPresentNotification_withCompletionHandler(
        &self,
        center: &UNUserNotificationCenter,
        notification: &UNNotification,
        completion_handler: &Block<(UNNotificationPresentationOptions,), ()>,
    );

    #[cfg(all(
        feature = "UserNotifications_UNNotificationResponse",
        feature = "UserNotifications_UNUserNotificationCenter"
    ))]
    #[objc2::method(
        optional,
        sel = "userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:"
    )]
    unsafe fn userNotificationCenter_didReceiveNotificationResponse_withCompletionHandler(
        &self,
        center: &UNUserNotificationCenter,
        response: &UNNotificationResponse,
        completion_handler: &Block<(), ()>,
    );

    #[cfg(all(
        feature = "UserNotifications_UNNotification",
        feature = "UserNotifications_UNUserNotificationCenter"
    ))]
    #[objc2::method(optional, sel = "userNotificationCenter:openSettingsForNotification:")]
    unsafe fn userNotificationCenter_openSettingsForNotification(
        &self,
        center: &UNUserNotificationCenter,
        notification: Option<&UNNotification>,
    );
}
