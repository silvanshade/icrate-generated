//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::UserNotifications::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNNotificationRequest")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNNotificationRequest;
}

#[cfg(feature = "UserNotifications_UNNotificationRequest")]
unsafe impl NSCoding for UNNotificationRequest {}

#[cfg(feature = "UserNotifications_UNNotificationRequest")]
unsafe impl NSObjectProtocol for UNNotificationRequest {}

#[cfg(feature = "UserNotifications_UNNotificationRequest")]
unsafe impl NSSecureCoding for UNNotificationRequest {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNNotificationRequest")]
    pub type UNNotificationRequest;

    #[cfg(feature = "Foundation_NSString")]
    #[objc2::method(sel = "identifier", managed = "Other")]
    pub unsafe fn identifier(&self) -> Id<NSString>;

    #[cfg(feature = "UserNotifications_UNNotificationContent")]
    #[objc2::method(sel = "content", managed = "Other")]
    pub unsafe fn content(&self) -> Id<UNNotificationContent>;

    #[cfg(feature = "UserNotifications_UNNotificationTrigger")]
    #[objc2::method(sel = "trigger", managed = "Other")]
    pub unsafe fn trigger(&self) -> Option<Id<UNNotificationTrigger>>;

    #[cfg(all(
        feature = "Foundation_NSString",
        feature = "UserNotifications_UNNotificationContent",
        feature = "UserNotifications_UNNotificationTrigger"
    ))]
    #[objc2::method(sel = "requestWithIdentifier:content:trigger:", managed = "Other")]
    pub unsafe fn requestWithIdentifier_content_trigger(
        identifier: &NSString,
        content: &UNNotificationContent,
        trigger: Option<&UNNotificationTrigger>,
    ) -> Id<Self>;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}
