//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::UserNotifications::*;

#[objc2::interface(
    unsafe super = NSObject,
    unsafe inherits = [
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNNotificationTrigger")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNNotificationTrigger;
}

#[cfg(feature = "UserNotifications_UNNotificationTrigger")]
unsafe impl NSCoding for UNNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNNotificationTrigger")]
unsafe impl NSObjectProtocol for UNNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNNotificationTrigger")]
unsafe impl NSSecureCoding for UNNotificationTrigger {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNNotificationTrigger")]
    pub type UNNotificationTrigger;

    #[objc2::method(sel = "repeats")]
    pub unsafe fn repeats(&self) -> bool;

    #[objc2::method(sel = "init", managed = "Init")]
    pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
}

#[objc2::interface(
    unsafe super = UNNotificationTrigger,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNPushNotificationTrigger")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNPushNotificationTrigger;
}

#[cfg(feature = "UserNotifications_UNPushNotificationTrigger")]
unsafe impl NSCoding for UNPushNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNPushNotificationTrigger")]
unsafe impl NSObjectProtocol for UNPushNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNPushNotificationTrigger")]
unsafe impl NSSecureCoding for UNPushNotificationTrigger {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNPushNotificationTrigger")]
    pub type UNPushNotificationTrigger;
}

#[objc2::interface(
    unsafe super = UNNotificationTrigger,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNTimeIntervalNotificationTrigger")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNTimeIntervalNotificationTrigger;
}

#[cfg(feature = "UserNotifications_UNTimeIntervalNotificationTrigger")]
unsafe impl NSCoding for UNTimeIntervalNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNTimeIntervalNotificationTrigger")]
unsafe impl NSObjectProtocol for UNTimeIntervalNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNTimeIntervalNotificationTrigger")]
unsafe impl NSSecureCoding for UNTimeIntervalNotificationTrigger {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNTimeIntervalNotificationTrigger")]
    pub type UNTimeIntervalNotificationTrigger;

    #[objc2::method(sel = "timeInterval")]
    pub unsafe fn timeInterval(&self) -> NSTimeInterval;

    #[objc2::method(sel = "triggerWithTimeInterval:repeats:", managed = "Other")]
    pub unsafe fn triggerWithTimeInterval_repeats(
        time_interval: NSTimeInterval,
        repeats: bool,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "nextTriggerDate", managed = "Other")]
    pub unsafe fn nextTriggerDate(&self) -> Option<Id<NSDate>>;
}

#[objc2::interface(
    unsafe super = UNNotificationTrigger,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNCalendarNotificationTrigger")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNCalendarNotificationTrigger;
}

#[cfg(feature = "UserNotifications_UNCalendarNotificationTrigger")]
unsafe impl NSCoding for UNCalendarNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNCalendarNotificationTrigger")]
unsafe impl NSObjectProtocol for UNCalendarNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNCalendarNotificationTrigger")]
unsafe impl NSSecureCoding for UNCalendarNotificationTrigger {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNCalendarNotificationTrigger")]
    pub type UNCalendarNotificationTrigger;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "dateComponents", managed = "Other")]
    pub unsafe fn dateComponents(&self) -> Id<NSDateComponents>;

    #[cfg(feature = "Foundation_NSDateComponents")]
    #[objc2::method(sel = "triggerWithDateMatchingComponents:repeats:", managed = "Other")]
    pub unsafe fn triggerWithDateMatchingComponents_repeats(
        date_components: &NSDateComponents,
        repeats: bool,
    ) -> Id<Self>;

    #[cfg(feature = "Foundation_NSDate")]
    #[objc2::method(sel = "nextTriggerDate", managed = "Other")]
    pub unsafe fn nextTriggerDate(&self) -> Option<Id<NSDate>>;
}

#[objc2::interface(
    unsafe super = UNNotificationTrigger,
    unsafe inherits = [
        NSObject,
    ]
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNLocationNotificationTrigger")]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub type UNLocationNotificationTrigger;
}

#[cfg(feature = "UserNotifications_UNLocationNotificationTrigger")]
unsafe impl NSCoding for UNLocationNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNLocationNotificationTrigger")]
unsafe impl NSObjectProtocol for UNLocationNotificationTrigger {}

#[cfg(feature = "UserNotifications_UNLocationNotificationTrigger")]
unsafe impl NSSecureCoding for UNLocationNotificationTrigger {}

#[objc2::interface(
    unsafe continue,
)]
extern "Objective-C" {
    #[cfg(feature = "UserNotifications_UNLocationNotificationTrigger")]
    pub type UNLocationNotificationTrigger;

    #[cfg(feature = "CoreLocation_CLRegion")]
    #[objc2::method(sel = "region", managed = "Other")]
    pub unsafe fn region(&self) -> Id<CLRegion>;

    #[cfg(feature = "CoreLocation_CLRegion")]
    #[objc2::method(sel = "triggerWithRegion:repeats:", managed = "Other")]
    pub unsafe fn triggerWithRegion_repeats(region: &CLRegion, repeats: bool) -> Id<Self>;
}
